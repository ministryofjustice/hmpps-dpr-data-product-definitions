{
  "id": "FnnJKGHxugQAS8cAAHBLNl8LACJIAFe4",
  "name": "MIS IDP Young Person Home Address & Telephone No test for gareth",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "SNI-IDP Young Person"
    ]
  },
  "description": "NOMIS No, Surname, Home address & Telephone No NW<br/>v1.0 This report is for the sole use of Intelligence Directed Placement (NOMS Young Peoples Group)",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3376639/DP1",
      "name": "Home Address",
      "description": "MIS - Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK, AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, DT_OFFENDER_ADDRESSES.FLAT, DT_OFFENDER_ADDRESSES.PREMISE, DT_OFFENDER_ADDRESSES.STREET, DT_OFFENDER_ADDRESSES.LOCALITY, DT_OFFENDER_ADDRESSES.CITY_DESC, DT_OFFENDER_ADDRESSES.COUNTY_DESC, BODIMIS.DIM_REGION.REGION_DESCRIPTION, DT_OFFENDER_ADDRESSES.COUNTRY_DESC, DT_OFFENDER_ADDRESSES.POSTAL_CODE, DT_OFFENDER_ADDRESSES.HOME_TEL_NO, AT_OFFENDER_BOOKING.FIRST_NAME FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, ( select ROW_NUMBER() OVER (PARTITION BY ss.OWNER_ID ORDER BY PRIMARY_FLAG desc, ss.address_active_flag desc, ss.USAGE_ACTIVE_FLAG desc, ss.usages_dttm DESC nulls last) row_seq_filter, ss.* from ( select * from ( select AT_DIM_ADDRESSES.OWNER_ID, AT_DIM_ADDRESS_USAGES.ADDRESS_ID_NK, AT_DIM_ADDRESS_USAGES.ADDRESS_USAGE, AT_DIM_ADDRESS_USAGES.ADDR_USAGE_DESCRIPTION, AT_DIM_ADDRESS_USAGES.ACTIVE_FLAG as USAGE_ACTIVE_FLAG, AT_DIM_ADDRESSES.flat, AT_DIM_ADDRESSES.premise, AT_DIM_ADDRESSES.Street, AT_DIM_ADDRESSES.locality, AT_DIM_ADDRESSES.city_code, AT_DIM_ADDRESSES.city_desc, AT_DIM_ADDRESSES.county_code, AT_DIM_ADDRESSES.county_desc, AT_DIM_ADDRESSES.postal_code, AT_DIM_ADDRESSES.COUNTRY_CODE, AT_DIM_ADDRESSES.country_desc, AT_DIM_ADDRESSES.HOME_TEL_NO, AT_DIM_ADDRESSES.HOME_EXT_NO, AT_DIM_ADDRESSES.NO_FIXED_ADDRESS_FLAG, AT_DIM_ADDRESSES.establishment_sk, AT_DIM_ADDRESSES.PRIMARY_FLAG, AT_DIM_ADDRESSES.active_flag as address_active_flag, AT_DIM_ADDRESS_USAGES.CREATE_DATETIME, AT_DIM_ADDRESS_USAGES.MODIFY_DATETIME, COALESCE(AT_DIM_ADDRESS_USAGES.modify_datetime, AT_DIM_ADDRESS_USAGES.create_datetime) as usages_dttm from BODIMIS.DIM_ADDRESS_USAGES AT_DIM_ADDRESS_USAGES inner join BODIMIS.dim_addresses AT_DIM_ADDRESSES on AT_DIM_ADDRESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) Addr_usages --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODIMIS.DIM_REGION, BODIMIS.DIM_CELL AT_CELL, BODISTAGING.REF_OFFENDERS AT_BODISTAG_REF_OFFENDERS, BODIMIS.DIM_REFERENCE_CODES AT_DIM_REFERENCE_CODES WHERE ( AT_CELL.ESTABLISHMENT_SK=AT_ESTABLISHMENT.ESTABLISHMENT_SK ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_ESTABLISHMENT.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID=AT_BODISTAG_REF_OFFENDERS.OFFENDER_ID(+) ) AND ( AT_BODISTAG_REF_OFFENDERS.ROOT_OFFENDER_ID=DT_OFFENDER_ADDRESSES.OWNER_ID(+) ) AND ( rtrim(DT_OFFENDER_ADDRESSES.COUNTY_CODE)=AT_DIM_REFERENCE_CODES.CODE(+) ) AND ( AT_DIM_REFERENCE_CODES.CODE_DOMAIN(+)='COUNTY' ) AND ( AT_DIM_REFERENCE_CODES.PARENT_CODE=BODIMIS.DIM_REGION.REGION_CODE_NK(+) ) AND ( ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND Case when DT_OFFENDER_ADDRESSES.ADDRESS_USAGE in ('HOME') then 'Y' else 'N' end = 'Y' AND ( DT_OFFENDER_ADDRESSES.ADDRESS_ACTIVE_FLAG='Y' ) AND ( DT_OFFENDER_ADDRESSES.USAGE_ACTIVE_FLAG='Y' ) AND ( AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK in ((SELECT establishment_code from prompt_)) Or 'All' in ((SELECT establishment_code from prompt_)) ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP2",
      "name": "Home Address (1)",
      "description": "MIS - Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, ( select ROW_NUMBER() OVER (PARTITION BY ss.OWNER_ID ORDER BY PRIMARY_FLAG desc, ss.address_active_flag desc, ss.USAGE_ACTIVE_FLAG desc, ss.usages_dttm DESC nulls last) row_seq_filter, ss.* from ( select * from ( select AT_DIM_ADDRESSES.OWNER_ID, AT_DIM_ADDRESS_USAGES.ADDRESS_ID_NK, AT_DIM_ADDRESS_USAGES.ADDRESS_USAGE, AT_DIM_ADDRESS_USAGES.ADDR_USAGE_DESCRIPTION, AT_DIM_ADDRESS_USAGES.ACTIVE_FLAG as USAGE_ACTIVE_FLAG, AT_DIM_ADDRESSES.flat, AT_DIM_ADDRESSES.premise, AT_DIM_ADDRESSES.Street, AT_DIM_ADDRESSES.locality, AT_DIM_ADDRESSES.city_code, AT_DIM_ADDRESSES.city_desc, AT_DIM_ADDRESSES.county_code, AT_DIM_ADDRESSES.county_desc, AT_DIM_ADDRESSES.postal_code, AT_DIM_ADDRESSES.COUNTRY_CODE, AT_DIM_ADDRESSES.country_desc, AT_DIM_ADDRESSES.HOME_TEL_NO, AT_DIM_ADDRESSES.HOME_EXT_NO, AT_DIM_ADDRESSES.NO_FIXED_ADDRESS_FLAG, AT_DIM_ADDRESSES.establishment_sk, AT_DIM_ADDRESSES.PRIMARY_FLAG, AT_DIM_ADDRESSES.active_flag as address_active_flag, AT_DIM_ADDRESS_USAGES.CREATE_DATETIME, AT_DIM_ADDRESS_USAGES.MODIFY_DATETIME, COALESCE(AT_DIM_ADDRESS_USAGES.modify_datetime, AT_DIM_ADDRESS_USAGES.create_datetime) as usages_dttm from BODIMIS.DIM_ADDRESS_USAGES AT_DIM_ADDRESS_USAGES inner join BODIMIS.dim_addresses AT_DIM_ADDRESSES on AT_DIM_ADDRESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) Addr_usages --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODISTAGING.REF_OFFENDERS AT_BODISTAG_REF_OFFENDERS WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID=AT_BODISTAG_REF_OFFENDERS.OFFENDER_ID(+) ) AND ( AT_BODISTAG_REF_OFFENDERS.ROOT_OFFENDER_ID=DT_OFFENDER_ADDRESSES.OWNER_ID(+) ) AND Case when DT_OFFENDER_ADDRESSES.ADDRESS_USAGE in ('HOME') then 'Y' else 'N' end = 'Y'), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "166953.RS",
      "name": "Prisoner Home Address",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376639/DP1",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP1_DO139",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO76",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO7B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO80",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO947",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO948",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO949",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94A",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94C",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO968",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94E",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP1_DO94F",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expecting ). Line 1, Col: 1941.\n  ESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) \u001b[4mAddr_usages\u001b[0m --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODIMIS.DIM_REGION, BODIM]",
      "entityId": "FnnJKGHxugQAS8cAAHBLNl8LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expecting ). Line 1, Col: 1462.\n  ESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) \u001b[4mAddr_usages\u001b[0m --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODISTAGING.REF_OFFENDERS]",
      "entityId": "FnnJKGHxugQAS8cAAHBLNl8LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3376639/DP1",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3376639/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO139 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO76 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO7B does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO80 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO947 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO948 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO949 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94A does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94B does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94C does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO968 does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94D does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94E does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP1_DO94F does not have corresponding dataset schema field",
      "entityId": "166953.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3376639/DP1",
      "entityType": "dataset"
    }
  ]
}