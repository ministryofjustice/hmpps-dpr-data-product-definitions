{
  "id": "ok3L4YQAAazvXUMAkP_FFfm0.cc",
  "name": "MIS HQ SPU Monthly Serious or Sexual Assault Incident Summary with Inc. No Version 1",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "HQ001"
    ]
  },
  "description": "HQ001 v1.0 This report returns the serious and/or sexual assaults for establishments per month. A second tab has the incident number on it. The user enters a date and data is returned for up to twelve months from the start of the month of the date entered, or up until end of the preceding month on which the report is run. Based on INC0012 but with Incident Number added to second tab.",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375377/DP3",
      "name": "MIS Load",
      "description": "MIS Incidents",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT TRUNC(BODIMIS.ETL_LOAD_LOG.LOAD_END_DATETIME) AS LOAD_END_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT LOAD_END_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "LOAD_END_DATE",
            "type": "date",
            "display": "Load End Date",
            "legacyId": "DP3.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375377/DPc",
      "name": "Incidents Serious",
      "description": "MIS Incidents",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT TO_DATE('01/' || TO_CHAR(AT_INCIDENT_DATE.DAY_DATE,'MM/YYYY'),'DD/MM/YYYY'), AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_ID, count(distinct CASE WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION IN ( 'WAS A SERIOUS INJURY SUSTAINED', 'WAS THIS A SEXUAL ASSAULT', 'DID INJURIES RESULT IN DETENTION IN OUTSIDE HOSPITAL AS AN IN-PATIENT', 'WAS MEDICAL TREATMENT FOR CONCUSSION OR INTERNAL INJURIES REQUIRED' ) AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION='YES' THEN AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION ='WHICH SERIOUS INJURIES WERE SUSTAINED' AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION IN ( 'BITES', 'BLACK EYE', 'BROKEN NOSE', 'BROKEN TEETH', 'CRUSHING', 'EXTENSIVE/MULTIPLE BRUISING', 'EXTENSIVE OR MULTIPLE BRUISING', 'FRACTURE', 'SCALD OR BURN', 'STABBING', 'TEMPORARY/PERMANENT BLINDNESS') THEN AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID END) FROM BODIMIS.FACT_INCIDENT_QUESTIONNAIRE AT_INCIDENT_QUESTIONNAIRE, BODIMIS.FACT_INCIDENT AT_INCIDENT, BODIMIS.DIM_ESTABLISHMENT AT_INCIDENT_ESTABLISHMENT, BODIMIS.DIM_DATE AT_INCIDENT_DATE, BODIMIS.DIM_INCIDENT_STATUS AT_INCIDENT_STATUS, BODIMIS.DIM_INCIDENT_QUESTION AT_INCIDENT_QUESTION, BODIMIS.DIM_INCIDENT_ANSWER AT_INCIDENT_ANSWER, (     select a.incident_case_id as INCIDENT_CASE_ID ,max(b.questionnaire_id) as MAX_QUESTIONNARE_ID from bodimis.fact_incident_questionnaire a ,bodimis.dim_incident_question b where a.incident_question_sk=b.incident_question_sk group by a.incident_case_id   )  DT_MOST_RECENT_QUESTIONNAIRE,   BODIMIS.DIM_INCIDENT_TYPE  AT_INCIDENT_TYPE WHERE   ( AT_INCIDENT.INCIDENT_STATUS_SK=AT_INCIDENT_STATUS.INCIDENT_STATUS_SK  )   AND  ( AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_SK=AT_INCIDENT.ESTABLISHMENT_SK  )   AND  ( AT_INCIDENT_DATE.DATE_SK=AT_INCIDENT.INCIDENT_DATE_SK  )   AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID=AT_INCIDENT.INCIDENT_CASE_ID  )   AND  ( AT_INCIDENT_ANSWER.INCIDENT_QUESTION_SK=AT_INCIDENT_QUESTION.INCIDENT_QUESTION_SK  )   AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_ANSWER_SK=AT_INCIDENT_ANSWER.INCIDENT_ANSWER_SK  )   AND  ( AT_INCIDENT_QUESTION.QUESTIONNAIRE_ID=AT_INCIDENT_TYPE.QUESTIONNAIRE_ID  )   AND  ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP'  )   AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID=DT_MOST_RECENT_QUESTIONNAIRE.INCIDENT_CASE_ID  )   AND  ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP'  )   AND  ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP'  )   AND     (    ( ( AT_INCIDENT_QUESTION.QUESTIONNAIRE_ID ) = ( DT_MOST_RECENT_QUESTIONNAIRE.MAX_QUESTIONNARE_ID )  )    AND    ( AT_INCIDENT_DATE.DAY_DATE >=to_date('01/'||to_char(add_months('01-05-2010 00:00:00',0),'MM/YYYY'),'DD/MM/YYYY')  AND   AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months(sysdate,-1))  AND   AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months('01-05-2010 00:00:00',+11))  )    AND    ( (AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION  IN ( 'WAS A SERIOUS INJURY SUSTAINED', 'WAS THIS A SEXUAL ASSAULT', 'DID INJURIES RESULT IN DETENTION IN OUTSIDE HOSPITAL AS AN IN-PATIENT', 'WAS MEDICAL TREATMENT FOR CONCUSSION OR INTERNAL INJURIES REQUIRED') AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION = 'YES' ) or  (AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION ='WHICH SERIOUS INJURIES WERE SUSTAINED' AND  AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION  IN ( 'BITES', 'BLACK EYE', 'BROKEN NOSE', 'BROKEN TEETH', 'CRUSHING', 'EXTENSIVE/MULTIPLE BRUISING', 'EXTENSIVE OR MULTIPLE BRUISING', 'FRACTURE', 'SCALD OR BURN', 'STABBING', 'TEMPORARY/PERMANENT BLINDNESS'))  )    AND    AT_INCIDENT_TYPE.INCIDENT_TYPE_CODE_NK  =  'ASSAULT'   ) GROUP BY   TO_DATE('01/' || TO_CHAR(AT_INCIDENT_DATE.DAY_DATE,'MM/YYYY'),'DD/MM/YYYY), AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_ID), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375377/DPe",
      "name": "Incidents Assault On",
      "description": "MIS Incidents",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT TO_DATE('01/' || TO_CHAR(AT_INCIDENT_DATE.DAY_DATE,'MM/YYYY'),'DD/MM/YYYY'), AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_ID, sum(CASE WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION='WHAT TYPE OF ASSAULT WAS IT' AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION='PRISONER ON OFFICER' THEN 1 ELSE 0 END), sum(CASE WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION='WHAT TYPE OF ASSAULT WAS IT' AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION='PRISONER ON PRISONER' THEN 1 ELSE 0 END), sum(CASE WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION='WHAT TYPE OF ASSAULT WAS IT' AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION='PRISONER ON OTHER' THEN 1 ELSE 0 END), sum(CASE WHEN AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION='WHAT TYPE OF ASSAULT WAS IT' AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION='OTHER' THEN 1 ELSE 0 END) FROM BODIMIS.FACT_INCIDENT_QUESTIONNAIRE AT_INCIDENT_QUESTIONNAIRE, BODIMIS.FACT_INCIDENT AT_INCIDENT, BODIMIS.DIM_ESTABLISHMENT AT_INCIDENT_ESTABLISHMENT, BODIMIS.DIM_DATE AT_INCIDENT_DATE, BODIMIS.DIM_INCIDENT_STATUS AT_INCIDENT_STATUS, BODIMIS.DIM_INCIDENT_QUESTION AT_INCIDENT_QUESTION, BODIMIS.DIM_INCIDENT_ANSWER AT_INCIDENT_ANSWER, BODIMIS.DIM_INCIDENT_TYPE AT_INCIDENT_TYPE WHERE ( AT_INCIDENT.INCIDENT_STATUS_SK=AT_INCIDENT_STATUS.INCIDENT_STATUS_SK ) AND ( AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_SK=AT_INCIDENT.ESTABLISHMENT_SK ) AND ( AT_INCIDENT_DATE.DATE_SK=AT_INCIDENT.INCIDENT_DATE_SK ) AND ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID=AT_INCIDENT.INCIDENT_CASE_ID ) AND ( AT_INCIDENT_ANSWER.INCIDENT_QUESTION_SK=AT_INCIDENT_QUESTION.INCIDENT_QUESTION_SK ) AND ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_ANSWER_SK=AT_INCIDENT_ANSWER.INCIDENT_ANSWER_SK ) AND ( AT_INCIDENT_QUESTION.QUESTIONNAIRE_ID=AT_INCIDENT_TYPE.QUESTIONNAIRE_ID ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP' ) AND ( ( AT_INCIDENT_DATE.DAY_DATE >=to_date('01/'||to_char(add_months((SELECT START_DATE FROM prompt_ /*= #Prompt('Incident Date From:','D',,mono,free,Not_Persistent,User:253) */ ),0),'MM/YYYY'),'DD/MM/YYYY') AND AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months(sysdate,-1)) AND AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months((SELECT START_DATE FROM prompt_ /*= #Prompt('Incident Date From:','D',,mono,free,Not_Persistent,User:253) */ ),+11)) ) AND AT_INCIDENT_TYPE.INCIDENT_TYPE_CODE_NK = 'ASSAULT' AND AT_INCIDENT_ANSWER.QUESTIONNAIRE_ANS_ID IN ( 180540, 179730, 179731, 179732, 179733 ) AND AT_INCIDENT.INCIDENT_CASE_ID IN ( SELECT AT_INCIDENT.INCIDENT_CASE_ID FROM BODIMIS.FACT_INCIDENT_QUESTIONNAIRE AT_INCIDENT_QUESTIONNAIRE, BODIMIS.FACT_INCIDENT AT_INCIDENT, BODIMIS.DIM_INCIDENT_STATUS AT_INCIDENT_STATUS, BODIMIS.DIM_INCIDENT_TYPE AT_INCIDENT_TYPE, BODIMIS.DIM_INCIDENT_QUESTION AT_INCIDENT_QUESTION, BODIMIS.DIM_INCIDENT_ANSWER AT_INCIDENT_ANSWER, (       select  a.incident_case_id as INCIDENT_CASE_ID  ,max(b.questionnaire_id) as MAX_QUESTIONNARE_ID  from  bodimis.fact_incident_questionnaire a  ,bodimis.dim_incident_question b  where  a.incident_question_sk=b.incident_question_sk  group by  a.incident_case_id   )  DT_MOST_RECENT_QUESTIONNAIRE,        BODIMIS.DIM_DATE  AT_INCIDENT_DATE      WHERE        ( AT_INCIDENT.INCIDENT_STATUS_SK=AT_INCIDENT_STATUS.INCIDENT_STATUS_SK  )        AND  ( AT_INCIDENT_DATE.DATE_SK=AT_INCIDENT.INCIDENT_DATE_SK  )        AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID=AT_INCIDENT.INCIDENT_CASE_ID  )        AND  ( AT_INCIDENT_ANSWER.INCIDENT_QUESTION_SK=AT_INCIDENT_QUESTION.INCIDENT_QUESTION_SK  )        AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_ANSWER_SK=AT_INCIDENT_ANSWER.INCIDENT_ANSWER_SK  )        AND  ( AT_INCIDENT_QUESTION.QUESTIONNAIRE_ID=AT_INCIDENT_TYPE.QUESTIONNAIRE_ID  )        AND  ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP'  )        AND  ( AT_INCIDENT_QUESTIONNAIRE.INCIDENT_CASE_ID=DT_MOST_RECENT_QUESTIONNAIRE.INCIDENT_CASE_ID  )        AND  ( AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP'  )        AND          (         AT_INCIDENT_TYPE.INCIDENT_TYPE_CODE_NK  =  'ASSAULT'         AND         ( (AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION   IN (  'WAS A SERIOUS INJURY SUSTAINED',  'WAS THIS A SEXUAL ASSAULT',  'DID INJURIES RESULT IN DETENTION IN OUTSIDE HOSPITAL AS AN IN-PATIENT',  'WAS MEDICAL TREATMENT FOR CONCUSSION OR INTERNAL INJURIES REQUIRED') AND AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION = 'YES' ) or   (AT_INCIDENT_QUESTION.QUESTION_DESCRIPTION ='WHICH SERIOUS INJURIES WERE SUSTAINED' AND   AT_INCIDENT_ANSWER.ANSWER_DESCRIPTION   IN (  'BITES',  'BLACK EYE',  'BROKEN NOSE',  'BROKEN TEETH',  'CRUSHING',  'EXTENSIVE/MULTIPLE BRUISING',  'EXTENSIVE OR MULTIPLE BRUISING',  'FRACTURE',  'SCALD OR BURN',  'STABBING',  'TEMPORARY/PERMANENT BLINDNESS'))  )         AND         ( ( AT_INCIDENT_QUESTION.QUESTIONNAIRE_ID ) = ( DT_MOST_RECENT_QUESTIONNAIRE.MAX_QUESTIONNARE_ID )  )         AND         ( AT_INCIDENT_DATE.DAY_DATE >=to_date('01/'||to_char(add_months((SELECT START_DATE FROM prompt_ /*= #Prompt('Incident Date From:','D',,mono,free,Not_Persistent,User:253) */ ),0),'MM/YYYY'),'DD/MM/YYYY')   AND    AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months(sysdate,-1))   AND    AT_INCIDENT_DATE.DAY_DATE <=LAST_DAY(add_months((SELECT START_DATE FROM prompt_ /*= #Prompt('Incident Date From:','D',,mono,free,Not_Persistent,User:253) */ ),+11))  )        )      )   AND  (AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK!='DUP')   ) GROUP BY   TO_DATE('01/' || TO_CHAR(AT_INCIDENT_DATE.DAY_DATE,'MM/YYYY'),'DD/MM/YYYY), AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_ID), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "start_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Incident Date From:",
          "description": "@Prompt('Incident Date From:','D',,mono,free,Not_Persistent,User:253)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": []
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "204011.RS",
      "name": "Monthly Serious or Sexual Assault Incident Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375377/DPc",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DPC_DO6A5",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A1",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    },
    {
      "id": "201398.RS",
      "name": "With Incident Number",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375377/DPc",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DPC_DO6A5",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A1",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A1",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DPE_DO6A4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Error tokenizing 'LISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_I': Missing ' from 1:3774]",
      "entityId": "ok3L4YQAAazvXUMAkP_FFfm0.cc",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Error tokenizing 'LISHMENT_DESCRIPTION, AT_INCIDENT.INCIDENT_CASE_I': Missing ' from 1:5803]",
      "entityId": "ok3L4YQAAazvXUMAkP_FFfm0.cc",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3375377/DPc",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3375377/DPe",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DPC_DO6A5 does not have corresponding dataset schema field",
      "entityId": "204011.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A1 does not have corresponding dataset schema field",
      "entityId": "204011.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A2 does not have corresponding dataset schema field",
      "entityId": "204011.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A3 does not have corresponding dataset schema field",
      "entityId": "204011.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A4 does not have corresponding dataset schema field",
      "entityId": "204011.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPC_DO6A5 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A1 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A2 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A3 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A4 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A1 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A2 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A3 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DPE_DO6A4 does not have corresponding dataset schema field",
      "entityId": "201398.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375377/DPc",
      "entityType": "dataset"
    }
  ]
}