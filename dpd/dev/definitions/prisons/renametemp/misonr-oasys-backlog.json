{
  "id": "klXV2rUAC2I7MuYA7.8AFE.rcVQ",
  "name": "MISONR OASys Backlog",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "OAS0003 - v00.00.05"
    ]
  },
  "description": "This is a regional report of OASys backlogs in establishments, with a prompt to enter multiple establishments.<br/>OAS0003 - v00.00.05",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Prisoners",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG = 'Y' THEN 'Life' WHEN SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '99' THEN 'Life' WHEN DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'No sentence' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 6 THEN 'Less than 6 Months' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 12 THEN '6 Months to less than 1 Year' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) <> '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 2 THEN '1 Year to less than 2 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 3 THEN '2 Years to less than 3 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 4 THEN '3 Years to less than 4 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02', '03') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 10 THEN '4 Years to less than 10 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) >= 10 THEN '10 Years or more and Less than Life' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'No sentence' ELSE 'Not Categorised' END AS CURRENT_SENTENCE_LENGTH_BAND, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) <= 17 THEN 'Juvenile' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 20 THEN 'Young Person' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 21 THEN 'Adult' END AS ADULT_YOUNG_PERSON_INDICATOR, COUNT(CASE WHEN AT_FACT_MOV_EXT.REASON_CODE IN ('ELR', 'B', 'L') AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'IN' THEN AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY END) AS COUNT_OF_LICENSE_RECALLS, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END AS SENTENCE_START_DATE FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_COURT_CASE_STATUS AT_DIM_COURT_CASE_STATUS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, (SELECT BODIMIS.FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, BODIMIS.FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH FROM BODIMIS.FACT_OFFENDER_SENTENCE WHERE (BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG = 'Y')) DT_CURREFFSENLEN, BODIMIS.DIM_DATE AT_DOB, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_CELL AT_CELL, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE (AT_FACT_SENTENCE.SENTENCE_START_DATE_SK = AT_SENT_START_DATE.DATE_SK (+)) AND (AT_COURT_CASE.COURT_CASE_STATUS_SK = AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_CURREFFSENLEN.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_COURT_CASE.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_CELL.ESTABLISHMENT_SK = AT_ESTABLISHMENT.ESTABLISHMENT_SK) AND (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_CELL.UNIT_4_SK = AT_OFFENDER_BOOKING.LIVING_UNIT_SK) AND (AT_COURT_CASE.COURT_CASE_SK = AT_FACT_SENTENCE.COURT_CASE_SK (+)) AND (AT_ESTABLISHMENT.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND ((AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y') AND CASE WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG = 'Y' THEN 'Life' WHEN SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '99' THEN 'Life' WHEN DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'No sentence' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 6 THEN 'Less than 6 Months' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 12 THEN '6 Months to less than 1 Year' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) <> '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 2 THEN '1 Year to less than 2 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 3 THEN '2 Years to less than 3 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 4 THEN '3 Years to less than 4 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02', '03') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 10 THEN '4 Years to less than 10 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) >= 10 THEN '10 Years or more and Less than Life' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'No sentence' ELSE 'Not Categorised' END <> 'No sentence' AND AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code FROM prompt_)) AND (AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS = 'Active')) GROUP BY AT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG = 'Y' THEN 'Life' WHEN SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '99' THEN 'Life' WHEN DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'No sentence' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 6 THEN 'Less than 6 Months' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 12 THEN '6 Months to less than 1 Year' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) <> '00' AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 2 THEN '1 Year to less than 2 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 3 THEN '2 Years to less than 3 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 4 THEN '3 Years to less than 4 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND NOT SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02', '03') AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 10 THEN '4 Years to less than 10 Years' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) >= 10 THEN '10 Years or more and Less than Life' WHEN AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG IS NULL AND DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'No sentence' ELSE 'Not Categorised' END, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) <= 17 THEN 'Juvenile' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 20 THEN 'Young Person' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 21 THEN 'Adult' END, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END), dataset_ AS (SELECT ESTABLISHMENT_DESCRIPTION, OFFENDER_ID_DISPLAY, CURRENT_SENTENCE_LENGTH_BAND, MAIN_LEGAL_STATUS_CODE, ADULT_YOUNG_PERSON_INDICATOR, COUNT_OF_LICENSE_RECALLS, SENTENCE_START_DATE, 'TBD' AS V_OASYS_OVERDUE, 'TBD' AS V_COUNT_NOMIS_NUMBER FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "ESTABLISHMENT_DESCRIPTION",
            "type": "string",
            "display": "Establishment Name",
            "legacyId": "DP4.DO10129",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP4.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "CURRENT_SENTENCE_LENGTH_BAND",
            "type": "string",
            "display": "Current Sentence Length Band",
            "legacyId": "DP4.DO1ef",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "MAIN_LEGAL_STATUS_CODE",
            "type": "string",
            "display": "Main Legal Status Code",
            "legacyId": "DP4.DO100de",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "ADULT_YOUNG_PERSON_INDICATOR",
            "type": "string",
            "display": "Adult/Young Person Indicator",
            "legacyId": "DP4.DO10083",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "COUNT_OF_LICENSE_RECALLS",
            "type": "double",
            "display": "Count of License Recalls",
            "legacyId": "DP4.DO10810",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "SENTENCE_START_DATE",
            "type": "date",
            "display": "Sentence Start Date",
            "legacyId": "DP4.DO45",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "V_OASYS_OVERDUE",
            "type": "string",
            "display": "V_OASYS_OVERDUE",
            "legacyId": "???",
            "legacySqlClass": "alias"
          },
          {
            "index": 8,
            "name": "V_COUNT_NOMIS_NUMBER",
            "type": "string",
            "display": "V_COUNT_NOMIS_NUMBER",
            "legacyId": "???",
            "legacySqlClass": "alias"
          }
        ]
      }
    },
    {
      "id": "3375896/DP22",
      "name": "OASys",
      "description": "ONR - Ad-hoc Reports",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT ASSESSMENT.DATE_COMPLETED, COUNT(DISTINCT OFFENDER.OFFENDER_ID) AS COUNT_OF_OFFENDERS, OFFENDER.OFFENDER_ID_DISPLAY, REP_OFFENDER_HISTORY.CONTROLLING_OWNER, SUBSTR(ASSESSMENT.CALC_HIGHEST_RISK, 4) AS RISK_LEVEL_, CASE WHEN OFFENDER.PROLIFIC_OFFENDER = '1' THEN 'Yes' WHEN OFFENDER.PROLIFIC_OFFENDER = '0' THEN 'No' END AS PROLIFIC_OFFENDER FROM ASSESSMENT, OFFENDER, REP_OFFENDER_HISTORY WHERE (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (SUBSTR(OFFENDER.OFFENDER_ID_DISPLAY, 1, 10) = TAGMIS_CASELOAD_SECURITY('CQI37G', OFFENDER.OFFENDER_ID_DISPLAY)) AND (ASSESSMENT.ASSESSMENT_ID IN (SELECT LAST_VALUE(ASSESSMENT.assessment_id) OVER (PARTITION BY ASSESSMENT.offender_id ORDER BY ASSESSMENT.date_completed rows BETWEEN CURRENT ROW AND UNBOUNDED following) AS last_ass_for_offender FROM ASSESSMENT, OFFENDER, REP_OFFENDER_HISTORY WHERE (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (ASSESSMENT.single_date_completed = 'Y' AND completed_assessment <> 'Abandoned' AND NOT OFFENDER.Offender_id IS NULL) AND (SUBSTR(OFFENDER.OFFENDER_ID_DISPLAY, 1, 10) = TAGMIS_CASELOAD_SECURITY('CQI37G', OFFENDER.OFFENDER_ID_DISPLAY)) AND (COALESCE(ASSESSMENT.COMPLETED_ASSESSMENT, 'Not Specified') = 'True' AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1) AND REP_OFFENDER_HISTORY.PHYSICAL_LOCATION IN ('Isle of Wight (HMP)'))) AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1)) GROUP BY ASSESSMENT.DATE_COMPLETED, OFFENDER.OFFENDER_ID_DISPLAY, REP_OFFENDER_HISTORY.CONTROLLING_OWNER, SUBSTR(ASSESSMENT.CALC_HIGHEST_RISK, 4), CASE WHEN OFFENDER.PROLIFIC_OFFENDER = '1' THEN 'Yes' WHEN OFFENDER.PROLIFIC_OFFENDER = '0' THEN 'No' END), dataset_ AS (SELECT DATE_COMPLETED, COUNT_OF_OFFENDERS, OFFENDER_ID_DISPLAY, CONTROLLING_OWNER, RISK_LEVEL_, PROLIFIC_OFFENDER FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "DATE_COMPLETED",
            "type": "date",
            "display": "Date Completed",
            "legacyId": "DP22.DO5e5",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "COUNT_OF_OFFENDERS",
            "type": "double",
            "display": "Count of Offenders",
            "legacyId": "DP22.DOcbd",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP22.DO264",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "CONTROLLING_OWNER",
            "type": "string",
            "display": "Controlling Owner",
            "legacyId": "DP22.DO114b",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "RISK_LEVEL_",
            "type": "string",
            "display": "Risk Level (10 6)",
            "legacyId": "DP22.DOf2f",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "PROLIFIC_OFFENDER",
            "type": "string",
            "display": "Prolific Offender",
            "legacyId": "DP22.DOaab",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP24",
      "name": "MIS Load",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP24.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "130164.RS",
      "name": "Regional Summary (HMPS)",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_12_MONTHS_OR_18_TO_21 = 1 AND V_PROBATION_OWNED_B = 0 AND (LICENCE_RECALLS_OR_NOT = 0 OR V_MAIN_LEGAL_STATUS_INDICATE36 <> 1)))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:ESTABLISHMENT_DESCRIPTION",
            "display": "Establishment Name",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10129"
          },
          {
            "name": "$ref:V_OASYS_OVERDUE",
            "display": "Establishment",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum(If([v_Eight Weeks Since Sentence]=\"Y\" And Min(IsNull([v_latest_assessment_after_sentence] In ([NOMIS Number];[Establishment Name]))) = 1; 1) In ([NOMIS Number];[Establishment Name]))"
          },
          {
            "name": "$ref:V_COUNT_NOMIS_NUMBER",
            "display": "OASys Overdue",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Count([NOMIS Number]; Distinct ) In ([Establishment Name])"
          }
        ]
      }
    },
    {
      "id": "135170.RS",
      "name": "Regional Summary (NPS)",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_12_MONTHS_OR_18_TO_21 = 1 AND (V_PROBATION_OWNED_B = 1 OR (LICENCE_RECALLS_OR_NOT = 1 AND V_MAIN_LEGAL_STATUS_INDICATE36 = 1))))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:ESTABLISHMENT_DESCRIPTION",
            "display": "Establishment Name",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10129"
          },
          {
            "name": "$ref:V_OASYS_OVERDUE",
            "display": "Establishment",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum(If([v_Eight Weeks Since Sentence]=\"Y\" And Min(IsNull([v_latest_assessment_after_sentence] In ([NOMIS Number];[Establishment Name]))) = 1; 1) In ([NOMIS Number];[Establishment Name]))"
          },
          {
            "name": "$ref:V_COUNT_NOMIS_NUMBER",
            "display": "OASys Overdue",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Count([NOMIS Number]; Distinct ) In ([Establishment Name])"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::resolveCTEs parse error for : $ref:V_OASYS_OVERDUE :: Error: =Sum(If([v_Eight Weeks Since Sentence]=\"Y\" And Min(IsNull([v_latest_assessment_after_sentence] In ([NOMIS Number];[Establishment Name]))) = 1; 1) In ([NOMIS Number];[Establishment Name])) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klXV2rUAC2I7MuYA7.8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::resolveCTEs parse error for : $ref:V_COUNT_NOMIS_NUMBER :: Error: =Count([NOMIS Number]; Distinct ) In ([Establishment Name]) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klXV2rUAC2I7MuYA7.8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OASYS_OVERDUE :: Error: =Sum(If([v_Eight Weeks Since Sentence]=\"Y\" And Min(IsNull([v_latest_assessment_after_sentence] In ([NOMIS Number];[Establishment Name]))) = 1; 1) In ([NOMIS Number];[Establishment Name])) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klXV2rUAC2I7MuYA7.8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_COUNT_NOMIS_NUMBER :: Error: =Count([NOMIS Number]; Distinct ) In ([Establishment Name]) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klXV2rUAC2I7MuYA7.8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "athenQuery",
      "error": "Error: Error: Query failed: GENERIC_USER_ERROR: Failed To Get Query Passthrough Schema",
      "entityId": "3375896/DP22",
      "entityType": "dataset"
    }
  ]
}