{
  "id": "Fr4GNF6dzw0A0a4BAHDL9F4VACJIAFJ8",
  "name": "MIS Time left to Serve v2",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "SEN0030"
    ]
  },
  "description": "Details the time left to serve for each prisoner of an establishment chosen at runtime. The first tab displays a summary of prisoners within each time band along with unsentenced prisoners and those serving life. The 2nd Tab provides a breakdown of each prisoner sorted by months remaining on current sentence.<br/>SEN0030 v00.00.01  Last Modified: 10/11/16",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP2",
      "name": "Time to Serve",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING_BAH.FIRST_NAME, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL THEN COALESCE(TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)*12),0)+ COALESCE(TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2)),0)+ COALESCE((TRUNC(TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,7,2))/30)),0) ELSE 99*12 END, CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Sentenced' when FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH='00/00/00' then 'Unsentenced' when FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH is null then 'Unsentenced' else 'Sentenced' End, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Life' Else FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH End, AT_CELL.UNIT_1_CODE, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING_BAH, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, BODIMIS.DIM_CELL AT_CELL, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, BODIMIS.FACT_BED_ASSIGNMENT_HISTORY AT_BED_ASSIGNMENT_HISTORY WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK(+) ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING_BAH.OFFENDER_BOOKING_SK=AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK ) AND ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0) */ ) AND ( AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP3",
      "name": "MIS Load Date",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP3.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376639/DP4",
      "name": "Security Category",
      "description": "MIS - Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE WHEN AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassfied' ELSE AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL END AS SECURITY_CATEGORY_CURRENT_LE31 FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK (+)) AND (AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0) */) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.BOOKING_SEQ = 1))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SECURITY_CATEGORY_CURRENT_LE31 FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP4.DO76",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SECURITY_CATEGORY_CURRENT_LE31",
            "type": "string",
            "display": "Security Category - Current Level",
            "legacyId": "DP4.DO832",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP5",
      "name": "Main Offence",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_DIM_OFFENCE.OFFENCE_NAME FROM BODIMIS.DIM_OFFENCE AT_DIM_OFFENCE, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE (AT_FACT_COURT_CHARGE.OFFENCE_SK = AT_DIM_OFFENCE.OFFENCE_SK (+)) AND (AT_COURT_CASE.COURT_CASE_SK = AT_FACT_COURT_CHARGE.COURT_CASE_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_COURT_CASE.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0) */) AND (AT_OFFENDER_BOOKING.BOOKING_SEQ = 1) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y' AND AT_COURT_CASE.MOST_SERIOUS_COUNT = 1))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, OFFENCE_NAME FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Enter Establishment Code:','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP5.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "OFFENCE_NAME",
            "type": "string",
            "display": "Offence Name",
            "legacyId": "DP5.DO4b",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "214316.RS",
      "name": "Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE CURRENT_SENTENCE_LENGTH_BAND IN ('Life','No sentence'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_COUNT_NOMS",
            "display": "No. Of Prisoners",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Count([Time to Serve].[NOMS Number])"
          }
        ]
      }
    },
    {
      "id": "214396.RS",
      "name": "Time to Serve Breakdown",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO10B04",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO104C3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO5D6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_REMAINING_MONTHS",
            "display": "Remaining Months",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=MonthsBetween(CurrentDate();[Release Date (Current)])"
          }
        ]
      }
    },
    {
      "id": "215257.RS",
      "name": "Time to Serve with Sec Cat",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE SECURITY_CATEGORY_CURRENT_LE31 IN ('Unsentenced','Prov A','Cat D','Cat A Hi','Cat B','Cat C','Cat A','Unclassfied'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO10B04",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO104C3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO5D6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_SEC_CAT",
            "display": "Sentenced ?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Security Category - Current Level]"
          },
          {
            "name": "$ref:V_OFFENCE",
            "display": "Main Offence",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Offence Name]"
          },
          {
            "name": "$ref:DP2_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_REMAINING_MONTHS",
            "display": "Remaining Months",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=MonthsBetween(CurrentDate();[Release Date (Current)])"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 3997.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "Fr4GNF6dzw0A0a4BAHDL9F4VACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_SEC_CAT :: ReferenceError: error is not defined",
      "entityId": "Fr4GNF6dzw0A0a4BAHDL9F4VACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OFFENCE :: ReferenceError: error is not defined",
      "entityId": "Fr4GNF6dzw0A0a4BAHDL9F4VACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1EF does not have corresponding dataset schema field",
      "entityId": "214316.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_COUNT_NOMS does not have corresponding dataset schema field",
      "entityId": "214316.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10076 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10B04 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO104C3 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO5D6 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1EF does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_REMAINING_MONTHS does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10076 does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10B04 does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO104C3 does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO5D6 does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_SEC_CAT does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OFFENCE does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1EF does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_REMAINING_MONTHS does not have corresponding dataset schema field",
      "entityId": "215257.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    }
  ]
}