{
  "id": "FmO4210EtAIAEqoBAHB7Ul8KACJIAFe4",
  "name": "MIS Demographic Details for prisoners on a selected date",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "ACC0069 v00.00.01"
    ]
  },
  "description": "To run this report for your whole establishment, enter your establishment code into the Search Pattern box on the prompts screen and hit return. Select all Houseblocks for your establishment, then click right arrow.<br/><br/>This report shows which prisoners have occupied a wing/houseblock/Establishment for a date/range of dates determined by the user who is prompted to enter the location and start and end dates at run time. The report will show demographic details for those prisoners - whilst Age is calculcated to the date selected, most other details are as held currently within the NOMIS Application. It is not possible to snapshot this data. <br/><br/><br/>ACC0069 v00.00.01 ",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Location Occupancy History",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.FIRST_NAME, AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_TIME, AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_END_TIME, AT_TO_CELL.UNIT_4_DESCRIPTION, MOVEMENT_TO_ESTABLISHMENT.ESTABLISHMENT_CODE_NK, AT_OFFENDER_BOOKING_BAH.FIRST_NAME, CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE WHEN AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassfied' ELSE AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL END, NVL(AT_OFFENDER_BOOKING.RELIGION_DESCRIPTION,'Not Specified'), CASE WHEN AT_DIM_ETHNICITY_CODES.CODE='MERGE' Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE='W8' then 'W3' WHEN AT_DIM_ETHNICITY_CODES.CODE='O1' then 'A4' ELSE AT_DIM_ETHNICITY_CODES.CODE END , AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_DESCRIPTION, case when DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' when FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH is not null then decode(to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)),null,null, to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))|| ' yrs ') || decode( to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2)), null,null , to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2))|| ' mths ' ) || decode(to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,7,2)), null,null , to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,7,2))|| ' days ' ) else '' END, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.FACT_BED_ASSIGNMENT_HISTORY AT_BED_ASSIGNMENT_HISTORY, BODIMIS.DIM_CELL AT_TO_CELL, BODIMIS.DIM_ESTABLISHMENT MOVEMENT_TO_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING_BAH, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.LIVING_UNIT_SK=AT_TO_CELL.UNIT_4_SK(+) ) AND ( AT_TO_CELL.ESTABLISHMENT_SK=MOVEMENT_TO_ESTABLISHMENT.ESTABLISHMENT_SK(+) ) AND ( AT_DIM_ETHNICITY_CODES.CODE(+)=AT_OFFENDER_BOOKING.ETHNICITY_CODE ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING_BAH.OFFENDER_BOOKING_SK=AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK ) AND ( AT_TO_CELL.UNIT_1_DESCRIPTION IN ('ACI-B') AND ( MOVEMENT_TO_ESTABLISHMENT.ESTABLISHMENT_CODE_NK IN (SELECT SAC.CASELOAD_ID FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC WHERE SAC.USERNAME = (SELECT username from context_) ) ) AND ( (trunc((AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_TIME )) <= '01-11-2019 00:00:00' and AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_END_TIME IS NULL ) OR (trunc((AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_TIME )) <= '01-11-2019 00:00:00' AND AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_END_TIME >= '01-11-2019 00:00:00') ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP3",
      "name": "MIS Load Log",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP3.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "133306.RS",
      "name": "Location History",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4_DO10162",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO103CA",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10B04",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10085",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_TRUNCATE_DAYS_BETWEEN",
            "display": "Age at Time",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Truncate([v_Days_Between];0)"
          },
          {
            "name": "$ref:DP4_DO10832",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100B3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO1009B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100B5",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100DF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO42",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO565",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 3118.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "FmO4210EtAIAEqoBAHB7Ul8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_TRUNCATE_DAYS_BETWEEN :: Error: =Truncate([v_Days_Between];0) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "FmO4210EtAIAEqoBAHB7Ul8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10162 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO103CA does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10076 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1007B does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10B04 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10085 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TRUNCATE_DAYS_BETWEEN does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10832 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100B3 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1009B does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100B5 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100DF does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO42 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO565 does not have corresponding dataset schema field",
      "entityId": "133306.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    }
  ]
}