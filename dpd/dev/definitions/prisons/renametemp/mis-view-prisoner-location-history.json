{
  "id": "ok4MkSMAA7SCKS8Ak._E63FUUCs",
  "name": "MIS View Prisoner Location History",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "ACC0008 v00.01.04 drop9.6"
    ]
  },
  "description": "Displays the cell location history for a specified prisoner for the current active booking. It is generally used as a result of an investigation needing to know with whom a prisoner has previously shared a cell.<br/>ACC0008 v00.01.04 Last Modified: 22/04/09",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Offender Information",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.MIDDLE_NAME_1, AT_OFFENDER_BOOKING.AGE, Case When AT_OFFENDER_BOOKING.YOUNG_PERSON_INDICATOR='Young Offender' then 'Young Person' else AT_OFFENDER_BOOKING.YOUNG_PERSON_INDICATOR End, CASE WHEN AT_DOB.DAY_DATE <> '31/12/9000' THEN AT_DOB.DAY_DATE END, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), Case when AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE = 'Pending' OR AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE IS NULL then 'Unclassified' else AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE end , DT_CURRENT_KEY_DATES.CURR_RELEASE_DATE, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH, AT_CELL.UNIT_4_DESCRIPTION, AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_TIME, AT_BED_ASSIGNMENT_HISTORY.ASSIGNMENT_END_TIME, AT_TO_CELL.UNIT_4_DESCRIPTION, AT_OFFENDER_BOOKING.GENDER_DESCRIPTION, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_DESCRIPTION, DT_MAIN_OFFENCE.MAIN_OFFENCE_NAME FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH as CURR_EFFECTIVE_SENTENCE_LENGTH, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, life_sentence_flag From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.FACT_CASE_SENTENCE_TERM AT_FACT_CASE_SENTENCE_TERM, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_SENTENCE.OFFENDER_BOOKING_SK = AT_FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK(+) and AT_FACT_SENTENCE.SENTENCE_SEQ = AT_FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_KEY_DATES, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_CELL AT_CELL, BODIMIS.FACT_BED_ASSIGNMENT_HISTORY AT_BED_ASSIGNMENT_HISTORY, BODIMIS.DIM_CELL AT_TO_CELL, ( SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK, AT_DIM_OFFENCE.OFFENCE_CJIT_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG=('Y') THEN ( CASE When AT_DIM_OFFENCE_INDICATOR.INDICATOR_CODE In ('D', 'ERS', 'M','RA','V','S') Then AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION When AT_DIM_OFFENCE_INDICATOR.INDICATOR_CODE='SOR' Then 'Sexual' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%ARSON%' Then 'Arson' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%DRUG%' Then 'Drug Offences' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%FIREARM%' Then 'Firearms' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%ESCAPE%' Then 'Escape' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%VIOLENT%' Then 'Violent' When AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION like '%SEX%' Then 'Sexual' Else 'Unclassified' END ) ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_CATEGORY, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG=('Y') THEN AT_DIM_OFFENCE.OFFENCE_CODE_NK ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG=('Y') THEN AT_DIM_OFFENCE.OFFENCE_NAME ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_NAME, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG=('Y') THEN AT_DIM_OFFENCE.LIDS_OFFENCE_NUMCODE ELSE 'NO MAIN OFFENCE' END AS LIDS_MAIN_OFFENCE_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG=('Y') THEN AT_DIM_OFFENCE.LIDS_DESCRIPTION ELSE 'NO MAIN OFFENCE' END AS LIDS_MAIN_OFFENCE_DESCRIPTION, AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.DIM_OFFENCE_INDICATOR AT_DIM_OFFENCE_INDICATOR, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE, BODIMIS.DIM_OFFENCE AT_DIM_OFFENCE WHERE AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG='Y' AND ( AT_FACT_COURT_CHARGE.OFFENCE_SK=AT_DIM_OFFENCE.OFFENCE_SK ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_CHARGE.COURT_CASE_SK ) AND ( AT_DIM_OFFENCE.OFFENCE_SK=AT_DIM_OFFENCE_INDICATOR.OFFENCE_SK ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE WHERE ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_CHARGE.COURT_CASE_SK ) AND ( AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y' ) ) ) UNION SELECT DOF.OFFENDER_BOOKING_SK, 'NO MAIN OFFENCE' AS OFFENCE_CJIT_CODE, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_CATEGORY, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_CODE, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_NAME, 'NO MAIN OFFENCE' AS LIDS_MAIN_OFFENCE_CODE, 'NO MAIN OFFENCE' AS LIDS_MAIN_OFFENCE_DESCRIPTION, 'N' AS MOST_SERIOUS_FLAG FROM BODIMIS.DIM_OFFENDER_BOOKING DOF WHERE DOF.OFFENDER_BOOKING_SK NOT IN (SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE WHERE AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_CHARGE.COURT_CASE_SK AND AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y' ) ) DT_MAIN_OFFENCE WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_MAIN_OFFENCE.OFFENDER_BOOKING_SK ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.LIVING_UNIT_SK=AT_TO_CELL.UNIT_4_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DHUMPHREYS') AND (CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 OR CSL.ENDYEAR = '2999' ) ) ) AND ( ( AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' or AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG IS NULL ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A0018AC' ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_TO_CELL.UNIT_4_DESCRIPTION <> 'Not Applicable' )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP5",
      "name": "MIS Load Log",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT TRUNC(BODIMIS.ETL_LOAD_LOG.LOAD_END_DATETIME) AS LOAD_END_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT LOAD_END_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "LOAD_END_DATE",
            "type": "date",
            "display": "Load End Date",
            "legacyId": "DP5.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "97591.RS",
      "name": "View Prisoner Location History",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-section",
        "field": [
          {
            "name": "$ref:DP4_DO100E1",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO2D0",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO2E6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10136",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expecting ). Line 1, Col: 4953.\n  NTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG=\u001b[4m'Y'\u001b[0m --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_KEY_DATES, BODIMIS.FACT_OFFENDER_SENTENC]",
      "entityId": "ok4MkSMAA7SCKS8Ak._E63FUUCs",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100E1 does not have corresponding dataset schema field",
      "entityId": "97591.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO2D0 does not have corresponding dataset schema field",
      "entityId": "97591.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO2E6 does not have corresponding dataset schema field",
      "entityId": "97591.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10136 does not have corresponding dataset schema field",
      "entityId": "97591.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    }
  ]
}