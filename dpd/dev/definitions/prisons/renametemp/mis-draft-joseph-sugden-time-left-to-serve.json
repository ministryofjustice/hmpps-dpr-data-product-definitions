{
  "id": "Fip7Q1vklwoAfAoBAHBL1F4DACJIAFe4",
  "name": "MIS Draft Joseph Sugden Time left to Serve",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "SEN0030"
    ]
  },
  "description": "Details the time left to serve for each prisoner of an establishment chosen at runtime. The first tab displays a summary of prisoners within each time band along with unsentenced prisoners and those serving life. The 2nd Tab provides a breakdown of each prisoner sorted by months remaining on current sentence.<br/>SEN0030 v00.00.01  Last Modified: 10/11/16",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP2",
      "name": "Time to Serve",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING_BAH.FIRST_NAME, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL THEN COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)*12),0)+ COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)),0)+ COALESCE((TRUNC(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,7,2))/30)),0) ELSE 99*12 END, CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Sentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH='00/00/00' then 'Unsentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'Unsentenced' else 'Sentenced' End, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Life' Else DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH End, AT_CELL.UNIT_1_CODE, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, DT_CURRENT_KEY_DATES.SSD, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, DT_CURRENT_KEY_DATES.CURR_CRD_DATE FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE end as CURR_ROTL_DATE, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE end as CURR_ERSED_DATE, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE end as CURR_TERSED_DATE, at_fact_offender_sentence.tused_date_sk as tused_sk, nullif(td.day_date, to_date('31/12/9000', 'DD/MM/YYYY')) as tused From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, BODIMIS.DIM_DATE AT_ROTL_DATE, BODIMIS.DIM_DATE AT_ERSED_DATE, BODIMIS.DIM_DATE AT_TERSED_DATE, bodimis.dim_date td where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ROTL_DATE_SK=AT_ROTL_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ERSED_DATE_SK=AT_ERSED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TERSED_DATE_SK=AT_TERSED_DATE.DATE_SK(+) and at_fact_offender_sentence.tused_date_sk = td.date_sk(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when at_sed_date.day_date <> '31/12/9000' then at_sed_date.day_date end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE END, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE END, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE END, at_fact_offender_sentence.tused_date_sk, td.day_date ) DT_CURRENT_KEY_DATES, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING_BAH, ( SELECT BODIMIS.FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, BODIMIS.FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH FROM BODIMIS.FACT_OFFENDER_SENTENCE WHERE ( BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' ) ) DT_CURREFFSENLEN, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, BODIMIS.DIM_CELL AT_CELL, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, BODIMIS.FACT_BED_ASSIGNMENT_HISTORY AT_BED_ASSIGNMENT_HISTORY, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURREFFSENLEN.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_SENTENCE.COURT_CASE_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING_BAH.OFFENDER_BOOKING_SK=AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK ) AND ( ( AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code from prompt_)) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP3",
      "name": "MIS Load Date",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP3.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP4",
      "name": "NPS CRC",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_REF_REHAB_DECISION_CODE.CODE, AT_REF_REHAB_DECISION_CODE.DESCRIPTION, AT_DATE_REHAB_DECISION.DAY_DATE, AT_DATE_REHAB_DECISION_RECORD.DAY_DATE AS REHAB_DECISION_RECORD_DATE, BODIMIS.FACT_OFFENDER_REHAB.DECISION_ACTIVE_FLAG, BODIMIS.FACT_OFFENDER_REHAB.DECISION_COMMENT_TEXT, BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_ACTIVE_FLAG, BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_COMMENT_TEXT, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.CODE_NK END AS REHAB_PROVIDER_CODE, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.DESCRIPTION END AS REHAB_PROVIDER_DESCRIPTION, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.TYPE END AS REHAB_PROVIDER_TYPE, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.EXPIRY_DATE END AS REHAB_PROVIDER_EXPIRY_DATE, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.ACTIVE_FLAG END AS REHAB_PROVIDER_ACTIVE_FLAG FROM BODIMIS.DIM_DATE AT_DATE_REHAB_DECISION, BODIMIS.DIM_DATE AT_DATE_REHAB_DECISION_RECORD, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_REFERENCE_CODES AT_REF_REHAB_DECISION_CODE, BODIMIS.FACT_OFFENDER_REHAB, BODIMIS.DIM_REHAB_PROVIDER WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = BODIMIS.FACT_OFFENDER_REHAB.OFFENDER_BOOKING_SK (+)) AND (BODIMIS.FACT_OFFENDER_REHAB.REHAB_PROVIDER_SK = BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK (+)) AND (AT_DATE_REHAB_DECISION.DATE_SK (+) = BODIMIS.FACT_OFFENDER_REHAB.DECISION_DATE_SK) AND (AT_DATE_REHAB_DECISION_RECORD.DATE_SK (+) = BODIMIS.FACT_OFFENDER_REHAB.DECISION_RECORD_DATE_SK) AND (BODIMIS.FACT_OFFENDER_REHAB.DECISION_CODE_SK = AT_REF_REHAB_DECISION_CODE.REFERENCE_CODE_SK (+)) AND (AT_REF_REHAB_DECISION_CODE.CODE_DOMAIN (+) = 'ALL_DEC') AND (AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code FROM prompt_)) AND (AT_OFFENDER_BOOKING.BOOKING_SEQ = 1) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, CODE, DESCRIPTION, DAY_DATE, REHAB_DECISION_RECORD_DATE, DECISION_ACTIVE_FLAG, DECISION_COMMENT_TEXT, PROVIDER_ACTIVE_FLAG, PROVIDER_COMMENT_TEXT, REHAB_PROVIDER_CODE, REHAB_PROVIDER_DESCRIPTION, REHAB_PROVIDER_TYPE, REHAB_PROVIDER_EXPIRY_DATE, REHAB_PROVIDER_ACTIVE_FLAG FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP4.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "CODE",
            "type": "string",
            "display": "Rehab Decision Code",
            "legacyId": "DP4.DO10b3f",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "DESCRIPTION",
            "type": "string",
            "display": "Rehab Decision Description",
            "legacyId": "DP4.DO10b40",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Rehab Decision Date",
            "legacyId": "DP4.DO10b53",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "REHAB_DECISION_RECORD_DATE",
            "type": "date",
            "display": "Rehab Decision Record Date",
            "legacyId": "DP4.DO10b54",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "DECISION_ACTIVE_FLAG",
            "type": "string",
            "display": "Rehab Decision Active Flag",
            "legacyId": "DP4.DO10b33",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "DECISION_COMMENT_TEXT",
            "type": "string",
            "display": "Rehab Decision Comment Text",
            "legacyId": "DP4.DO10b34",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "PROVIDER_ACTIVE_FLAG",
            "type": "string",
            "display": "Rehab Decision Provider Active Flag",
            "legacyId": "DP4.DO10b2d",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "PROVIDER_COMMENT_TEXT",
            "type": "string",
            "display": "Rehab Decision Provider Comment Text",
            "legacyId": "DP4.DO10b2e",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "REHAB_PROVIDER_CODE",
            "type": "string",
            "display": "Rehab Provider Code",
            "legacyId": "DP4.DO10b37",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "REHAB_PROVIDER_DESCRIPTION",
            "type": "string",
            "display": "Rehab Provider Description",
            "legacyId": "DP4.DO10b38",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "REHAB_PROVIDER_TYPE",
            "type": "string",
            "display": "Rehab Provider Type",
            "legacyId": "DP4.DO10b39",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "REHAB_PROVIDER_EXPIRY_DATE",
            "type": "date",
            "display": "Rehab Provider Expiry Date",
            "legacyId": "DP4.DO10b3b",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "REHAB_PROVIDER_ACTIVE_FLAG",
            "type": "string",
            "display": "Rehab Provider Active Flag",
            "legacyId": "DP4.DO10b3c",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP5",
      "name": "Time to Serve (1)",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING_BAH.FIRST_NAME, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL THEN COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)*12),0)+ COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)),0)+ COALESCE((TRUNC(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,7,2))/30)),0) ELSE 99*12 END, CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Sentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH='00/00/00' then 'Unsentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'Unsentenced' else 'Sentenced' End, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Life' Else DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH End, AT_CELL.UNIT_1_CODE, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, DT_CURRENT_KEY_DATES.SSD, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, DT_CURRENT_KEY_DATES.CURR_CRD_DATE, AT_EVENT_DATE.DAY_DATE, AT_DIM_COURT_EVENT_TYPE.COURT_EVENT_TYPE_DESCRIPTION, AT_FACT_COURT_EVENT.OUTCOME, MAX(CASE WHEN AT_EVENT_DATE.DAY_DATE < SYSDATE THEN AT_EVENT_DATE.DAY_DATE ELSE NULL END), AT_DIM_OUTCOME_REASON_EVENT.OUTCOME_REASON_DESCRIPTION, MAX(CASE WHEN AT_EVENT_DATE.DAY_DATE >= SYSDATE THEN AT_EVENT_DATE.DAY_DATE ELSE NULL END), AT_DIM_REF_CODES_CRG_RESULT1.DESCRIPTION, AT_DIM_OUTCOME_RSN_CRG_RESULT1.OUTCOME_REASON_DESCRIPTION FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_EVENT_DATE, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE end as CURR_ROTL_DATE, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE end as CURR_ERSED_DATE, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE end as CURR_TERSED_DATE, at_fact_offender_sentence.tused_date_sk as tused_sk, nullif(td.day_date, to_date('31/12/9000', 'DD/MM/YYYY')) as tused From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, BODIMIS.DIM_DATE AT_ROTL_DATE, BODIMIS.DIM_DATE AT_ERSED_DATE, BODIMIS.DIM_DATE AT_TERSED_DATE, bodimis.dim_date td where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ROTL_DATE_SK=AT_ROTL_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ERSED_DATE_SK=AT_ERSED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TERSED_DATE_SK=AT_TERSED_DATE.DATE_SK(+) and at_fact_offender_sentence.tused_date_sk = td.date_sk(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when at_sed_date.day_date <> '31/12/9000' then at_sed_date.day_date end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE END, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE END, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE END, at_fact_offender_sentence.tused_date_sk, td.day_date ) DT_CURRENT_KEY_DATES, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_OUTCOME_REASON AT_DIM_OUTCOME_REASON_EVENT, BODIMIS.DIM_OUTCOME_REASON AT_DIM_OUTCOME_RSN_CRG_RESULT1, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_COURT_EVENT_TYPE AT_DIM_COURT_EVENT_TYPE, BODIMIS.FACT_COURT_EVENT AT_FACT_COURT_EVENT, BODIMIS.DIM_COURT_CASE_STATUS AT_DIM_COURT_CASE_STATUS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING_BAH, ( SELECT BODIMIS.FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, BODIMIS.FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH FROM BODIMIS.FACT_OFFENDER_SENTENCE WHERE ( BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' ) ) DT_CURREFFSENLEN, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, BODIMIS.DIM_CELL AT_CELL, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, BODIMIS.DIM_REFERENCE_CODES AT_DIM_REF_CODES_CRG_RESULT1, BODIMIS.FACT_BED_ASSIGNMENT_HISTORY AT_BED_ASSIGNMENT_HISTORY, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_FACT_COURT_EVENT.COURT_EVENT_TYPE_SK=AT_DIM_COURT_EVENT_TYPE.COURT_EVENT_TYPE_SK(+) ) AND ( AT_FACT_COURT_EVENT.EVENT_DATE_SK=AT_EVENT_DATE.DATE_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_CHARGE.COURT_CASE_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_EVENT.COURT_CASE_SK(+) ) AND ( AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_STATUS_SK=AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURREFFSENLEN.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_FACT_COURT_EVENT.OUTCOME=AT_DIM_OUTCOME_REASON_EVENT.OUTCOME_REASON_NK(+) ) AND ( AT_FACT_COURT_CHARGE.RESULT_1_DESC_SK=AT_DIM_OUTCOME_RSN_CRG_RESULT1.OUTCOME_REASON_SK(+) ) AND ( AT_FACT_COURT_CHARGE.RESULT_1_IND_SK=AT_DIM_REF_CODES_CRG_RESULT1.REFERENCE_CODE_SK(+) and AT_DIM_REF_CODES_CRG_RESULT1.CODE_DOMAIN(+) ='OFF_RESULT' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_SENTENCE.COURT_CASE_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING_BAH.OFFENDER_BOOKING_SK=AT_BED_ASSIGNMENT_HISTORY.OFFENDER_BOOKING_SK ) AND ( ( AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code from prompt_)) AND ( AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS = 'Active' ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING_BAH.FIRST_NAME, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL THEN COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)*12),0)+ COALESCE(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)),0)+ COALESCE((TRUNC(TO_NUMBER(SUBSTR(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,7,2))/30)),0) ELSE 99*12 END, CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Sentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH='00/00/00' then 'Unsentenced' when DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'Unsentenced' else 'Sentenced' End, Case When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' then 'Life' Else DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH End, AT_CELL.UNIT_1_CODE, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, DT_CURRENT_KEY_DATES.SSD, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, DT_CURRENT_KEY_DATES.CURR_CRD_DATE, AT_EVENT_DATE.DAY_DATE, AT_DIM_COURT_EVENT_TYPE.COURT_EVENT_TYPE_DESCRIPTION, AT_FACT_COURT_EVENT.OUTCOME, AT_DIM_OUTCOME_REASON_EVENT.OUTCOME_REASON_DESCRIPTION, AT_DIM_REF_CODES_CRG_RESULT1.DESCRIPTION, AT_DIM_OUTCOME_RSN_CRG_RESULT1.OUTCOME_REASON_DESCRIPTION), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "214316.RS",
      "name": "Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE TIME_TO_SERVE_CURRENT_SENTEN42 IN ('Life','No sentence'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_COUNT_NOMS",
            "display": "No. Of Prisoners",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Count([Time to Serve].[NOMS Number])"
          }
        ]
      }
    },
    {
      "id": "214396.RS",
      "name": "Time to Serve Breakdown",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE NOMS_NUMBER IN ('A3927DH'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO10B04",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO104C3",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO45",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO32D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO48",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO5D6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_REMAINING_MONTHS",
            "display": "Remaining Months",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=MonthsBetween(CurrentDate();[Time to Serve].[Release Date (Current)])"
          }
        ]
      }
    },
    {
      "id": "215001.RS",
      "name": "Report 3",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (REHAB_PROVIDER_ACTIVE_FLAG IN ('Y') AND REHAB_DECISION_ACTIVE_FLAG IN ('Y') AND REHAB_DECISION_PROVIDER_ACTI35 IN ('Y')))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:CODE",
            "display": "Rehab Decision Code",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b3f"
          },
          {
            "name": "$ref:DESCRIPTION",
            "display": "Rehab Decision Description",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b40"
          },
          {
            "name": "$ref:DAY_DATE",
            "display": "Rehab Decision Date",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b53"
          },
          {
            "name": "$ref:REHAB_DECISION_RECORD_DATE",
            "display": "Rehab Decision Record Date",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b54"
          },
          {
            "name": "$ref:DECISION_ACTIVE_FLAG",
            "display": "Rehab Decision Active Flag",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b33"
          },
          {
            "name": "$ref:DECISION_COMMENT_TEXT",
            "display": "Rehab Decision Comment Text",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b34"
          },
          {
            "name": "$ref:PROVIDER_ACTIVE_FLAG",
            "display": "Rehab Decision Provider Active Flag",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b2d"
          },
          {
            "name": "$ref:PROVIDER_COMMENT_TEXT",
            "display": "Rehab Decision Provider Comment Text",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b2e"
          },
          {
            "name": "$ref:REHAB_PROVIDER_CODE",
            "display": "Rehab Provider Code",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b37"
          },
          {
            "name": "$ref:REHAB_PROVIDER_DESCRIPTION",
            "display": "Rehab Provider Description",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b38"
          },
          {
            "name": "$ref:REHAB_PROVIDER_TYPE",
            "display": "Rehab Provider Type",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b39"
          },
          {
            "name": "$ref:REHAB_PROVIDER_EXPIRY_DATE",
            "display": "Rehab Provider Expiry Date",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b3b"
          },
          {
            "name": "$ref:REHAB_PROVIDER_ACTIVE_FLAG",
            "display": "Rehab Provider Active Flag",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10b3c"
          }
        ]
      }
    },
    {
      "id": "215065.RS",
      "name": "Report 4",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP5",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE V_MAX_EVENT_DATE IN (1))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP5_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO48",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_CRD_MINUS_SENTENCE_DATE",
            "display": "=NameOf([v_CRD_minus_Sentence_Date])",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=DaysBetween([v_max_court_date?];[Time to Serve (1)].[CRD (Conditional Release Date)])"
          },
          {
            "name": "$ref:DP5_DO25C",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO61A",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO331",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO5E4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO2EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO25A",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO5C2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO25B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO259",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_MAX_COURT_DATE_",
            "display": "=NameOf([v_max_court_date?])",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Max ([Last Appearance] In ([NOMS Number]))"
          },
          {
            "name": "$ref:V_MAX_EVENT_DATE",
            "display": "=NameOf([v_max=event_date])",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([Court Event Date] = [v_max_court_date?]; 1;0)"
          },
          {
            "name": "$ref:DP5_DO5D6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO10B04",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP5_DO614",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 10178.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "Fip7Q1vklwoAfAoBAHBL1F4DACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 10976.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "Fip7Q1vklwoAfAoBAHBL1F4DACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_MAX_COURT_DATE_ :: Error: =Max ([Last Appearance] In ([NOMS Number])) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "Fip7Q1vklwoAfAoBAHBL1F4DACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP5",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1EF does not have corresponding dataset schema field",
      "entityId": "214316.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_COUNT_NOMS does not have corresponding dataset schema field",
      "entityId": "214316.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10076 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10B04 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO104C3 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO45 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO32D does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO48 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO5D6 does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1EF does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_REMAINING_MONTHS does not have corresponding dataset schema field",
      "entityId": "214396.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO1EF does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO48 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_CRD_MINUS_SENTENCE_DATE does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO25C does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO61A does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO331 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO5E4 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO2EF does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO25A does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO1007B does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO5C2 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO25B does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO259 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MAX_COURT_DATE_ does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MAX_EVENT_DATE does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO5D6 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO10B04 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO614 does not have corresponding dataset schema field",
      "entityId": "215065.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    }
  ]
}