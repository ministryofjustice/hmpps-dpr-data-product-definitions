{
  "id": "FgR0JmBTmwcAO_4BAHBb_V4bACJIAFJ8",
  "name": "MIS Private and Savings Balances Report NSR1935",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "FIN0088 v00.00.1"
    ]
  },
  "description": "Lists Private and Savings balances for all current prisoners for a specified account date and Caseload Id(s). Below the current prisoners' balances is a summary of balances held for any Current, non-current and all prisoners.<br/>Report is split by Gender, IEP, Young/Adult Indicator, FN? (Y/N) and contains a table of monies held in HS Estate.<br/>FIN0088 - v2.0 Date Modified: 12/02/2021",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3376115/DP2",
      "name": "Current",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, sum(decode(( AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE ),'2101',( AT_FACT_OFF_ACC_HIST_BALANCE.GROSS_BALANCE ),0)), sum(decode(( AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE ),'2103',( AT_FACT_OFF_ACC_HIST_BALANCE.GROSS_BALANCE ),0)), sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)), AT_OFFENDER_BOOKING.GENDER_CODE, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) <= 17 then 'Juvenile' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) between 18 and 20 then 'Young Person' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) >= 21 then 'Adult' END, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE FROM BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code from prompt_)) AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code from prompt_)) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date('08-02-2021 00:00:00') ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.GENDER_CODE, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) <= 17 then 'Juvenile' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) between 18 and 20 then 'Young Person' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) >= 21 then 'Adult' END, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP5",
      "name": "All Prisoners",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT sum(decode(( AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE ),'2101',( AT_FACT_OFF_ACC_HIST_BALANCE.GROSS_BALANCE ),0)), sum(decode(( AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE ),'2103',( AT_FACT_OFF_ACC_HIST_BALANCE.GROSS_BALANCE ),0)), sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)), AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), AT_OFFENDER_BOOKING.GENDER_CODE, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) <= 17 then 'Juvenile' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) between 18 and 20 then 'Young Person' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) >= 21 then 'Adult' END, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE FROM BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code from prompt_)) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date('08-02-2021 00:00:00') ) ) GROUP BY AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), AT_OFFENDER_BOOKING.GENDER_CODE, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) <= 17 then 'Juvenile' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) between 18 and 20 then 'Young Person' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) >= 21 then 'Adult' END, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP7",
      "name": "MIS Load",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP7.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376115/DP8",
      "name": "Bookings",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12) AS OFFENDER_AGE, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) <= 17 THEN 'Juvenile' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 20 THEN 'Young Person' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 21 THEN 'Adult' END AS ADULT_YOUNG_PERSON_INDICATOR, AT_OFFENDER_BOOKING.GENDER_CODE, COALESCE(AT_OFFENDER_BOOKING.IEP_BAND, '** Incentive Level Missing **') AS IEP_BAND, AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB WHERE (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND ((AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code FROM prompt_)) AND ('Y' = 'Y'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SURNAME, OFFENDER_AGE, ADULT_YOUNG_PERSON_INDICATOR, GENDER_CODE, IEP_BAND, NATIONALITY_DESCRIPTION, SUM(CURRENT.SUM_OF_PRIVATE_CASH_ACCOUNT_AVAILABLE_OPENING_BALANCE || V_PRIVATE_HOLD_BALANCE_CURRENT) AS V_CURR_BALANCE_PRIVATE, SUM(V_TOTAL_ALL) - SUM(V_CURR_BALANCE_PRIVATE) AS V_TOTAL_NON_CURRENT, SUM(ALL_PRISONERS.SUM_OF_PRIVATE_CASH_ACCOUNT_AVAILABLE_OPENING_BALANCE || V_PRIVATE_HOLD_BALANCE_ALL_PRISONERS) AS V_TOTAL_ALL, CASE WHEN NATIONALITY_DESCRIPTION = 'British' THEN 'N' ELSE 'Y' END AS V_FN FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP8.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP8.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "OFFENDER_AGE",
            "type": "double",
            "display": "Offender Age",
            "legacyId": "DP8.DO10082",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "ADULT_YOUNG_PERSON_INDICATOR",
            "type": "string",
            "display": "Adult/Young Person Indicator",
            "legacyId": "DP8.DO10083",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "GENDER_CODE",
            "type": "string",
            "display": "Gender Code",
            "legacyId": "DP8.DO100a8",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "IEP_BAND",
            "type": "string",
            "display": "IEP Band",
            "legacyId": "DP8.DO100e4",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "NATIONALITY_DESCRIPTION",
            "type": "string",
            "display": "Nationality Description",
            "legacyId": "DP8.DO100b5",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "V_CURR_BALANCE_PRIVATE",
            "type": "string",
            "display": "V_CURR_BALANCE_PRIVATE",
            "legacyId": "???",
            "legacySqlClass": "alias"
          },
          {
            "index": 8,
            "name": "V_TOTAL_NON_CURRENT",
            "type": "string",
            "display": "V_TOTAL_NON_CURRENT",
            "legacyId": "???",
            "legacySqlClass": "alias"
          },
          {
            "index": 9,
            "name": "V_TOTAL_ALL",
            "type": "string",
            "display": "V_TOTAL_ALL",
            "legacyId": "???",
            "legacySqlClass": "alias"
          },
          {
            "index": 10,
            "name": "V_FN",
            "type": "string",
            "display": "V_FN",
            "legacyId": "???",
            "legacySqlClass": "alias"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "137139.RS",
      "name": "Private By NOMS Number",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP8",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:V_CURR_BALANCE_PRIVATE",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum([Current].[Sum of Private Cash Account Available Opening-Balance]+[v_private_hold_balance_current])"
          },
          {
            "name": "$ref:V_TOTAL_NON_CURRENT",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum([v_total_all])-Sum([v_Curr_Balance_Private])\n"
          },
          {
            "name": "$ref:DP5_DO5F",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_TOTAL_ALL",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum([All Prisoners].[Sum of Private Cash Account Available Opening-Balance]+[v_private_hold_balance_all_prisoners])"
          }
        ]
      }
    },
    {
      "id": "137706.RS",
      "name": "Private Totals",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP5",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE ALL_PRISONERS_ACCOUNT_CASELO33 IN ('BAI','FKI','FNI','LLI','MRI','WDI','WRI','WHI'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP5_DO3D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_TOTAL_PER_CASELOAD",
            "display": "Total Amount",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum ([All Prisoners].[Sum of Private Cash Account Available Opening-Balance]+[v_private_hold_balance_all_prisoners]) In ([All Prisoners].[Account Caseload ID])"
          }
        ]
      }
    },
    {
      "id": "137551.RS",
      "name": "Savings By NOMS Number",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP8",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:GENDER_CODE",
            "display": "Gender Code",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP8.DO100a8"
          },
          {
            "name": "$ref:IEP_BAND",
            "display": "IEP Band",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP8.DO100e4"
          },
          {
            "name": "$ref:V_FN",
            "display": "FN?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([Nationality Description]= \"British\") Then \"N\" Else\"Y\""
          },
          {
            "name": "$ref:OFFENDER_AGE",
            "display": "Offender Age",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP8.DO10082"
          },
          {
            "name": "$ref:ADULT_YOUNG_PERSON_INDICATOR",
            "display": "Adult/Young Person Indicator",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP8.DO10083"
          },
          {
            "name": "$ref:DP2_DO60",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    },
    {
      "id": "138523.RS",
      "name": "Savings Totals",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP5",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE ALL_PRISONERS_ACCOUNT_CASELO33 IN ('BAI','FKI','FNI','LLI','MRI','WDI','WRI','WHI'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP5_DO3D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_TOTAL_SAVINGS_PER_CASELOAD",
            "display": "Total Amount",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum ([All Prisoners].[Sum of Savings Account Opening-Balance]) In ([All Prisoners].[Account Caseload ID])"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2830.\n  tablishment_code from prompt_)) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date('08-02-2021 00:00:00'\u001b[4m)\u001b[0m ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOK]",
      "entityId": "FgR0JmBTmwcAO_4BAHBb_V4bACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2445.\n  tablishment_code from prompt_)) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date('08-02-2021 00:00:00'\u001b[4m)\u001b[0m ) ) GROUP BY AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Ince]",
      "entityId": "FgR0JmBTmwcAO_4BAHBb_V4bACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations unable to append column : V_TOTAL_PER_CASELOAD :: Error: Invalid expression / Unexpected token. Line 1, Col: 117.\n  S.SUM_OF_PRIVATE_CASH_ACCOUNT_AVAILABLE_OPENING_BALANCE || V_PRIVATE_HOLD_BALANCE_ALL_PRISONERS) IN \u001b[4m,\u001b[0mALL_PRISONERS.ACCOUNT_CASELOAD_ID,",
      "entityId": "FgR0JmBTmwcAO_4BAHBb_V4bACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations unable to append column : V_TOTAL_SAVINGS_PER_CASELOAD :: Error: Invalid expression / Unexpected token. Line 1, Col: 62.\n  SUM(ALL_PRISONERS.SUM_OF_SAVINGS_ACCOUNT_OPENING_BALANCE) IN \u001b[4m,\u001b[0mALL_PRISONERS.ACCOUNT_CASELOAD_ID,",
      "entityId": "FgR0JmBTmwcAO_4BAHBb_V4bACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP5",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO5F does not have corresponding dataset schema field",
      "entityId": "137139.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO3D does not have corresponding dataset schema field",
      "entityId": "137706.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TOTAL_PER_CASELOAD does not have corresponding dataset schema field",
      "entityId": "137706.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO60 does not have corresponding dataset schema field",
      "entityId": "137551.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP5_DO3D does not have corresponding dataset schema field",
      "entityId": "138523.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TOTAL_SAVINGS_PER_CASELOAD does not have corresponding dataset schema field",
      "entityId": "138523.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3376115/DP2",
      "entityType": "dataset"
    }
  ]
}