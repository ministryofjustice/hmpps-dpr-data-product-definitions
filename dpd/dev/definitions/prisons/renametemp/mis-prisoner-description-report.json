{
  "id": "okStMwEAC3MSDIYAMwGD8K7B7bk",
  "name": "MIS Prisoner Description Report ",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "PDD0007 v00.00.04 drop10.2"
    ]
  },
  "description": "Provides the user with a description of the prisoner including a list of distinguishing marks.<br/>PDD0007 v00.00.04",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP3",
      "name": "Sentence Details",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, case When DT_CURRENT_KEY_DATES.life_sentence_flag='Y' Then 'Life' else DT_CURRENT_KEY_DATES.CURR_EFFECTIVE_SENTENCE_LENGTH end FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH as CURR_EFFECTIVE_SENTENCE_LENGTH, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, case when AT_LIFERS.life_sentence_flag = 'Y' then AT_LIFERS.life_sentence_flag else 'N' end as life_sentence_flag From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, -- this inline select creates a table of offenders with LIFE flag set to 'Y' -- this is used with an outer join to the AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK -- so that a life flag can be added to the output of this derived table. Once an offender -- has a LIFE sentence it stays with him till he dies. Therefore it should be the override -- on all other sentences as it will kick back in if he breaks his license. (select distinct LF_FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK, LF_FACT_CASE_SENTENCE_TERM.life_sentence_flag from BODIMIS.FACT_CASE_SENTENCE_TERM LF_FACT_CASE_SENTENCE_TERM where LF_FACT_CASE_SENTENCE_TERM.life_sentence_flag = 'Y') AT_LIFERS where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_LIFERS.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, case when AT_LIFERS.life_sentence_flag = 'Y' then AT_LIFERS.life_sentence_flag else 'N' end ) DT_CURRENT_KEY_DATES WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('pbenson') AND (CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 OR CSL.ENDYEAR = '2999' ) ) ) AND ( ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A1234AA' ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP5",
      "name": "MIS Load Date",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT TRUNC(BODIMIS.ETL_LOAD_LOG.LOAD_END_DATETIME) AS LOAD_END_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT LOAD_END_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "LOAD_END_DATE",
            "type": "date",
            "display": "Load End Date",
            "legacyId": "DP5.DO4dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP6",
      "name": "Offender Details",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.MIDDLE_NAME_1, AT_OFFENDER_BOOKING.FIRST_NAME, CASE WHEN AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE = 'Pending' OR AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE IS NULL THEN 'Unclassified' ELSE AT_OFFENDER_BOOKING.REVIEW_SUP_LEVEL_TYPE END AS CURRENT_SECURITY_CATEGORY, AT_OFFENDER_BOOKING.GENDER_CODE, CASE WHEN AT_DOB.DAY_DATE <> '31/12/9000' THEN AT_DOB.DAY_DATE END AS DATE_OF_BIRTH, AT_OFFENDER_BOOKING.AGE, CASE WHEN AT_OFFENDER_BOOKING.YOUNG_PERSON_INDICATOR = 'Young Offender' THEN 'Young Person' ELSE AT_OFFENDER_BOOKING.YOUNG_PERSON_INDICATOR END AS ADULT_YOUNG_PERSON_INDICATOR, TO_CHAR(AT_OFFENDER_BOOKING.WEIGHT_METRIC) || ' Kilos ' AS WEIGHT_METRIC, TO_CHAR(FLOOR(AT_OFFENDER_BOOKING.WEIGHT_IMPERIAL / 14)) || ' Stone ' || '  ' || TO_CHAR(AT_OFFENDER_BOOKING.WEIGHT_IMPERIAL - 14 * FLOOR(AT_OFFENDER_BOOKING.WEIGHT_IMPERIAL / 14)) || ' Pounds ' AS WEIGHT_IMPERIAL, AT_OFFENDER_BOOKING.COMPLEXION_DESCRIPTION, AT_OFFENDER_BOOKING.HAIR_DESCRIPTION, AT_OFFENDER_BOOKING.LEFT_EYE_COLOUR_DESCRIPTION, AT_OFFENDER_BOOKING.RIGHT_EYE_COLOUR_DESCRIPTION, AT_OFFENDER_BOOKING.BUILD_DESCRIPTION, AT_OFFENDER_BOOKING.FACIAL_SHAPE_DESCRIPTION, AT_OFFENDER_BOOKING.FACIAL_HAIR_DESCRIPTION, TO_CHAR(TRUNC(AT_OFFENDER_BOOKING.HEIGHT_METRIC / 100, 2)) || ' Metres ' AS HEIGHT_METRIC, TO_CHAR(AT_OFFENDER_BOOKING.HEIGHT_IMPERIAL_FT) || ' Feet ' || TO_CHAR(AT_OFFENDER_BOOKING.HEIGHT_IMPERIAL_IN) || ' Inches' AS HEIGHT_IMPERIAL, AT_CELL.UNIT_4_DESCRIPTION, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_CELL AT_CELL WHERE (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_CELL.UNIT_4_SK = AT_OFFENDER_BOOKING.LIVING_UNIT_SK) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('pbenson') AND (CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6 OR CSL.ENDYEAR = '2999'))) AND ((AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A1234AA') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SURNAME, MIDDLE_NAME_1, FIRST_NAME, CURRENT_SECURITY_CATEGORY, GENDER_CODE, DATE_OF_BIRTH, AGE, ADULT_YOUNG_PERSON_INDICATOR, WEIGHT_METRIC, WEIGHT_IMPERIAL, COMPLEXION_DESCRIPTION, HAIR_DESCRIPTION, LEFT_EYE_COLOUR_DESCRIPTION, RIGHT_EYE_COLOUR_DESCRIPTION, BUILD_DESCRIPTION, FACIAL_SHAPE_DESCRIPTION, FACIAL_HAIR_DESCRIPTION, HEIGHT_METRIC, HEIGHT_IMPERIAL, UNIT_4_DESCRIPTION, MAIN_LEGAL_STATUS_CODE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP6.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP6.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "MIDDLE_NAME_1",
            "type": "string",
            "display": "Offender Given Name 2",
            "legacyId": "DP6.DO10081",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "FIRST_NAME",
            "type": "string",
            "display": "Offender Given Name 1",
            "legacyId": "DP6.DO10080",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "CURRENT_SECURITY_CATEGORY",
            "type": "string",
            "display": "Current Security Category",
            "legacyId": "DP6.DO100e1",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "GENDER_CODE",
            "type": "string",
            "display": "Gender Code",
            "legacyId": "DP6.DO100a8",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "DATE_OF_BIRTH",
            "type": "date",
            "display": "Date of Birth",
            "legacyId": "DP6.DO10085",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "AGE",
            "type": "double",
            "display": "Offender Age",
            "legacyId": "DP6.DO10082",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "ADULT_YOUNG_PERSON_INDICATOR",
            "type": "string",
            "display": "Adult/Young Person Indicator",
            "legacyId": "DP6.DO10083",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "WEIGHT_METRIC",
            "type": "string",
            "display": "Weight Metric",
            "legacyId": "DP6.DO1009f",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "WEIGHT_IMPERIAL",
            "type": "string",
            "display": "Weight Imperial",
            "legacyId": "DP6.DO1009e",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "COMPLEXION_DESCRIPTION",
            "type": "string",
            "display": "Complexion",
            "legacyId": "DP6.DO100ad",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "HAIR_DESCRIPTION",
            "type": "string",
            "display": "Hair Colour",
            "legacyId": "DP6.DO100aa",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "LEFT_EYE_COLOUR_DESCRIPTION",
            "type": "string",
            "display": "Left Eye Colour",
            "legacyId": "DP6.DO100ab",
            "legacySqlClass": "column"
          },
          {
            "index": 14,
            "name": "RIGHT_EYE_COLOUR_DESCRIPTION",
            "type": "string",
            "display": "Right Eye Colour",
            "legacyId": "DP6.DO100ac",
            "legacySqlClass": "column"
          },
          {
            "index": 15,
            "name": "BUILD_DESCRIPTION",
            "type": "string",
            "display": "Build",
            "legacyId": "DP6.DO100a6",
            "legacySqlClass": "column"
          },
          {
            "index": 16,
            "name": "FACIAL_SHAPE_DESCRIPTION",
            "type": "string",
            "display": "Facial Shape",
            "legacyId": "DP6.DO100a7",
            "legacySqlClass": "column"
          },
          {
            "index": 17,
            "name": "FACIAL_HAIR_DESCRIPTION",
            "type": "string",
            "display": "Facial Hair",
            "legacyId": "DP6.DO100a5",
            "legacySqlClass": "column"
          },
          {
            "index": 18,
            "name": "HEIGHT_METRIC",
            "type": "string",
            "display": "Height Metric",
            "legacyId": "DP6.DO10099",
            "legacySqlClass": "column"
          },
          {
            "index": 19,
            "name": "HEIGHT_IMPERIAL",
            "type": "string",
            "display": "Height Imperial",
            "legacyId": "DP6.DO1009a",
            "legacySqlClass": "column"
          },
          {
            "index": 20,
            "name": "UNIT_4_DESCRIPTION",
            "type": "string",
            "display": "Unit Description 4",
            "legacyId": "DP6.DO10136",
            "legacySqlClass": "column"
          },
          {
            "index": 21,
            "name": "MAIN_LEGAL_STATUS_CODE",
            "type": "string",
            "display": "Main Legal Status Code",
            "legacyId": "DP6.DO100de",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP7",
      "name": "Distinctive Marks",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_PHYSICAL_MARK.BODY_PART_CODE, AT_OFFENDER_PHYSICAL_MARK.MARK_TYPE, AT_OFFENDER_PHYSICAL_MARK.PART_ORIENTATION_CODE, AT_OFFENDER_PHYSICAL_MARK.SIDE_CODE FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_PHYSICAL_MARK AT_OFFENDER_PHYSICAL_MARK WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_OFFENDER_PHYSICAL_MARK.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('pbenson') AND (CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6 OR CSL.ENDYEAR = '2999'))) AND ((AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A1234AA') AND NOT AT_OFFENDER_PHYSICAL_MARK.BODY_PART_CODE IS NULL)), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, BODY_PART_CODE, MARK_TYPE, PART_ORIENTATION_CODE, SIDE_CODE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP7.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "BODY_PART_CODE",
            "type": "string",
            "display": "Body Part Code",
            "legacyId": "DP7.DO100a1",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "MARK_TYPE",
            "type": "string",
            "display": "Mark Type",
            "legacyId": "DP7.DO100a2",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "PART_ORIENTATION_CODE",
            "type": "string",
            "display": "Part Orientation Code",
            "legacyId": "DP7.DO100a4",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "SIDE_CODE",
            "type": "string",
            "display": "Side Code",
            "legacyId": "DP7.DO100a3",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DPa",
      "name": "Main Offence",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, DT_MAIN_OFFENCE.MAIN_OFFENCE_NAME FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, (SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK, AT_DIM_OFFENCE.OFFENCE_CJIT_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = ('Y') THEN (CASE WHEN AT_DIM_OFFENCE_INDICATOR.INDICATOR_CODE IN ('D', 'ERS', 'M', 'RA', 'V', 'S') THEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION WHEN AT_DIM_OFFENCE_INDICATOR.INDICATOR_CODE = 'SOR' THEN 'Sexual' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%ARSON%' THEN 'Arson' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%DRUG%' THEN 'Drug Offences' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%FIREARM%' THEN 'Firearms' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%ESCAPE%' THEN 'Escape' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%VIOLENT%' THEN 'Violent' WHEN AT_DIM_OFFENCE_INDICATOR.OFFENCE_INDICATOR_DESCRIPTION LIKE '%SEX%' THEN 'Sexual' ELSE 'Unclassified' END) ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_CATEGORY, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = ('Y') THEN AT_DIM_OFFENCE.OFFENCE_CODE_NK ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = ('Y') THEN AT_DIM_OFFENCE.OFFENCE_NAME ELSE 'NO MAIN OFFENCE' END AS MAIN_OFFENCE_NAME, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = ('Y') THEN AT_DIM_OFFENCE.LIDS_OFFENCE_NUMCODE ELSE 'NO MAIN OFFENCE' END AS LIDS_MAIN_OFFENCE_CODE, CASE WHEN AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = ('Y') THEN AT_DIM_OFFENCE.LIDS_DESCRIPTION ELSE 'NO MAIN OFFENCE' END AS LIDS_MAIN_OFFENCE_DESCRIPTION, AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.DIM_OFFENCE_INDICATOR AT_DIM_OFFENCE_INDICATOR, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE, BODIMIS.DIM_OFFENCE AT_DIM_OFFENCE WHERE AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y' AND (AT_FACT_COURT_CHARGE.OFFENCE_SK = AT_DIM_OFFENCE.OFFENCE_SK) AND (AT_COURT_CASE.COURT_CASE_SK = AT_FACT_COURT_CHARGE.COURT_CASE_SK) AND (AT_DIM_OFFENCE.OFFENCE_SK = AT_DIM_OFFENCE_INDICATOR.OFFENCE_SK) AND (AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE WHERE (AT_COURT_CASE.COURT_CASE_SK = AT_FACT_COURT_CHARGE.COURT_CASE_SK) AND (AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y'))) UNION SELECT DOF.OFFENDER_BOOKING_SK, 'NO MAIN OFFENCE' AS OFFENCE_CJIT_CODE, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_CATEGORY, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_CODE, 'NO MAIN OFFENCE' AS MAIN_OFFENCE_NAME, 'NO MAIN OFFENCE' AS LIDS_MAIN_OFFENCE_CODE, 'NO MAIN OFFENCE' AS LIDS_MAIN_OFFENCE_DESCRIPTION, 'N' AS MOST_SERIOUS_FLAG FROM BODIMIS.DIM_OFFENDER_BOOKING DOF WHERE NOT DOF.OFFENDER_BOOKING_SK IN (SELECT AT_COURT_CASE.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_COURT_CASE AT_COURT_CASE, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE WHERE AT_COURT_CASE.COURT_CASE_SK = AT_FACT_COURT_CHARGE.COURT_CASE_SK AND AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG = 'Y')) DT_MAIN_OFFENCE WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_MAIN_OFFENCE.OFFENDER_BOOKING_SK) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('pbenson') AND (CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6 OR CSL.ENDYEAR = '2999'))) AND ((AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A1234AA') AND NOT DT_MAIN_OFFENCE.MAIN_OFFENCE_NAME IS NULL AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, MAIN_OFFENCE_NAME FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DPa.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "MAIN_OFFENCE_NAME",
            "type": "string",
            "display": "(Main Offence) Name",
            "legacyId": "DPa.DO55f",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DPb",
      "name": "Curr Release Date",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, DT_CURRENT_KEY_DATES.CURR_RELEASE_DATE FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH as CURR_EFFECTIVE_SENTENCE_LENGTH, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, case when AT_LIFERS.life_sentence_flag = 'Y' then AT_LIFERS.life_sentence_flag else 'N' end as life_sentence_flag From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, -- this inline select creates a table of offenders with LIFE flag set to 'Y' -- this is used with an outer join to the AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK -- so that a life flag can be added to the output of this derived table. Once an offender -- has a LIFE sentence it stays with him till he dies. Therefore it should be the override -- on all other sentences as it will kick back in if he breaks his license. (select distinct LF_FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK, LF_FACT_CASE_SENTENCE_TERM.life_sentence_flag from BODIMIS.FACT_CASE_SENTENCE_TERM LF_FACT_CASE_SENTENCE_TERM where LF_FACT_CASE_SENTENCE_TERM.life_sentence_flag = 'Y') AT_LIFERS where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_LIFERS.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, AT_FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, case when AT_LIFERS.life_sentence_flag = 'Y' then AT_LIFERS.life_sentence_flag else 'N' end ) DT_CURRENT_KEY_DATES WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('pbenson') AND (CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 OR CSL.ENDYEAR = '2999' ) ) ) AND ( ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY = 'A1234AA' ) AND DT_CURRENT_KEY_DATES.CURR_RELEASE_DATE Is Not Null AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "114634.RS",
      "name": "Prisoner Description",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DPb",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:DP3_DO2EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 2670.\n  , BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE\u001b[4m,\u001b[0m -- this inline select creates a table of offenders with LIFE flag set to 'Y' -- this is used with a]",
      "entityId": "okStMwEAC3MSDIYAMwGD8K7B7bk",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 2582.\n  , BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE\u001b[4m,\u001b[0m -- this inline select creates a table of offenders with LIFE flag set to 'Y' -- this is used with a]",
      "entityId": "okStMwEAC3MSDIYAMwGD8K7B7bk",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP3",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DPb",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP3_DO2EF does not have corresponding dataset schema field",
      "entityId": "114634.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP3",
      "entityType": "dataset"
    }
  ]
}