{
  "id": "Fi5gFVu5EwcAD.ABAHCLVl8BACJIAFJ8",
  "name": "MIS Released Prisoners Between Specified Dates Equality report",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "PDD0089 v00.00.01"
    ]
  },
  "description": "Lists all released prisoners for an establishment between specified dates. Additionally it shows offender addresses with all Active Usage Types, Gender, Ethnicity and Religion.<br/>PDD0089 - v00.00.01",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Release Addresses",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, AT_FACT_MOV_EXT.MOVEMENT_TIME, AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.TYPE, AT_FACT_MOV_EXT.DIRECTION_CODE, DT_EXT_MOVE_TO.TYPE_DESCRIPTION_TO, DT_EXT_MOVE_FROM.TYPE_DESCRIPTION_FROM, AT_DIM_DATE_EXT_MOV.DAY_DATE, ( case when ( DT_OFFENDER_ADDRESSES.LOCALITY ) is null then 'Unknown' else ( DT_OFFENDER_ADDRESSES.LOCALITY ) end ) || ' - ' || ( case when ( DT_OFFENDER_ADDRESSES.CITY_DESC ) is null then 'Unknown' else ( DT_OFFENDER_ADDRESSES.CITY_DESC ) end ) || ' - ' || ( case when ( DT_OFFENDER_ADDRESSES.COUNTY_DESC ) is null then 'Unknown' else ( DT_OFFENDER_ADDRESSES.COUNTY_DESC ) end ), DT_OFFENDER_ADDRESSES.POSTAL_CODE, DT_OFFENDER_ADDRESSES.ADDR_USAGE_DESCRIPTION, DT_OFFENDER_ADDRESSES.ADDRESS_ACTIVE_FLAG, DT_OFFENDER_ADDRESSES.USAGE_ACTIVE_FLAG, DT_OFFENDER_ADDRESSES.ROW_SEQ_FILTER, DT_OFFENDER_ADDRESSES.ADDRESS_USAGE, NVL(AT_OFFENDER_BOOKING.RELIGION_DESCRIPTION,'Not Specified'), AT_OFFENDER_BOOKING.GENDER_CODE, NVL(AT_OFFENDER_BOOKING.RELIGION_CODE,'Not Specified'), CASE when AT_DIM_ETHNICITY_CODES.DESCRIPTION= 'Chinese' then 'Asian/Asian British: Chinese' when AT_DIM_ETHNICITY_CODES.DESCRIPTION='White : Irish Traveller/Gypsy' then 'White: Gypsy or Irish Traveller' when AT_DIM_ETHNICITY_CODES.DESCRIPTION is null then 'Code Missing' else AT_DIM_ETHNICITY_CODES.DESCRIPTION END, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE='MERGE' Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE='W8' then 'W3' WHEN AT_DIM_ETHNICITY_CODES.CODE='O1' then 'A4' ELSE AT_DIM_ETHNICITY_CODES.CODE END , DT_OFFENDER_ADDRESSES.FLAT || ' '|| DT_OFFENDER_ADDRESSES.PREMISE || ' '|| DT_OFFENDER_ADDRESSES.STREET || ' '|| DT_OFFENDER_ADDRESSES.LOCALITY || ' '|| DT_OFFENDER_ADDRESSES.CITY_DESC || ' '|| DT_OFFENDER_ADDRESSES.POSTAL_CODE || ' '|| DT_OFFENDER_ADDRESSES.COUNTRY_DESC, decode(AT_MOVEMENT_EXTERNAL.TYPE,'Release',AT_MOVEMENT_EXTERNAL.REASON,'LDR'), DT_OFFENDER_ADDRESSES.PRIMARY_FLAG FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, ( SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK as SK_ID_TO, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION as TYPE_DESCRIPTION_TO, 'Establishment' as Location_Type_To FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' as Location_Type_To FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' as Location_Type_To FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' as Location_Type_To FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' as Location_Type_To FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN flat IS NOT NULL THEN flat || '  ' END || CASE WHEN premise IS NOT NULL THEN premise || '  ' END || CASE WHEN street IS NOT NULL THEN street || '  ' END || CASE WHEN locality IS NOT NULL THEN locality || '  ' END || CASE WHEN city_desc IS NOT NULL THEN city_desc || '  ' END || CASE WHEN county_desc IS NOT NULL THEN county_desc || '  ' END || CASE WHEN postal_code IS NOT NULL THEN postal_code || '  ' END || CASE WHEN country_desc IS NOT NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses ) DT_EXT_MOVE_TO, ( SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK as SK_ID_FROM, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION as TYPE_DESCRIPTION_FROM, 'Establishment' as Location_Type_FROM FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' as Location_Type_From FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT ALL BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' as Location_Type_From FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' as Location_Type_From FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' as Location_Type_From FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN flat IS NOT NULL THEN flat || '  ' END || CASE WHEN premise IS NOT NULL THEN premise || '  ' END || CASE WHEN street IS NOT NULL THEN street || '  ' END || CASE WHEN locality IS NOT NULL THEN locality || '  ' END || CASE WHEN city_desc IS NOT NULL THEN city_desc || '  ' END || CASE WHEN county_desc IS NOT NULL THEN county_desc || '  ' END || CASE WHEN postal_code IS NOT NULL THEN postal_code || '  ' END || CASE WHEN country_desc IS NOT NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses ) DT_EXT_MOVE_FROM, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, ( select ROW_NUMBER() OVER (PARTITION BY ss.OWNER_ID ORDER BY PRIMARY_FLAG desc, ss.address_active_flag desc, ss.USAGE_ACTIVE_FLAG desc, ss.usages_dttm DESC nulls last) row_seq_filter, ss.* from ( select * from ( select AT_DIM_ADDRESSES.OWNER_ID, AT_DIM_ADDRESS_USAGES.ADDRESS_ID_NK, AT_DIM_ADDRESS_USAGES.ADDRESS_USAGE, AT_DIM_ADDRESS_USAGES.ADDR_USAGE_DESCRIPTION, AT_DIM_ADDRESS_USAGES.ACTIVE_FLAG as USAGE_ACTIVE_FLAG, AT_DIM_ADDRESSES.flat, AT_DIM_ADDRESSES.premise, AT_DIM_ADDRESSES.Street, AT_DIM_ADDRESSES.locality, AT_DIM_ADDRESSES.city_code, AT_DIM_ADDRESSES.city_desc, AT_DIM_ADDRESSES.county_code, AT_DIM_ADDRESSES.county_desc, AT_DIM_ADDRESSES.postal_code, AT_DIM_ADDRESSES.COUNTRY_CODE, AT_DIM_ADDRESSES.country_desc, AT_DIM_ADDRESSES.HOME_TEL_NO, AT_DIM_ADDRESSES.HOME_EXT_NO, AT_DIM_ADDRESSES.NO_FIXED_ADDRESS_FLAG, AT_DIM_ADDRESSES.establishment_sk, AT_DIM_ADDRESSES.PRIMARY_FLAG, AT_DIM_ADDRESSES.active_flag as address_active_flag, AT_DIM_ADDRESS_USAGES.CREATE_DATETIME, AT_DIM_ADDRESS_USAGES.MODIFY_DATETIME, COALESCE(AT_DIM_ADDRESS_USAGES.modify_datetime, AT_DIM_ADDRESS_USAGES.create_datetime) as usages_dttm from BODIMIS.DIM_ADDRESS_USAGES AT_DIM_ADDRESS_USAGES inner join BODIMIS.dim_addresses AT_DIM_ADDRESSES on AT_DIM_ADDRESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) Addr_usages --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_MOVEMENT_EXTERNAL, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODISTAGING.REF_OFFENDERS AT_BODISTAG_REF_OFFENDERS WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_MOVEMENT_EXTERNAL.OFFENDER_BOOKING_SK(+) ) AND ( AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_DIM_DATE_EXT_MOV.DATE_SK=AT_FACT_MOV_EXT.DATE_SK ) AND ( case when AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' then AT_FACT_MOV_EXT.FROM_LOCATION_SK end = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK(+) ) AND ( AT_DIM_ETHNICITY_CODES.CODE(+)=AT_OFFENDER_BOOKING.ETHNICITY_CODE ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_FACT_MOV_EXT.TO_LOCATION_SK=DT_EXT_MOVE_TO.SK_ID_TO(+) and AT_FACT_MOV_EXT.TO_LOCATION_TYPE=DT_EXT_MOVE_TO.LOCATION_TYPE_TO(+) ) AND ( AT_FACT_MOV_EXT.FROM_LOCATION_SK=DT_EXT_MOVE_FROM.SK_ID_FROM(+) and AT_FACT_MOV_EXT.FROM_LOCATION_TYPE=DT_EXT_MOVE_FROM.LOCATION_TYPE_FROM(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID=AT_BODISTAG_REF_OFFENDERS.OFFENDER_ID(+) ) AND ( AT_BODISTAG_REF_OFFENDERS.ROOT_OFFENDER_ID=DT_OFFENDER_ADDRESSES.OWNER_ID(+) ) AND ( AT_DIM_DATE_EXT_MOV.DAY_DATE >= '01-09-2017 00:00:00' AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= '08-09-2017 00:00:00' AND AT_FACT_MOV_EXT.TYPE = 'Release' AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT' AND ( AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK = (SELECT establishment_code from prompt_) ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP9",
      "name": "MIS load",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP9.DO4dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376639/DPe",
      "name": "Demographics",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'W3' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'A4' ELSE AT_DIM_ETHNICITY_CODES.CODE END AS ETHNIC_CODE, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'White: Gypsy or Irish Traveller' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION END AS ETHNIC_DESCRIPTION, AT_OFFENDER_BOOKING.GENDER_CODE, AT_OFFENDER_BOOKING.GENDER_DESCRIPTION, COALESCE(AT_OFFENDER_BOOKING.RELIGION_CODE, 'Not Specified') AS RELIGION_CODE, COALESCE(AT_OFFENDER_BOOKING.RELIGION_DESCRIPTION, 'Not Specified') AS RELIGION_DESCRIPTION, AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.REASON FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM WHERE (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (AT_DIM_ETHNICITY_CODES.CODE (+) = AT_OFFENDER_BOOKING.ETHNICITY_CODE) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND ((AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK = (SELECT establishment_code FROM prompt_)) AND AT_FACT_MOV_EXT.TYPE IN ('Release'))), dataset_ AS (SELECT ETHNIC_CODE, ETHNIC_DESCRIPTION, GENDER_CODE, GENDER_DESCRIPTION, RELIGION_CODE, RELIGION_DESCRIPTION, REASON_CODE, REASON FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "ETHNIC_CODE",
            "type": "string",
            "display": "Ethnic Code",
            "legacyId": "DPe.DO9b",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "ETHNIC_DESCRIPTION",
            "type": "string",
            "display": "Ethnic Description",
            "legacyId": "DPe.DO9d",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "GENDER_CODE",
            "type": "string",
            "display": "Gender Code",
            "legacyId": "DPe.DOa8",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "GENDER_DESCRIPTION",
            "type": "string",
            "display": "Gender Description",
            "legacyId": "DPe.DOa9",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "RELIGION_CODE",
            "type": "string",
            "display": "Religion Code",
            "legacyId": "DPe.DOb2",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "RELIGION_DESCRIPTION",
            "type": "string",
            "display": "Religion Description",
            "legacyId": "DPe.DOb3",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "REASON_CODE",
            "type": "string",
            "display": "Movement Reason Code (External)",
            "legacyId": "DPe.DO3fc",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "REASON",
            "type": "string",
            "display": "Movement Description (External)",
            "legacyId": "DPe.DO15b",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "136839.RS",
      "name": "Released Prisoners",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (OFFENDER_ADDRESS_ROW_SEQ_FIL31 IS NULL OR OFFENDER_ADDRESS_USAGE_ACTIV34 = 'Y'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO1012D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100A8",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO1009B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100B2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_OFFENDER_ADDRESS",
            "display": "Offender Address Usage Description",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=([Offender Address Full]) Where ([Offender Address Primary Address Flag] = \"Y\")"
          },
          {
            "name": "$ref:V_OFFENDER_ADDRESS_POST_CODE",
            "display": "Offender Address",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=([Offender Address Post Code]) Where ([Offender Address Primary Address Flag] = \"Y\")"
          },
          {
            "name": "$ref:DP4_DO103FC",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10781",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    },
    {
      "id": "137181.RS",
      "name": "Code Description",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376639/DPe",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (OFFENDER_ADDRESS_ROW_SEQ_FIL31 IS NULL OR OFFENDER_ADDRESS_USAGE_ACTIV34 = 'Y'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:REASON_CODE",
            "display": "Movement Reason Code (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPe.DO3fc"
          },
          {
            "name": "$ref:REASON",
            "display": "Movement Description (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPe.DO15b"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expecting ). Line 1, Col: 6656.\n  ESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) \u001b[4mAddr_usages\u001b[0m --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODIMIS.FACT_MOVEMENT_EXT]",
      "entityId": "Fi5gFVu5EwcAD.ABAHCLVl8BACJIAFJ8",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10076 does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1007B does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1012D does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100A8 does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1009B does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100B2 does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OFFENDER_ADDRESS does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OFFENDER_ADDRESS_POST_CODE does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO103FC does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10781 does not have corresponding dataset schema field",
      "entityId": "136839.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    }
  ]
}