{
  "id": "Fmo5A1.wAAAA3fIBAHDr3F4KACJIAFe4",
  "name": "MIS National Transfer and Releases Report",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "NAT0004 National Transfer and Releases Report"
    ]
  },
  "description": "Report retrieves the Transfers and Releases between the dates and Establishments entered at run time along with Age, Category, Sentence Length, Legal Status, Release Date, Rehab Provider, Court Rec'd from and  Days left to Serve.  The report is over 3 tabs By Establishment, By Date and By Movement Type<br/>NAT0004 v2.0  Last Modified: 30/10/2020",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP9",
      "name": "All Prisoners A-L",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12) AS OFFENDER_AGE, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Life' ELSE FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH END AS EFFECTIVE_SENTENCE_LENGTH, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) IS NULL THEN NULL WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 1 THEN 'Under 1 year' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 1 AND 6 THEN '1 to 6 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 7 AND 11 THEN '7 to 11 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 12 AND 16 THEN '12 to 16 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) > 16 AND (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 18 THEN '16 to 17 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 21 THEN '18 to 21 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 22 AND 29 THEN '22 to 29 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 30 AND 39 THEN '30 to 39 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 40 AND 49 THEN '40 to 49 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 50 AND 59 THEN '50 to 59 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 60 AND 69 THEN '60 to 69 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 70 THEN '70 or over' END AS AGE_BAND, CASE WHEN AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassfied' ELSE AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL END AS SECURITY_CATEGORY_CURRENT_LE31, FACT_CURR_KEY_DATES_SENT.CURR_RELEASE_DATE, AT_FACT_MOV_EXT.REASON, AT_DIM_DATE_EXT_MOV.DAY_DATE, AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.TYPE, AT_FACT_MOV_EXT.DIRECTION_CODE, DT_EXT_MOVE_TO.TYPE_DESCRIPTION_TO, DT_EXT_MOVE_FROM.TYPE_DESCRIPTION_FROM, AT_OFFENDER_BOOKING.BOOKING_NUMBER, DT_COURT_FIRST_RCVD_FROM.COURT_DESCRIPTION FROM BODIMIS.DIM_CELL AT_DIM_LOCATION, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, (SELECT DISTINCT BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK = dss.sentence_status_sk) AND dss.sentence_status = 'Active' AND (BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK) AND (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK = BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK) AND (BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK) AND BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG = 'Y') DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, (SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK AS SK_ID_TO, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION AS TYPE_DESCRIPTION_TO, 'Establishment' AS Location_Type_To FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' AS Location_Type_To FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' AS Location_Type_To FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' AS Location_Type_To FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' AS Location_Type_To FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN NOT flat IS NULL THEN flat || '  ' END || CASE WHEN NOT premise IS NULL THEN premise || '  ' END || CASE WHEN NOT street IS NULL THEN street || '  ' END || CASE WHEN NOT locality IS NULL THEN locality || '  ' END || CASE WHEN NOT city_desc IS NULL THEN city_desc || '  ' END || CASE WHEN NOT county_desc IS NULL THEN county_desc || '  ' END || CASE WHEN NOT postal_code IS NULL THEN postal_code || '  ' END || CASE WHEN NOT country_desc IS NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses) DT_EXT_MOVE_TO, (SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK AS SK_ID_FROM, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION AS TYPE_DESCRIPTION_FROM, 'Establishment' AS Location_Type_FROM FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' AS Location_Type_From FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' AS Location_Type_From FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' AS Location_Type_From FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' AS Location_Type_From FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN NOT flat IS NULL THEN flat || '  ' END || CASE WHEN NOT premise IS NULL THEN premise || '  ' END || CASE WHEN NOT street IS NULL THEN street || '  ' END || CASE WHEN NOT locality IS NULL THEN locality || '  ' END || CASE WHEN NOT city_desc IS NULL THEN city_desc || '  ' END || CASE WHEN NOT county_desc IS NULL THEN county_desc || '  ' END || CASE WHEN NOT postal_code IS NULL THEN postal_code || '  ' END || CASE WHEN NOT country_desc IS NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses) DT_EXT_MOVE_FROM, (SELECT F_M_E.OFFENDER_BOOKING_SK, D_D.DAY_DATE, F_M_E.MOVEMENT_TIME, D_C.COURT_DESCRIPTION FROM BODIMIS.FACT_MOVEMENT_EXTERNAL F_M_E, BODIMIS.DIM_DATE D_D, BODIMIS.DIM_COURT D_C WHERE D_D.DATE_SK = F_M_E.DATE_SK AND D_C.COURT_SK = F_M_E.FROM_LOCATION_SK AND (F_M_E.OFFENDER_BOOKING_SK, D_D.DAY_DATE, F_M_E.MOVEMENT_TIME) IN (SELECT F_M_E.OFFENDER_BOOKING_SK, MIN(D_D.DAY_DATE), MIN(F_M_E.MOVEMENT_TIME) FROM BODIMIS.FACT_MOVEMENT_EXTERNAL F_M_E, BODIMIS.DIM_DATE D_D WHERE D_D.DATE_SK = F_M_E.DATE_SK GROUP BY F_M_E.OFFENDER_BOOKING_SK)) DT_COURT_FIRST_RCVD_FROM, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_LIFEFLAG.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (DT_COURT_FIRST_RCVD_FROM.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_FACT_MOV_EXT.TO_LOCATION_SK = DT_EXT_MOVE_TO.SK_ID_TO (+) AND AT_FACT_MOV_EXT.TO_LOCATION_TYPE = DT_EXT_MOVE_TO.LOCATION_TYPE_TO (+)) AND (AT_FACT_MOV_EXT.FROM_LOCATION_SK = DT_EXT_MOVE_FROM.SK_ID_FROM (+) AND AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = DT_EXT_MOVE_FROM.LOCATION_TYPE_FROM (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.LIVING_UNIT_SK = AT_DIM_LOCATION.UNIT_4_SK (+)) AND ((AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK IN ('All') OR 'All' IN ('All')) AND AT_OFFENDER_BOOKING.SURNAME BETWEEN 'A' AND 'M' AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= TO_DATE('04-10-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_DIM_DATE_EXT_MOV.DAY_DATE >= TO_DATE('28-09-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_FACT_MOV_EXT.TYPE IN ('Release', 'Transfers') AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT')), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SURNAME, OFFENDER_AGE, EFFECTIVE_SENTENCE_LENGTH, MAIN_LEGAL_STATUS_CODE, UNIT_4_SHORT_DESCRIPTION, AGE_BAND, SECURITY_CATEGORY_CURRENT_LE31, CURR_RELEASE_DATE, REASON, DAY_DATE, REASON_CODE, TYPE, DIRECTION_CODE, TYPE_DESCRIPTION_TO, TYPE_DESCRIPTION_FROM, BOOKING_NUMBER, COURT_DESCRIPTION FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP9.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP9.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "OFFENDER_AGE",
            "type": "double",
            "display": "Offender Age",
            "legacyId": "DP9.DO10082",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "EFFECTIVE_SENTENCE_LENGTH",
            "type": "string",
            "display": "Effective Sentence Length",
            "legacyId": "DP9.DO2d0",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "MAIN_LEGAL_STATUS_CODE",
            "type": "string",
            "display": "Main Legal Status Code",
            "legacyId": "DP9.DO100de",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "UNIT_4_SHORT_DESCRIPTION",
            "type": "string",
            "display": "Prisoner Location",
            "legacyId": "DP9.DO10a7c",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "AGE_BAND",
            "type": "string",
            "display": "Age Band",
            "legacyId": "DP9.DO107fd",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "SECURITY_CATEGORY_CURRENT_LE31",
            "type": "string",
            "display": "Security Category - Current Level",
            "legacyId": "DP9.DO10832",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "CURR_RELEASE_DATE",
            "type": "date",
            "display": "Current Release Date",
            "legacyId": "DP9.DO2e6",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "REASON",
            "type": "string",
            "display": "Movement Description (External)",
            "legacyId": "DP9.DO1015b",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Movement Date Only (External)",
            "legacyId": "DP9.DO1015c",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "REASON_CODE",
            "type": "string",
            "display": "Movement Reason Code (External)",
            "legacyId": "DP9.DO103fc",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "TYPE",
            "type": "string",
            "display": "Movement Type (External)",
            "legacyId": "DP9.DO103ec",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "DIRECTION_CODE",
            "type": "string",
            "display": "Movement Direction Code (External)",
            "legacyId": "DP9.DO103fd",
            "legacySqlClass": "column"
          },
          {
            "index": 14,
            "name": "TYPE_DESCRIPTION_TO",
            "type": "string",
            "display": "Movement Description (To)",
            "legacyId": "DP9.DO106ff",
            "legacySqlClass": "column"
          },
          {
            "index": 15,
            "name": "TYPE_DESCRIPTION_FROM",
            "type": "string",
            "display": "Movement Description (From)",
            "legacyId": "DP9.DO10700",
            "legacySqlClass": "column"
          },
          {
            "index": 16,
            "name": "BOOKING_NUMBER",
            "type": "string",
            "display": "Booking Number",
            "legacyId": "DP9.DO10077",
            "legacySqlClass": "column"
          },
          {
            "index": 17,
            "name": "COURT_DESCRIPTION",
            "type": "string",
            "display": "Court 1st Received From (External)",
            "legacyId": "DP9.DO10163",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DPd",
      "name": "All Prisoners M-Z",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12) AS OFFENDER_AGE, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Life' ELSE FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH END AS EFFECTIVE_SENTENCE_LENGTH, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) IS NULL THEN NULL WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 1 THEN 'Under 1 year' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 1 AND 6 THEN '1 to 6 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 7 AND 11 THEN '7 to 11 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 12 AND 16 THEN '12 to 16 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) > 16 AND (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 18 THEN '16 to 17 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 21 THEN '18 to 21 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 22 AND 29 THEN '22 to 29 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 30 AND 39 THEN '30 to 39 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 40 AND 49 THEN '40 to 49 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 50 AND 59 THEN '50 to 59 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 60 AND 69 THEN '60 to 69 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 70 THEN '70 or over' END AS AGE_BAND, CASE WHEN AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassfied' ELSE AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL END AS SECURITY_CATEGORY_CURRENT_LE31, FACT_CURR_KEY_DATES_SENT.CURR_RELEASE_DATE, AT_FACT_MOV_EXT.REASON, AT_DIM_DATE_EXT_MOV.DAY_DATE, AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.TYPE, AT_FACT_MOV_EXT.DIRECTION_CODE, DT_EXT_MOVE_TO.TYPE_DESCRIPTION_TO, DT_EXT_MOVE_FROM.TYPE_DESCRIPTION_FROM, AT_OFFENDER_BOOKING.BOOKING_NUMBER, DT_COURT_FIRST_RCVD_FROM.COURT_DESCRIPTION FROM BODIMIS.DIM_CELL AT_DIM_LOCATION, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, (SELECT DISTINCT BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK = dss.sentence_status_sk) AND dss.sentence_status = 'Active' AND (BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK) AND (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK = BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK) AND (BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK) AND BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG = 'Y') DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, (SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK AS SK_ID_TO, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION AS TYPE_DESCRIPTION_TO, 'Establishment' AS Location_Type_To FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' AS Location_Type_To FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' AS Location_Type_To FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' AS Location_Type_To FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' AS Location_Type_To FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN NOT flat IS NULL THEN flat || '  ' END || CASE WHEN NOT premise IS NULL THEN premise || '  ' END || CASE WHEN NOT street IS NULL THEN street || '  ' END || CASE WHEN NOT locality IS NULL THEN locality || '  ' END || CASE WHEN NOT city_desc IS NULL THEN city_desc || '  ' END || CASE WHEN NOT county_desc IS NULL THEN county_desc || '  ' END || CASE WHEN NOT postal_code IS NULL THEN postal_code || '  ' END || CASE WHEN NOT country_desc IS NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses) DT_EXT_MOVE_TO, (SELECT BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_SK AS SK_ID_FROM, BODIMIS.DIM_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION AS TYPE_DESCRIPTION_FROM, 'Establishment' AS Location_Type_FROM FROM BODIMIS.DIM_ESTABLISHMENT UNION ALL SELECT BODIMIS.DIM_PROBATION_OFFICE.PROBATION_OFFICE_SK, BODIMIS.DIM_PROBATION_OFFICE.PROB_OFFICE_DESCRIPTION, 'Probation Office' AS Location_Type_From FROM BODIMIS.DIM_PROBATION_OFFICE UNION ALL SELECT BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_SK, BODIMIS.DIM_OUTSIDE_LOCATION.OUTSIDE_LOCATION_DESCRIPTION, 'Outside Location' AS Location_Type_From FROM BODIMIS.DIM_OUTSIDE_LOCATION UNION ALL SELECT BODIMIS.DIM_CITY.CITY_SK, BODIMIS.DIM_CITY.DESCRIPTION, 'City' AS Location_Type_From FROM BODIMIS.DIM_CITY UNION ALL SELECT BODIMIS.DIM_COURT.COURT_SK, BODIMIS.DIM_COURT.COURT_DESCRIPTION, 'Court' AS Location_Type_From FROM BODIMIS.DIM_COURT UNION ALL SELECT address_id_nk, TRIM(CASE WHEN no_fixed_address_flag = 'Y' THEN 'No fixed address' ELSE CASE WHEN NOT flat IS NULL THEN flat || '  ' END || CASE WHEN NOT premise IS NULL THEN premise || '  ' END || CASE WHEN NOT street IS NULL THEN street || '  ' END || CASE WHEN NOT locality IS NULL THEN locality || '  ' END || CASE WHEN NOT city_desc IS NULL THEN city_desc || '  ' END || CASE WHEN NOT county_desc IS NULL THEN county_desc || '  ' END || CASE WHEN NOT postal_code IS NULL THEN postal_code || '  ' END || CASE WHEN NOT country_desc IS NULL THEN country_desc END END), 'Home Leave Address' FROM bodimis.dim_addresses) DT_EXT_MOVE_FROM, (SELECT F_M_E.OFFENDER_BOOKING_SK, D_D.DAY_DATE, F_M_E.MOVEMENT_TIME, D_C.COURT_DESCRIPTION FROM BODIMIS.FACT_MOVEMENT_EXTERNAL F_M_E, BODIMIS.DIM_DATE D_D, BODIMIS.DIM_COURT D_C WHERE D_D.DATE_SK = F_M_E.DATE_SK AND D_C.COURT_SK = F_M_E.FROM_LOCATION_SK AND (F_M_E.OFFENDER_BOOKING_SK, D_D.DAY_DATE, F_M_E.MOVEMENT_TIME) IN (SELECT F_M_E.OFFENDER_BOOKING_SK, MIN(D_D.DAY_DATE), MIN(F_M_E.MOVEMENT_TIME) FROM BODIMIS.FACT_MOVEMENT_EXTERNAL F_M_E, BODIMIS.DIM_DATE D_D WHERE D_D.DATE_SK = F_M_E.DATE_SK GROUP BY F_M_E.OFFENDER_BOOKING_SK)) DT_COURT_FIRST_RCVD_FROM, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_LIFEFLAG.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (DT_COURT_FIRST_RCVD_FROM.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_FACT_MOV_EXT.TO_LOCATION_SK = DT_EXT_MOVE_TO.SK_ID_TO (+) AND AT_FACT_MOV_EXT.TO_LOCATION_TYPE = DT_EXT_MOVE_TO.LOCATION_TYPE_TO (+)) AND (AT_FACT_MOV_EXT.FROM_LOCATION_SK = DT_EXT_MOVE_FROM.SK_ID_FROM (+) AND AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = DT_EXT_MOVE_FROM.LOCATION_TYPE_FROM (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.LIVING_UNIT_SK = AT_DIM_LOCATION.UNIT_4_SK (+)) AND ((AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK IN ('All') OR 'All' IN ('All')) AND AT_OFFENDER_BOOKING.SURNAME >= 'M' AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= TO_DATE('04-10-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_DIM_DATE_EXT_MOV.DAY_DATE >= TO_DATE('28-09-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_FACT_MOV_EXT.TYPE IN ('Release', 'Transfers') AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT')), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SURNAME, OFFENDER_AGE, EFFECTIVE_SENTENCE_LENGTH, MAIN_LEGAL_STATUS_CODE, UNIT_4_SHORT_DESCRIPTION, AGE_BAND, SECURITY_CATEGORY_CURRENT_LE31, CURR_RELEASE_DATE, REASON, DAY_DATE, REASON_CODE, TYPE, DIRECTION_CODE, TYPE_DESCRIPTION_TO, TYPE_DESCRIPTION_FROM, BOOKING_NUMBER, COURT_DESCRIPTION FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DPd.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DPd.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "OFFENDER_AGE",
            "type": "double",
            "display": "Offender Age",
            "legacyId": "DPd.DO10082",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "EFFECTIVE_SENTENCE_LENGTH",
            "type": "string",
            "display": "Effective Sentence Length",
            "legacyId": "DPd.DO2d0",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "MAIN_LEGAL_STATUS_CODE",
            "type": "string",
            "display": "Main Legal Status Code",
            "legacyId": "DPd.DO100de",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "UNIT_4_SHORT_DESCRIPTION",
            "type": "string",
            "display": "Prisoner Location",
            "legacyId": "DPd.DO10a7c",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "AGE_BAND",
            "type": "string",
            "display": "Age Band",
            "legacyId": "DPd.DO107fd",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "SECURITY_CATEGORY_CURRENT_LE31",
            "type": "string",
            "display": "Security Category - Current Level",
            "legacyId": "DPd.DO10832",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "CURR_RELEASE_DATE",
            "type": "date",
            "display": "Current Release Date",
            "legacyId": "DPd.DO2e6",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "REASON",
            "type": "string",
            "display": "Movement Description (External)",
            "legacyId": "DPd.DO1015b",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Movement Date Only (External)",
            "legacyId": "DPd.DO1015c",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "REASON_CODE",
            "type": "string",
            "display": "Movement Reason Code (External)",
            "legacyId": "DPd.DO103fc",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "TYPE",
            "type": "string",
            "display": "Movement Type (External)",
            "legacyId": "DPd.DO103ec",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "DIRECTION_CODE",
            "type": "string",
            "display": "Movement Direction Code (External)",
            "legacyId": "DPd.DO103fd",
            "legacySqlClass": "column"
          },
          {
            "index": 14,
            "name": "TYPE_DESCRIPTION_TO",
            "type": "string",
            "display": "Movement Description (To)",
            "legacyId": "DPd.DO106ff",
            "legacySqlClass": "column"
          },
          {
            "index": 15,
            "name": "TYPE_DESCRIPTION_FROM",
            "type": "string",
            "display": "Movement Description (From)",
            "legacyId": "DPd.DO10700",
            "legacySqlClass": "column"
          },
          {
            "index": 16,
            "name": "BOOKING_NUMBER",
            "type": "string",
            "display": "Booking Number",
            "legacyId": "DPd.DO10077",
            "legacySqlClass": "column"
          },
          {
            "index": 17,
            "name": "COURT_DESCRIPTION",
            "type": "string",
            "display": "Court 1st Received From (External)",
            "legacyId": "DPd.DO10163",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DPa",
      "name": "CPA",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.DESCRIPTION END AS REHAB_PROVIDER_DESCRIPTION, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.CODE_NK END AS REHAB_PROVIDER_CODE FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_REHAB_PROVIDER, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.FACT_OFFENDER_REHAB WHERE (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = BODIMIS.FACT_OFFENDER_REHAB.OFFENDER_BOOKING_SK (+)) AND (BODIMIS.FACT_OFFENDER_REHAB.REHAB_PROVIDER_SK = BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK (+)) AND ((AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK IN ('All') OR 'All' IN ('All')) AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= TO_DATE('04-10-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_DIM_DATE_EXT_MOV.DAY_DATE >= TO_DATE('28-09-2020 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT' AND (BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_ACTIVE_FLAG = 'Y' OR BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_ACTIVE_FLAG IS NULL) AND (BODIMIS.FACT_OFFENDER_REHAB.DECISION_ACTIVE_FLAG = 'Y' OR BODIMIS.FACT_OFFENDER_REHAB.DECISION_ACTIVE_FLAG IS NULL))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, REHAB_PROVIDER_DESCRIPTION, REHAB_PROVIDER_CODE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DPa.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "REHAB_PROVIDER_DESCRIPTION",
            "type": "string",
            "display": "Rehab Provider Description",
            "legacyId": "DPa.DO10b38",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "REHAB_PROVIDER_CODE",
            "type": "string",
            "display": "Rehab Provider Code",
            "legacyId": "DPa.DO10b37",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP3",
      "name": "Load End Date",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP3.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "139740.RS",
      "name": "By Establishment",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "summary",
        "field": []
      },
      "dataset": "MISSING"
    },
    {
      "id": "141726.RS",
      "name": "By Date",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "summary",
        "field": []
      },
      "dataset": "MISSING"
    },
    {
      "id": "141830.RS",
      "name": "By Movement Type",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "summary",
        "field": []
      },
      "dataset": "MISSING"
    }
  ],
  "errors": [
    {
      "type": "schema",
      "error": "instance.report[0] requires property \"dataset\"",
      "entityId": "Fmo5A1.wAAAA3fIBAHDr3F4KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "instance.report[1] requires property \"dataset\"",
      "entityId": "Fmo5A1.wAAAA3fIBAHDr3F4KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "instance.report[2] requires property \"dataset\"",
      "entityId": "Fmo5A1.wAAAA3fIBAHDr3F4KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Report Variant 139740.RS does not have corresponding dataset undefined",
      "entityId": "139740.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report Variant 141726.RS does not have corresponding dataset undefined",
      "entityId": "141726.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report Variant 141830.RS does not have corresponding dataset undefined",
      "entityId": "141830.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "Error: Error: Query failed: GENERIC_USER_ERROR: Failed To Get Query Passthrough Schema",
      "entityId": "3375368/DP9",
      "entityType": "dataset"
    },
    {
      "type": "athenQuery",
      "error": "Error: Error: Query failed: GENERIC_USER_ERROR: Failed To Get Query Passthrough Schema",
      "entityId": "3375368/DPd",
      "entityType": "dataset"
    }
  ]
}