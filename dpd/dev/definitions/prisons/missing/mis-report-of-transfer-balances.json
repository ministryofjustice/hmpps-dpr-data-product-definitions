{
  "id": "okZTBVQACq_BHR0ATxeD8K7B948",
  "name": "MIS Report of Transfer Balances",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "FIN0027 v00.00.06 LSRIT038"
    ]
  },
  "description": "Shows all account transactions and advances for prisoners who transferred between external locations and dates prompted at runtime. A second tab shows all transfer movements which occurred within the same date range. <br/>FIN0027 - v00.00.06",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3376115/DP5",
      "name": "Transferred From",
      "description": "MIS Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.SURNAME, AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE, AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_AMOUNT, AT_DIM_ACCOUNT_CODE_TXN.ACCOUNT_CODE, AT_DIM_DATE_TRANSACTIONS.DAY_DATE, BODIMIS.DIM_TRANSACTION_ENTRY_DESC.TRANSACTION_ENTRY_DESC, AT_FACT_OFFENDER_TRANSACTION.TXN_ID, AT_FACT_OFFENDER_TRANSACTION.TXN_ENTRY_SEQ FROM BODIMIS.FACT_OFFENDER_TRANSACTION AT_FACT_OFFENDER_TRANSACTION, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_TRANSACTION_TYPE AT_DIM_TRANSACTION_TYPE, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_TXN, BODIMIS.DIM_DATE AT_DIM_DATE_TRANSACTIONS, BODIMIS.DIM_TRANSACTION_ENTRY_DESC, BODIMIS.DIM_DATE AT_BUSINESS_DATE WHERE ( AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_TYPE_SK ) AND ( AT_DIM_DATE_TRANSACTIONS.DATE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_DATE_SK ) AND ( AT_FACT_OFFENDER_TRANSACTION.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_TXN.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFFENDER_TRANSACTION.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS.ESTABLISHMENT_SK=AT_FACT_OFFENDER_TRANSACTION.ESTABLISHMENT_SK ) AND ( AT_BUSINESS_DATE.DATE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_BUSINESS_DATE_SK ) AND ( BODIMIS.DIM_TRANSACTION_ENTRY_DESC.TRANSACTION_ENTRY_DESC_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_DESC_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_CASELOADS.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code','A','Offender Account Transactions\\Transaction Caseload ID',Mono,Free,Not_Persistent,,User:2) */ ) AND ( AT_DIM_DATE_TRANSACTIONS.DAY_DATE between (SELECT START_DATE FROM prompt_ /*= #Prompt('Transfer Start Date','D',,mono,free,Not_Persistent,User:101) */ ) and (SELECT END_DATE FROM prompt_ /*= #Prompt('Transfer End Date','D',,mono,free,Not_Persistent,User:102) */ ) and AT_BUSINESS_DATE.DAY_DATE between to_date(@Variable('Transfer Start Date'))-1 and @Variable('Transfer End Date') ) AND AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE IN ( 'ADV','DED','TIR','TOR' ) AND AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY IN ( SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV WHERE ( AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_DIM_DATE_EXT_MOV.DATE_SK=AT_FACT_MOV_EXT.DATE_SK ) AND ( case when AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' then AT_FACT_MOV_EXT.FROM_LOCATION_SK end = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_FACT_MOV_EXT.TYPE = 'Transfers' AND AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code','A','External Movements\\Movement Location From Code (External)',Mono,Free,Not_Persistent,,User:2) */ ) AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT' AND AT_DIM_DATE_EXT_MOV.DAY_DATE >= (SELECT START_DATE FROM prompt_ /*= #prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0) */ ) AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= (SELECT END_DATE FROM prompt_ /*= #prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1) */ ) ) ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code','A','Offender Account Transactions\\Transaction Caseload ID',Mono,Free,Not_Persistent,,User:2)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "start_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer Start Date",
          "description": "@Prompt('Transfer Start Date','D',,mono,free,Not_Persistent,User:101)",
          "mandatory": "true"
        },
        {
          "index": 2,
          "name": "end_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer End Date",
          "description": "@Prompt('Transfer End Date','D',,mono,free,Not_Persistent,User:102)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP2",
      "name": "Transferred To",
      "description": "MIS Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.SURNAME, AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE, AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_AMOUNT, AT_DIM_ACCOUNT_CODE_TXN.ACCOUNT_CODE, BODIMIS.DIM_TRANSACTION_ENTRY_DESC.TRANSACTION_ENTRY_DESC, AT_DIM_DATE_TRANSACTIONS.DAY_DATE, AT_FACT_OFFENDER_TRANSACTION.TXN_ID, AT_FACT_OFFENDER_TRANSACTION.TXN_ENTRY_SEQ FROM BODIMIS.FACT_OFFENDER_TRANSACTION AT_FACT_OFFENDER_TRANSACTION, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_TRANSACTION_TYPE AT_DIM_TRANSACTION_TYPE, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_TXN, BODIMIS.DIM_TRANSACTION_ENTRY_DESC, BODIMIS.DIM_DATE AT_DIM_DATE_TRANSACTIONS, BODIMIS.DIM_DATE AT_BUSINESS_DATE WHERE ( AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_TYPE_SK ) AND ( AT_DIM_DATE_TRANSACTIONS.DATE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_DATE_SK ) AND ( AT_FACT_OFFENDER_TRANSACTION.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_TXN.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFFENDER_TRANSACTION.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS.ESTABLISHMENT_SK=AT_FACT_OFFENDER_TRANSACTION.ESTABLISHMENT_SK ) AND ( AT_BUSINESS_DATE.DATE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_BUSINESS_DATE_SK ) AND ( BODIMIS.DIM_TRANSACTION_ENTRY_DESC.TRANSACTION_ENTRY_DESC_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_ENTRY_DESC_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_CASELOADS.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code','A','Offender Account Transactions\\Transaction Caseload ID',Mono,Free,Not_Persistent,,User:2) */ ) AND ( AT_DIM_DATE_TRANSACTIONS.DAY_DATE between (SELECT START_DATE FROM prompt_ /*= #Prompt('Transfer Start Date','D',,mono,free,Not_Persistent,User:101) */ ) and (SELECT END_DATE FROM prompt_ /*= #Prompt('Transfer End Date','D',,mono,free,Not_Persistent,User:102) */ ) and AT_BUSINESS_DATE.DAY_DATE between to_date(@Variable('Transfer Start Date'))-1 and @Variable('Transfer End Date') ) AND AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE IN ( 'ADV','DED','TIR','TOR' ) AND AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY IN ( SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_TO, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT WHERE ( AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_DIM_DATE_EXT_MOV.DATE_SK=AT_FACT_MOV_EXT.DATE_SK ) AND ( case when AT_FACT_MOV_EXT.TO_LOCATION_TYPE = 'Establishment' then AT_FACT_MOV_EXT.TO_LOCATION_SK end = AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_DIM_DATE_EXT_MOV.DAY_DATE >= (SELECT START_DATE FROM prompt_ /*= #prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0) */ ) AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= (SELECT END_DATE FROM prompt_ /*= #prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1) */ ) AND AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code','A','External Movements\\Movement Location To Code (External)',Mono,Free,Not_Persistent,,User:2) */ ) AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'IN' AND ( AT_FACT_MOV_EXT.TYPE = 'Transfers' OR ( AT_FACT_MOV_EXT.TYPE = 'Admission' AND AT_FACT_MOV_EXT.REASON_CODE IN ( 'TRNTAP','T','INT','TRNCRT','NOTR' ) ) ) ) ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code','A','Offender Account Transactions\\Transaction Caseload ID',Mono,Free,Not_Persistent,,User:2)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "start_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer Start Date",
          "description": "@Prompt('Transfer Start Date','D',,mono,free,Not_Persistent,User:101)",
          "mandatory": "true"
        },
        {
          "index": 2,
          "name": "end_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer End Date",
          "description": "@Prompt('Transfer End Date','D',,mono,free,Not_Persistent,User:102)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP8",
      "name": "MIS Load",
      "description": "MIS Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP8.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376115/DP9",
      "name": "Xfer Movements Into Jail",
      "description": "MIS Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.SURNAME, AT_DIM_DATE_EXT_MOV.DAY_DATE, SUBSTR(AT_FACT_MOV_EXT.MOVEMENT_TIME, 11, 6) AS MOVEMENT_TIME, AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_CODE_NK, AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_DESCRIPTION, AT_FACT_MOV_EXT.DIRECTION_CODE, AT_FACT_MOV_EXT.REASON, AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK AS MOVEMENT_LOCATION_FROM_CODE_, AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_DESCRIPTION AS MOVEMENT_LOCATION_FROM_DESCR35 FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_TO, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM WHERE (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (CASE WHEN AT_FACT_MOV_EXT.TO_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.TO_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_DIM_DATE_EXT_MOV.DAY_DATE >= (SELECT START_DATE FROM prompt_ /* = #prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0) */) AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= (SELECT END_DATE FROM prompt_ /* = #prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1) */) AND AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #prompt('Establishment Code','A','External Movements\\Movement Location To Code (External)',Mono,Free,Not_Persistent,,User:2) */) AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'IN' AND (AT_FACT_MOV_EXT.TYPE = 'Transfers' OR (AT_FACT_MOV_EXT.TYPE = 'Admission' AND AT_FACT_MOV_EXT.REASON_CODE IN ('TRNTAP', 'T', 'INT', 'TRNCRT', 'NOTR'))))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, INITIALS, SURNAME, DAY_DATE, MOVEMENT_TIME, ESTABLISHMENT_CODE_NK, ESTABLISHMENT_DESCRIPTION, DIRECTION_CODE, REASON, MOVEMENT_LOCATION_FROM_CODE_, MOVEMENT_LOCATION_FROM_DESCR35 FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "start_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer Start Date",
          "description": "@prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0)",
          "mandatory": "true"
        },
        {
          "index": 1,
          "name": "end_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer End Date",
          "description": "@prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1)",
          "mandatory": "true"
        },
        {
          "index": 2,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code','A','External Movements\\Movement Location To Code (External)',Mono,Free,Not_Persistent,,User:2)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP9.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "INITIALS",
            "type": "string",
            "display": "Offender Initials",
            "legacyId": "DP9.DO1012d",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP9.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Movement Date Only (External)",
            "legacyId": "DP9.DO1015c",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "MOVEMENT_TIME",
            "type": "string",
            "display": "Movement Time",
            "legacyId": "DP9.DO10782",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "ESTABLISHMENT_CODE_NK",
            "type": "string",
            "display": "Movement Location To Code (External)",
            "legacyId": "DP9.DO10400",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "ESTABLISHMENT_DESCRIPTION",
            "type": "string",
            "display": "Movement Location To Description (External)",
            "legacyId": "DP9.DO1015e",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "DIRECTION_CODE",
            "type": "string",
            "display": "Movement Direction Code (External)",
            "legacyId": "DP9.DO103fd",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "REASON",
            "type": "string",
            "display": "Movement Description (External)",
            "legacyId": "DP9.DO1015b",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "MOVEMENT_LOCATION_FROM_CODE_",
            "type": "string",
            "display": "Movement Location From Code (External)",
            "legacyId": "DP9.DO103ff",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "MOVEMENT_LOCATION_FROM_DESCR35",
            "type": "string",
            "display": "Movement Location From Description (External)",
            "legacyId": "DP9.DO1015d",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376115/DPa",
      "name": "Xfer Movements Out of Jail",
      "description": "MIS Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.SURNAME, AT_DIM_DATE_EXT_MOV.DAY_DATE, SUBSTR(AT_FACT_MOV_EXT.MOVEMENT_TIME, 11, 6) AS MOVEMENT_TIME, AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK, AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_DESCRIPTION, AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_CODE_NK AS MOVEMENT_LOCATION_TO_CODE_, AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_DESCRIPTION AS MOVEMENT_LOCATION_TO_DESCRIP33, AT_FACT_MOV_EXT.REASON, AT_FACT_MOV_EXT.DIRECTION_CODE FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_TO WHERE (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (CASE WHEN AT_FACT_MOV_EXT.FROM_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.FROM_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+)) AND (CASE WHEN AT_FACT_MOV_EXT.TO_LOCATION_TYPE = 'Establishment' THEN AT_FACT_MOV_EXT.TO_LOCATION_SK END = AT_ESTABLISHMENT_EXT_MOV_TO.ESTABLISHMENT_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_FACT_MOV_EXT.TYPE = 'Transfers' AND AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #prompt('Establishment Code','A','External Movements\\Movement Location From Code (External)',Mono,Free,Not_Persistent,,User:2) */) AND AT_FACT_MOV_EXT.DIRECTION_CODE = 'OUT' AND AT_DIM_DATE_EXT_MOV.DAY_DATE >= (SELECT START_DATE FROM prompt_ /* = #prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0) */) AND AT_DIM_DATE_EXT_MOV.DAY_DATE <= (SELECT END_DATE FROM prompt_ /* = #prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1) */))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, INITIALS, SURNAME, DAY_DATE, MOVEMENT_TIME, ESTABLISHMENT_CODE_NK, ESTABLISHMENT_DESCRIPTION, MOVEMENT_LOCATION_TO_CODE_, MOVEMENT_LOCATION_TO_DESCRIP33, REASON, DIRECTION_CODE FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code','A','External Movements\\Movement Location From Code (External)',Mono,Free,Not_Persistent,,User:2)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "start_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer Start Date",
          "description": "@prompt('Transfer Start Date','D',,Mono,Free,Not_Persistent,,User:0)",
          "mandatory": "true"
        },
        {
          "index": 2,
          "name": "end_date",
          "filterType": "date",
          "reportFieldType": "date",
          "display": "Transfer End Date",
          "description": "@prompt('Transfer End Date','D',,Mono,Free,Not_Persistent,,User:1)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DPa.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "INITIALS",
            "type": "string",
            "display": "Offender Initials",
            "legacyId": "DPa.DO1012d",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DPa.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Movement Date Only (External)",
            "legacyId": "DPa.DO1015c",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "MOVEMENT_TIME",
            "type": "string",
            "display": "Movement Time",
            "legacyId": "DPa.DO10782",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "ESTABLISHMENT_CODE_NK",
            "type": "string",
            "display": "Movement Location From Code (External)",
            "legacyId": "DPa.DO103ff",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "ESTABLISHMENT_DESCRIPTION",
            "type": "string",
            "display": "Movement Location From Description (External)",
            "legacyId": "DPa.DO1015d",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "MOVEMENT_LOCATION_TO_CODE_",
            "type": "string",
            "display": "Movement Location To Code (External)",
            "legacyId": "DPa.DO10400",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "MOVEMENT_LOCATION_TO_DESCRIP33",
            "type": "string",
            "display": "Movement Location To Description (External)",
            "legacyId": "DPa.DO1015e",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "REASON",
            "type": "string",
            "display": "Movement Description (External)",
            "legacyId": "DPa.DO1015b",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "DIRECTION_CODE",
            "type": "string",
            "display": "Movement Direction Code (External)",
            "legacyId": "DPa.DO103fd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "66287.RS",
      "name": "Financial Transactions",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP5",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:DP2_DO654",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_USERRESPONSETOLOCCODE",
            "display": "To",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(IsNull([Transferred To].[NOMS Number]);\" \";UserResponse([Transferred To]; \"Establishment Code\"))"
          },
          {
            "name": "$ref:DP2_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1012D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO39",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO5AF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_TRANSFERED_TO_SPENDS_AMOUNT",
            "display": "Spends",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum(If([Transferred To].[Transaction Type Code] = \"TIR\" And [Transferred To].[Transaction Account Code] = 2102;[Transferred To].[Transaction Entry Amount];0))"
          },
          {
            "name": "$ref:V_TRANSFERED_TO_PRIVATE_AMOUNT",
            "display": "Private",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum(If([Transferred To].[Transaction Type Code] = \"TIR\" And [Transferred To].[Transaction Account Code] = 2101;[Transferred To].[Transaction Entry Amount];0))"
          },
          {
            "name": "$ref:V_TRANSFERED_TO_SAVINGS_AMOUNT",
            "display": "Savings",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum(If([Transferred To].[Transaction Type Code] = \"TIR\" And [Transferred To].[Transaction Account Code] = 2103;[Transferred To].[Transaction Entry Amount];0))"
          },
          {
            "name": "$ref:V_ACCOUNT_TOTALS_TO",
            "display": "Account Totals",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[v_Transfered To Private Amount]+[v_Transfered To Savings Amount]+[v_Transfered To Spends Amount]"
          },
          {
            "name": "$ref:V_ADVANCE_AMOUNT_TO",
            "display": " Advance",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Sum([v_Initial Advance Amount To]-[v_Advance Repayments Amount To])"
          }
        ]
      }
    },
    {
      "id": "67210.RS",
      "name": "Transfer Movements",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP9",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:DAY_DATE",
            "display": "Movement Date Only (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1015c"
          },
          {
            "name": "$ref:MOVEMENT_TIME",
            "display": "Movement Time",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO10782"
          },
          {
            "name": "$ref:ESTABLISHMENT_CODE_NK",
            "display": "Movement Location From Code (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO103ff"
          },
          {
            "name": "$ref:ESTABLISHMENT_DESCRIPTION",
            "display": "Movement Location From Description (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1015d"
          },
          {
            "name": "$ref:MOVEMENT_LOCATION_TO_CODE_",
            "display": "Movement Location To Code (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO10400"
          },
          {
            "name": "$ref:MOVEMENT_LOCATION_TO_DESCRIP33",
            "display": "Movement Location To Description (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1015e"
          },
          {
            "name": "$ref:DIRECTION_CODE",
            "display": "Movement Direction Code (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO103fd"
          },
          {
            "name": "$ref:REASON",
            "display": "Movement Description (External)",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1015b"
          },
          {
            "name": "$ref:OFFENDER_ID_DISPLAY",
            "display": "NOMS Number",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO10076"
          },
          {
            "name": "$ref:INITIALS",
            "display": "Offender Initials",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1012d"
          },
          {
            "name": "$ref:SURNAME",
            "display": "Offender Surname",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DPa.DO1007b"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "resolveEmbeddedVariables did not resolve all variables",
      "entityId": "okZTBVQACq_BHR0ATxeD8K7B948",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2407.\n  'D',,mono,free,Not_Persistent,User:102) */ ) and AT_BUSINESS_DATE.DAY_DATE between to_date(@Variable\u001b[4m(\u001b[0m'Transfer Start Date'))-1 and @Variable('Transfer End Date') ) AND AT_DIM_TRANSACTION_TYPE.TRANSACTI]",
      "entityId": "okZTBVQACq_BHR0ATxeD8K7B948",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "resolveEmbeddedVariables did not resolve all variables",
      "entityId": "okZTBVQACq_BHR0ATxeD8K7B948",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2407.\n  'D',,mono,free,Not_Persistent,User:102) */ ) and AT_BUSINESS_DATE.DAY_DATE between to_date(@Variable\u001b[4m(\u001b[0m'Transfer Start Date'))-1 and @Variable('Transfer End Date') ) AND AT_DIM_TRANSACTION_TYPE.TRANSACTI]",
      "entityId": "okZTBVQACq_BHR0ATxeD8K7B948",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP5",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO654 does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_USERRESPONSETOLOCCODE does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO10076 does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1012D does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO39 does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO5AF does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TRANSFERED_TO_SPENDS_AMOUNT does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TRANSFERED_TO_PRIVATE_AMOUNT does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_TRANSFERED_TO_SAVINGS_AMOUNT does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ACCOUNT_TOTALS_TO does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ADVANCE_AMOUNT_TO does not have corresponding dataset schema field",
      "entityId": "66287.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field MOVEMENT_LOCATION_TO_CODE_ does not have corresponding dataset schema field",
      "entityId": "67210.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field MOVEMENT_LOCATION_TO_DESCRIP33 does not have corresponding dataset schema field",
      "entityId": "67210.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3376115/DP5",
      "entityType": "dataset"
    }
  ]
}