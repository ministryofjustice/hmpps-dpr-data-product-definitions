{
  "id": "FinM_mBtrwoAcAYBAHBr.V4LACJIAFe4",
  "name": "MIS i2T Allocations",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "ACT0045",
      "Activities",
      "Activity",
      "CSRA",
      "Personal Officer"
    ]
  },
  "description": "The report returns a list of prisoners on a prison roll who are allocated to activities.<br/>ACT0045 - v00.00.01 Last Modified: 25/05/2021",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP9",
      "name": "Activities",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.FIRST_NAME, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), NVL(AT_OFFENDER_BOOKING.RELIGION_CODE,'Not Specified'), CASE WHEN AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassified' ELSE AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL END, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, AT_DIM_PROGRAMME_SERVICE.DESCRIPTION, AT_DIM_PROGRAMME_TYPE.DESCRIPTION, AT_FACT_OFFENDER_ACTIVITY.SUSPENDED_FLAG, AT_FACT_OFFENDER_ACTIVITY.OFFENDER_START_DATE, AT_FACT_OFFENDER_ACTIVITY.OFFENDER_END_DATE, case when DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' when FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH is not null then decode(to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2)),null,null, to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,1,2))|| ' yrs ') || decode( to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2)), null,null , to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,4,2))|| ' mths ' ) || decode(to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,7,2)), null,null , to_number(substr(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH,7,2))|| ' days ' ) else '' END, AT_OFFICER.FIRST_NAME || ' ' || AT_OFFICER.LAST_NAME, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK FROM BODIMIS.FACT_OFFENDER_ACTIVITY AT_FACT_OFFENDER_ACTIVITY, BODIMIS.DIM_CELL AT_DIM_LOCATION, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_ESTABLISHMENT AT_ACTIVITY_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_CURRENT_SECURITY_CATEGORY, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, BODIMIS.DIM_PROGRAMME_SERVICE AT_DIM_PROGRAMME_SERVICE, BODIMIS.DIM_PROGRAMME_TYPE AT_DIM_PROGRAMME_TYPE, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, BODIMIS.DIM_STAFF_MEMBER AT_OFFICER, BODIMIS.DIM_CELL AT_CELL WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_OFFENDER_BOOKING.PERSONAL_OFFICER_SK=AT_OFFICER.STAFF_MEMBER_SK ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_FACT_OFFENDER_ACTIVITY.OFFENDER_BOOKING_SK ) AND ( AT_DIM_PROGRAMME_TYPE.PROGRAMME_TYPE_SK=AT_FACT_OFFENDER_ACTIVITY.PROGRAMME_TYPE_SK ) AND ( AT_ACTIVITY_ESTABLISHMENT.ESTABLISHMENT_SK=AT_FACT_OFFENDER_ACTIVITY.ESTABLISHMENT_SK ) AND ( AT_DIM_PROGRAMME_SERVICE.PROGRAMME_SERVICE_SK=AT_FACT_OFFENDER_ACTIVITY.PROGRAMME_SERVICE_SK ) AND ( AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_FLAG(+)='Y' ) AND ( AT_CURRENT_SECURITY_CATEGORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_OFFENDER_BOOKING.LIVING_UNIT_SK=AT_DIM_LOCATION.UNIT_4_SK(+) ) AND ( ( AT_OFFENDER_BOOKING.BOOKING_STATUS = 'O' ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code(s)','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0) */ ) AND AT_ACTIVITY_ESTABLISHMENT.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code(s)','A','Activities\\Activity Establishment Code',Multi,Free,Not_Persistent,,User:1) */ ) AND ( case when 'All' in (SELECT WING FROM prompt_ /*= #Prompt('Wing (All for all)','A','Cell\\Unit Description 1',multi,free,Not_Persistent,User:80) */ ) then 'All' else AT_CELL.UNIT_1_DESCRIPTION end in @Variable('Wing (All for all)') ) AND ( (AT_DIM_PROGRAMME_TYPE.SCHEDULE_END_DATE IS NULL OR AT_DIM_PROGRAMME_TYPE.SCHEDULE_END_DATE > trunc(sysdate)) ) AND TRUNC(AT_FACT_OFFENDER_ACTIVITY.OFFENDER_START_DATE) <= trunc(sysdate) AND ( CASE WHEN TRUNC(AT_FACT_OFFENDER_ACTIVITY.OFFENDER_END_DATE) <> '31/12/9999' THEN TRUNC(AT_FACT_OFFENDER_ACTIVITY.OFFENDER_END_DATE) END > trunc(sysdate) OR CASE WHEN TRUNC(AT_FACT_OFFENDER_ACTIVITY.OFFENDER_END_DATE) <> '31/12/9999' THEN TRUNC(AT_FACT_OFFENDER_ACTIVITY.OFFENDER_END_DATE) END Is Null ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code(s)','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "wing",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Wing (All for all)",
          "description": "@Prompt('Wing (All for all)','A','Cell\\Unit Description 1',multi,free,Not_Persistent,User:80)",
          "mandatory": "true",
          "referenceType": "wing"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP15",
      "name": "CSRA",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_CSRA_LEVEL FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS, BODIMIS.DIM_CELL AT_CELL WHERE ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK(+) ) AND ( ( AT_OFFENDER_BOOKING.BOOKING_STATUS = 'O' ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) AND AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #prompt('Establishment Code(s)','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0) */ ) AND ( case when 'All' in (SELECT WING FROM prompt_ /*= #Prompt('Wing (All for all)','A','Cell\\Unit Description 1',multi,free,Not_Persistent,User:80) */ ) then 'All' else AT_CELL.UNIT_1_DESCRIPTION end in @Variable('Wing (All for all)') ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@prompt('Establishment Code(s)','A','Associated Establishment\\Associated Establishment Code',Multi,Free,Not_Persistent,,User:0)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "wing",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Wing (All for all)",
          "description": "@Prompt('Wing (All for all)','A','Cell\\Unit Description 1',multi,free,Not_Persistent,User:80)",
          "mandatory": "true",
          "referenceType": "wing"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375368/DP14",
      "name": "MIS Load",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP14.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "208193.RS",
      "name": "i2T Allocations",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP9",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP9_DO107B2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO10080",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO10A7C",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO10082",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO42",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP9_DO100B2",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_RELEASEDATE",
            "display": "Release Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(IsNull([Release Date (Current)]);\"-\";[Release Date (Current)])"
          },
          {
            "name": "$ref:DP9_DO100B9",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_ACTIVITY_DESCRIPTION_WORDCAP",
            "display": "Activity Description",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=WordCap([Activity Description])"
          },
          {
            "name": "$ref:V_CSRA",
            "display": "CSRA",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[CSRA - Current Level]"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "resolveEmbeddedVariables did not resolve all variables",
      "entityId": "FinM_mBtrwoAcAYBAHBr.V4LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 2040.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "FinM_mBtrwoAcAYBAHBr.V4LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "resolveEmbeddedVariables did not resolve all variables",
      "entityId": "FinM_mBtrwoAcAYBAHBr.V4LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'expressions' missing for <class 'sqlglot.expressions.Aliases'>. Line 1, Col: 1484.\n  multi,free,Not_Persistent,User:80) */ ) then 'All' else AT_CELL.UNIT_1_DESCRIPTION end in @Variable(\u001b[4m'Wing (All for all)'\u001b[0m) ) )]",
      "entityId": "FinM_mBtrwoAcAYBAHBr.V4LACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP9",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3375368/DP15",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO107B2 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO10076 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO1007B does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO10080 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO10A7C does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO10082 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO42 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO100B2 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_RELEASEDATE does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP9_DO100B9 does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ACTIVITY_DESCRIPTION_WORDCAP does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_CSRA does not have corresponding dataset schema field",
      "entityId": "208193.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP9",
      "entityType": "dataset"
    }
  ]
}