{
  "id": "klYdIyUABj5XLIQA.P8AFE.rcVQ",
  "name": "MISONR DRAFT OASys Initial Overdue v0.3",
  "description": "A report to show overdue initial assessments uisng the OASys Controlling Owner field to identify whether HMPS or NPS are responsible for completing the assessments.",
  "metadata": {
    "version": "1.0.0",
    "tags": []
  },
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Prisoners",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG, CASE when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) <= 17 then 'Juvenile' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) between 18 and 20 then 'Young Person' when ( floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12) ) >= 21 then 'Adult' END, DT_CURRENT_KEY_DATES.SSD FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, at_fact_offender_sentence.tused_date_sk as tused_sk, nullif(td.day_date, to_date('31/12/9000', 'DD/MM/YYYY')) as tused From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, bodimis.dim_date td where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and at_fact_offender_sentence.tused_date_sk = td.date_sk(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when at_sed_date.day_date <> '31/12/9000' then at_sed_date.day_date end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, at_fact_offender_sentence.tused_date_sk, td.day_date ) DT_CURRENT_KEY_DATES, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_COURT_CASE_STATUS AT_DIM_COURT_CASE_STATUS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, ( SELECT BODIMIS.FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, BODIMIS.FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH FROM BODIMIS.FACT_OFFENDER_SENTENCE WHERE ( BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' ) ) DT_CURREFFSENLEN, ( --derives a single 'Y' if a prisoner has one or more life sentences where the sentence status is active. The table is outer-joined to dim_offender_booking in the universe. SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_CELL AT_CELL, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK(+) ) AND ( AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_STATUS_SK=AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURREFFSENLEN.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_CELL.ESTABLISHMENT_SK=AT_ESTABLISHMENT.ESTABLISHMENT_SK ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_SENTENCE.COURT_CASE_SK(+) ) AND ( AT_ESTABLISHMENT.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('DPRWS') AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y' ) AND CASE When DT_LIFEFLAG.LIFE_SENTENCE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_LIFEFLAG.LIFE_SENTENCE_FLAG is null and DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END <> 'No sentence' AND ( AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS = 'Active' ) AND ( AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK = 'FSI' ) )), dataset_ AS (SELECT  FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375896/DP22",
      "name": "OASys",
      "description": "ONR - Ad-hoc Reports",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT ASSESSMENT.DATE_COMPLETED AS DATE_COMPLETED, OFFENDER.OFFENDER_ID_DISPLAY AS OFFENDER_ID_DISPLAY FROM ASSESSMENT, OFFENDER, REP_OFFENDER_HISTORY WHERE (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (SUBSTR(OFFENDER.OFFENDER_ID_DISPLAY, 1, 10) = TAGMIS_CASELOAD_SECURITY('DPRWS', OFFENDER.OFFENDER_ID_DISPLAY)) AND (ASSESSMENT.ASSESSMENT_ID IN (SELECT LAST_VALUE(ASSESSMENT.assessment_id) OVER (PARTITION BY ASSESSMENT.offender_id ORDER BY ASSESSMENT.date_completed rows BETWEEN CURRENT ROW AND UNBOUNDED following) AS last_ass_for_offender FROM ASSESSMENT, OFFENDER, REP_OFFENDER_HISTORY, PURPOSE_OF_ASSESSMENT WHERE (PURPOSE_OF_ASSESSMENT.PURPOSE_OF_ASSESSMENT_CODE (+) = ASSESSMENT.PURPOSE_OF_ASSESSMENT_CODE) AND (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (ASSESSMENT.single_date_completed = 'Y' AND completed_assessment <> 'Abandoned' AND NOT OFFENDER.Offender_id IS NULL) AND (SUBSTR(OFFENDER.OFFENDER_ID_DISPLAY, 1, 10) = TAGMIS_CASELOAD_SECURITY('DPRWS', OFFENDER.OFFENDER_ID_DISPLAY)) AND (COALESCE(ASSESSMENT.COMPLETED_ASSESSMENT, 'Not Specified') IN ('True') AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1) AND REP_OFFENDER_HISTORY.PHYSICAL_LOCATION IN ('Featherstone (HMP)') AND NOT COALESCE(PURPOSE_OF_ASSESSMENT.DESCRIPTION, 'Not Specified') IN ('PSR - SDR', 'PSR - Oral', 'PSR - FDR', 'PSR Addendum', 'PSR', 'Other offences committed PSR', 'Nil Report'))) AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1))), dataset_ AS (SELECT DATE_COMPLETED, OFFENDER_ID_DISPLAY FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "DATE_COMPLETED",
            "type": "date",
            "display": "Date Completed",
            "legacyId": "DP22.DO5e5",
            "legacySqlClass": "alias"
          },
          {
            "index": 1,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP22.DO264",
            "legacySqlClass": "alias"
          }
        ]
      }
    },
    {
      "id": "3375368/DP24",
      "name": "MIS Load",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE AS BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP24.DO104dd",
            "legacySqlClass": "alias"
          }
        ]
      }
    },
    {
      "id": "3375896/DP28",
      "name": "OASys Offenders",
      "description": "ONR - Ad-hoc Reports",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT OFFENDER.OFFENDER_ID_DISPLAY AS OFFENDER_ID_DISPLAY, REP_OFFENDER_HISTORY.CONTROLLING_OWNER AS CONTROLLING_OWNER FROM OFFENDER, REP_OFFENDER_HISTORY WHERE (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (SUBSTR(OFFENDER.OFFENDER_ID_DISPLAY, 1, 10) = TAGMIS_CASELOAD_SECURITY('DPRWS', OFFENDER.OFFENDER_ID_DISPLAY)) AND ((REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1) AND REP_OFFENDER_HISTORY.PHYSICAL_LOCATION IN ('Featherstone (HMP)'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, CONTROLLING_OWNER FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP28.DO264",
            "legacySqlClass": "alias"
          },
          {
            "index": 1,
            "name": "CONTROLLING_OWNER",
            "type": "string",
            "display": "Controlling Owner",
            "legacyId": "DP28.DO114b",
            "legacySqlClass": "alias"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "135613.RS",
      "name": "Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_12_MONTH_SENTENCE IN (1) AND V_12_MONTHS_OR_18_TO_21 IN (1)))"
      },
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4.DO10129",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v Assessment to be completed by NPS or HMPS",
            "display": "",
            "formula": "=If([Controlling Owner] Between (\"C01\";\"C21\");\"HMPS\";(If([Controlling Owner] Between (\"0\";\"9999\");\"HMPS\";\"NPS\")))",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v Count NOMS Number",
            "display": "",
            "formula": "=Count([Prisoners].[NOMS Number];Distinct)",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v_OASys Overdue",
            "display": "",
            "formula": "=Sum(If([v_Eight or Sixteen Weeks Since Sentence]=\"Y\" And Min(IsNull([v_latest_assessment_after_sentence] In ([NOMS Number];[Establishment Name];[v Assessment to be completed by NPS or HMPS]))) = 1; 1) In ([NOMS Number];[Establishment Name];[v Assessment to be completed by NPS or HMPS]))",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          }
        ]
      }
    },
    {
      "id": "135768.RS",
      "name": "HMPS",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_ASSESSMENT_TO_BE_COMPLETED_BY_NPS_OR_HMPS IN ('HMPS') AND V_12_MONTH_SENTENCE IN (1) AND V_12_MONTHS_OR_18_TO_21 IN (1) AND V_OASYS_OVERDUE IN (1)))"
      },
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4.DO10129",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v Offender Name + Initials",
            "display": "",
            "formula": "=[Offender Surname] + \",\" + \" \" + [Offender Initials]",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:DP4.DO32d",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          }
        ]
      }
    },
    {
      "id": "135802.RS",
      "name": "NPS",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_ASSESSMENT_TO_BE_COMPLETED_BY_NPS_OR_HMPS IN ('NPS') AND V_12_MONTH_SENTENCE IN (1) AND V_12_MONTHS_OR_18_TO_21 IN (1) AND V_OASYS_OVERDUE IN (1)))"
      },
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4.DO10129",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v Offender Name + Initials",
            "display": "",
            "formula": "=[Offender Surname] + \",\" + \" \" + [Offender Initials]",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:DP4.DO32d",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          }
        ]
      }
    },
    {
      "id": "135744.RS",
      "name": "Unknown",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE (V_ASSESSMENT_TO_BE_COMPLETED_BY_NPS_OR_HMPS IS NULL AND V_12_MONTH_SENTENCE IN (1) AND V_12_MONTHS_OR_18_TO_21 IN (1) AND V_OASYS_OVERDUE IN (1)))"
      },
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP4.DO10129",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:v Offender Name + Initials",
            "display": "",
            "formula": "=[Offender Surname] + \",\" + \" \" + [Offender Initials]",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          },
          {
            "name": "$ref:DP4.DO32d",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false
          }
        ]
      }
    }
  ]
}