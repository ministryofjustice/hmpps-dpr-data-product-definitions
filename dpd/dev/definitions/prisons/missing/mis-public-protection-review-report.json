{
  "id": "klawm8oADyHiabcAlv8AFE.rcVQ",
  "name": "MIS Public Protection Review Report",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "SEN0025 v00.00.02"
    ]
  },
  "description": "Returns a list of prisoners along with their NOMS number, CRO, PNC, Earliest Date of Current Active Sentence, release date and any Active Alerts that fall under the Sexual Offences Category.<br/>SEN0025 - v00.00.02 Last Modified: 02/02/2016",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP2",
      "name": "Sentence",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, AT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, DT_LIFEFLAG.LIFE_SENTENCE_FLAG, AT_OFFENDER_BOOKING.CRO_NUMBER, AT_OFFENDER_BOOKING.PNC_ID FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_SENTENCE_STATUS AT_DIM_SENTENCE_STATUS, BODIMIS.DIM_COURT_CASE_STATUS AT_DIM_COURT_CASE_STATUS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, BODIMIS.DIM_CELL AT_CELL, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) ) AND ( AT_FACT_SENTENCE.SENTENCE_STATUS_SK=AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_STATUS_SK=AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_CELL.ESTABLISHMENT_SK=AT_ESTABLISHMENT.ESTABLISHMENT_SK ) AND ( AT_CELL.UNIT_4_SK=AT_OFFENDER_BOOKING.LIVING_UNIT_SK ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_SENTENCE.COURT_CASE_SK(+) ) AND ( AT_ESTABLISHMENT.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( ( AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK in ((SELECT establishment_code from prompt_)) Or 'All' in ((SELECT establishment_code from prompt_)) ) AND ( AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS = 'Active' ) AND AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS = 'Active' AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_OFFENDER_BOOKING.IN_OUT <> 'TRN' AND AT_OFFENDER_BOOKING.LIVING_UNIT_SK >= 1 ) UNION SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, AT_ESTABLISHMENT_TAP.ESTABLISHMENT_DESCRIPTION, CASE WHEN AT_SENT_START_DATE.DAY_DATE < '31/12/9000' THEN AT_SENT_START_DATE.DAY_DATE END, AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS, DT_CURRENT_RELEASE_DATE.CURR_RELEASE_DATE, DT_LIFEFLAG.LIFE_SENTENCE_FLAG, AT_OFFENDER_BOOKING.CRO_NUMBER, AT_OFFENDER_BOOKING.PNC_ID FROM BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_SENTENCE_STATUS AT_DIM_SENTENCE_STATUS, BODIMIS.DIM_COURT_CASE_STATUS AT_DIM_COURT_CASE_STATUS, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, (   Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE From --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_RELEASE_DATE where --AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' --and AT_RELEASE_DATE.DAY_DATE !='31/12/9000' ) DT_CURRENT_RELEASE_DATE, (  SELECT distinct BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) AND dss.sentence_status='Active' AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' ) DT_LIFEFLAG, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) ) AND ( AT_FACT_SENTENCE.SENTENCE_STATUS_SK=AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_STATUS_SK=AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_RELEASE_DATE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_SENTENCE.COURT_CASE_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( ( AT_DIM_COURT_CASE_STATUS.COURT_CASE_STATUS = 'Active' ) AND AT_DIM_SENTENCE_STATUS.SENTENCE_STATUS = 'Active' AND ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK in ((SELECT establishment_code from prompt_)) Or 'All' in ((SELECT establishment_code from prompt_)) ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND='Y' ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND AT_OFFENDER_BOOKING.IN_OUT <> 'TRN       ' AND AT_OFFENDER_BOOKING.LIVING_UNIT_SK < 1 )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP9",
      "name": "Alerts",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_ALERT.ALERT_CODE_NK, CASE WHEN AT_ALERT.ALERT_ACTIVE_FLAG = 'Y' THEN AT_ALERT.ALERT_DESCRIPTION END AS ALERT_DESCRIPTION FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ALERT AT_ALERT, BODIMIS.FACT_OFFENDER_ALERT AT_OFFENDER_ALERT, BODIMIS.DIM_CELL AT_CELL WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_OFFENDER_ALERT.OFFENDER_BOOKING_SK (+)) AND (AT_ALERT.ALERT_SK (+) = AT_OFFENDER_ALERT.ALERT_SK) AND (AT_CELL.ESTABLISHMENT_SK = AT_ESTABLISHMENT.ESTABLISHMENT_SK) AND (AT_CELL.UNIT_4_SK = AT_OFFENDER_BOOKING.LIVING_UNIT_SK) AND (AT_ESTABLISHMENT.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND ((AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y') AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK IN ((SELECT establishment_code FROM prompt_)) OR 'All' IN ((SELECT establishment_code FROM prompt_))) AND CASE WHEN AT_ALERT.ALERT_ACTIVE_FLAG = 'Y' THEN AT_ALERT.ALERT_TYPE_NK END IN ('S') AND (AT_OFFENDER_ALERT.ALERT_STATUS = 'ACTIVE'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, ALERT_CODE_NK, ALERT_DESCRIPTION FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP9.DO76",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "ALERT_CODE_NK",
            "type": "string",
            "display": "Alert Code",
            "legacyId": "DP9.DO8e",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "ALERT_DESCRIPTION",
            "type": "string",
            "display": "Alert Description",
            "legacyId": "DP9.DO90",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP4",
      "name": "MIS Load Log",
      "description": "MIS Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP4.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "82602.RS",
      "name": "By Date of Current Sentence",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1012D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DA",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DB",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DE",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_MIN_SENT_DATE",
            "display": "Current Sent Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Min([Sentence Start Date]) In ([NOMS Number])"
          },
          {
            "name": "$ref:DP2_DO565",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO58F",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_ALERT_SSHO",
            "display": "RSHO or SRO",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code]=\"SSHO\") In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SC",
            "display": "Risk to Children",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code]=\"SC\") In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SONR",
            "display": "Sex Offender Not Required to Register",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code] InList (\"SONR\"; \"SO\")) In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SOR",
            "display": "Registered Sex Offender",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code] InList(\"SOR\"; \"SR\")) In ([NOMS Number])>0;\"Y\";\"\")"
          }
        ]
      }
    },
    {
      "id": "83986.RS",
      "name": "By Surname",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP2",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP2_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO1012D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DA",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DB",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO100DE",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_MIN_SENT_DATE",
            "display": "Current Sent Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Min([Sentence Start Date]) In ([NOMS Number])"
          },
          {
            "name": "$ref:DP2_DO565",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP2_DO58F",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_ALERT_SSHO",
            "display": "RSHO or SRO",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code]=\"SSHO\") In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SC",
            "display": "Risk to Children",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code]=\"SC\") In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SONR",
            "display": "Sex Offender Not Required to Register",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code] InList (\"SONR\"; \"SO\")) In ([NOMS Number])>0;\"Y\";\"\")"
          },
          {
            "name": "$ref:V_ALERT_SOR",
            "display": "Registered Sex Offender",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Count([Alert Code]) Where ([Alert Code] InList(\"SOR\"; \"SR\")) In ([NOMS Number])>0;\"Y\";\"\")"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 950.\n  hen AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE \u001b[4mFrom\u001b[0m --BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENT]",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations unable to append column : V_MIN_SENT_DATE :: Error: Invalid expression / Unexpected token. Line 1, Col: 29.\n  MIN(SENTENCE_START_DATE) IN \u001b[4m,\u001b[0mOFFENDER_ID_DISPLAY,",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_ALERT_SSHO :: Error: =If(Count([Alert Code]) Where ([Alert Code]=\"SSHO\") In ([NOMS Number])>0;\"Y\";\"\") ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_ALERT_SC :: Error: =If(Count([Alert Code]) Where ([Alert Code]=\"SC\") In ([NOMS Number])>0;\"Y\";\"\") ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations unable to append column : V_ALERT_SONR :: Error: argument 'sql': 'NoneType' object cannot be converted to 'PyString'",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations unable to append column : V_ALERT_SOR :: Error: argument 'sql': 'NoneType' object cannot be converted to 'PyString'",
      "entityId": "klawm8oADyHiabcAlv8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1012D does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DA does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DB does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DE does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MIN_SENT_DATE does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO565 does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO58F does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SSHO does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SC does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SONR does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SOR does not have corresponding dataset schema field",
      "entityId": "82602.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1007B does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO1012D does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DA does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DB does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO100DE does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MIN_SENT_DATE does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO565 does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP2_DO58F does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SSHO does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SC does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SONR does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ALERT_SOR does not have corresponding dataset schema field",
      "entityId": "83986.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP2",
      "entityType": "dataset"
    }
  ]
}