{
  "id": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
  "name": "MIS OMU Caseload Information",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "OAS0018 v00.00.05"
    ]
  },
  "description": "OAS0018 - v00.00.06  Last Modified: 04/10/2017",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Prisoners",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END, floor((months_between(( trunc(sysdate) ), ( CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END ))) / 12), CASE WHEN AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassified' ELSE AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL END, CASE When AT_OFFENDER_BOOKING.LONGEST_SENTENCE_LIFE_FLAG='Y' Then 'Life' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) = '99' Then 'Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH ='00/00/00' then 'No sentence' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2)) <6 then 'Less than 6 Months' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)='00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,4,2))<12 then '6 Months to less than 1 Year' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)<>'00' and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<2 then '1 Year to less than 2 Years' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<3 then '2 Years to less than 3 Years' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<4 then '3 Years to less than 4 Years' When substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2) not in ('00','01','02','03') and to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2))<10 then '4 Years to less than 10 Years' When to_number(substr(DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH,1,2)) >=10 then '10 Years or more and Less than Life' When DT_CURREFFSENLEN.EFFECTIVE_SENTENCE_LENGTH is null then 'No sentence' Else 'Not Categorised' END, AT_OFFENDER_BOOKING.PNC_ID, AT_FACT_COURT_CHARGE.MOST_SERIOUS_FLAG, DT_CURRENT_KEY_DATES.SSD, AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE, DT_ADMISSION.MOVEMENT_TIME, DT_CURRENT_KEY_DATES.CURR_RELEASE_DATE, DT_CURRENT_KEY_DATES.CURR_HDCED_DATE, DT_CURRENT_KEY_DATES.CURR_APD_DATE, DT_CURRENT_KEY_DATES.CURR_PED_DATE, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, nvl(AT_OFFENDER_BOOKING.IEP_BAND,'** Incentive Level Missing **'), AT_DIM_OFFENCE.OFFENCE_NAME, DT_CURRENT_KEY_DATES.CURR_ROTL_DATE, CASE WHEN AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassfied' ELSE AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_LEVEL END, AT_DIM_OFFENDER_ASSESSMENTS.CURRENT_SEC_CAT_REVIEW_DATE, AT_OFFENDER_BOOKING.NATIONALITY_DESCRIPTION, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE='MERGE' Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL Then 'Code Missing' when AT_DIM_ETHNICITY_CODES.CODE='W8' then 'White: Gypsy or Irish Traveller' when AT_DIM_ETHNICITY_CODES.CODE='O1' then 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION end, DT_CURRENT_KEY_DATES.CURR_HDCAD_DATE, DT_CURRENT_KEY_DATES.CURR_CRD_DATE FROM BODIMIS.DIM_OFFENCE AT_DIM_OFFENCE, ( Select AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK as OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end as CURR_APD_DATE, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end as CURR_ARD_DATE, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end as CURR_CRD_DATE, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end as CURR_ETD_DATE, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end as CURR_HDCAD_DATE, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end as CURR_HDCED_DATE, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end as CURR_PED_DATE, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end as CURR_LED_DATE, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end as CURR_LTD_DATE, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end as CURR_MTD_DATE, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end as CURR_NPD_DATE, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end as CURR_PRRD_DATE, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end as CURR_RELEASE_DATE, case when AT_SED_DATE.DAY_DATE <> '31/12/9000' Then AT_SED_DATE.DAY_DATE end as SED, MIN(case when AT_SENT_START_DATE.DAY_DATE <> '31/12/9000' Then AT_SENT_START_DATE.DAY_DATE end) as SSD, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE end as TARIFF, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE end as CURR_ROTL_DATE, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE end as CURR_ERSED_DATE, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE end as CURR_TERSED_DATE, at_fact_offender_sentence.tused_date_sk as tused_sk, nullif(td.day_date, to_date('31/12/9000', 'DD/MM/YYYY')) as tused From BODIMIS.FACT_CASE_SENTENCE AT_FACT_SENTENCE, BODIMIS.FACT_OFFENDER_SENTENCE AT_FACT_OFFENDER_SENTENCE, BODIMIS.DIM_DATE AT_ARD_DATE, BODIMIS.DIM_DATE AT_APD_DATE, BODIMIS.DIM_DATE AT_CRD_DATE, BODIMIS.DIM_DATE AT_ETD_DATE, BODIMIS.DIM_DATE AT_HDCAD_DATE, BODIMIS.DIM_DATE AT_HDCED_DATE, BODIMIS.DIM_DATE AT_PED_DATE, BODIMIS.DIM_DATE AT_LED_DATE, BODIMIS.DIM_DATE AT_LTD_DATE, BODIMIS.DIM_DATE AT_MTD_DATE, BODIMIS.DIM_DATE AT_NPD_DATE, BODIMIS.DIM_DATE AT_PRRD_DATE, BODIMIS.DIM_DATE AT_RELEASE_DATE, BODIMIS.DIM_DATE AT_SED_DATE, BODIMIS.DIM_DATE AT_SENT_START_DATE, BODIMIS.DIM_DATE AT_TARIFF_DATE, BODIMIS.DIM_DATE AT_ROTL_DATE, BODIMIS.DIM_DATE AT_ERSED_DATE, BODIMIS.DIM_DATE AT_TERSED_DATE, bodimis.dim_date td where AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK=AT_FACT_SENTENCE.OFFENDER_BOOKING_SK(+) and AT_FACT_OFFENDER_SENTENCE.ARD_DATE_SK=AT_ARD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.APD_DATE_SK=AT_APD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.CRD_DATE_SK=AT_CRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ETD_DATE_SK=AT_ETD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCAD_DATE_SK=AT_HDCAD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.HDCED_DATE_SK=AT_HDCED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LED_DATE_SK=AT_LED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.LTD_DATE_SK=AT_LTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.MTD_DATE_SK=AT_MTD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.NPD_DATE_SK= AT_NPD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PED_DATE_SK=AT_PED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.PRRD_DATE_SK=AT_PRRD_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.RELEASE_CALCULATED_DATE_SK=AT_RELEASE_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.SED_DATE_SK=AT_SED_DATE.DATE_SK(+) and AT_FACT_SENTENCE.SENTENCE_START_DATE_SK=AT_SENT_START_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TARIFF_DATE_SK=AT_TARIFF_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ROTL_DATE_SK=AT_ROTL_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.ERSED_DATE_SK=AT_ERSED_DATE.DATE_SK(+) and AT_FACT_OFFENDER_SENTENCE.TERSED_DATE_SK=AT_TERSED_DATE.DATE_SK(+) and at_fact_offender_sentence.tused_date_sk = td.date_sk(+) and AT_FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' GROUP BY AT_FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, case when AT_APD_DATE.DAY_DATE <> '31/12/9000' Then AT_APD_DATE.DAY_DATE end, case when AT_ARD_DATE.DAY_DATE <> '31/12/9000' Then AT_ARD_DATE.DAY_DATE end, case when AT_CRD_DATE.DAY_DATE <> '31/12/9000' Then AT_CRD_DATE.DAY_DATE end, case when AT_ETD_DATE.DAY_DATE <> '31/12/9000' Then AT_ETD_DATE.DAY_DATE end, case when AT_HDCAD_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCAD_DATE.DAY_DATE end, case when AT_HDCED_DATE.DAY_DATE <> '31/12/9000' Then AT_HDCED_DATE.DAY_DATE end, case when AT_PED_DATE.DAY_DATE <> '31/12/9000' Then AT_PED_DATE.DAY_DATE end, case when AT_LED_DATE.DAY_DATE <> '31/12/9000' Then AT_LED_DATE.DAY_DATE end, case when AT_LTD_DATE.DAY_DATE <> '31/12/9000' Then AT_LTD_DATE.DAY_DATE end, case when AT_MTD_DATE.DAY_DATE <> '31/12/9000' Then AT_MTD_DATE.DAY_DATE end, case when AT_NPD_DATE.DAY_DATE <> '31/12/9000' Then AT_NPD_DATE.DAY_DATE end, case when AT_PRRD_DATE.DAY_DATE <> '31/12/9000' Then AT_PRRD_DATE.DAY_DATE end, case when AT_RELEASE_DATE.DAY_DATE <> '31/12/9000' Then AT_RELEASE_DATE.DAY_DATE end, case when at_sed_date.day_date <> '31/12/9000' then at_sed_date.day_date end, case when AT_TARIFF_DATE.DAY_DATE <> '31/12/9000' Then AT_TARIFF_DATE.DAY_DATE END, case when AT_ROTL_DATE.DAY_DATE <> '31/12/9000' Then AT_ROTL_DATE.DAY_DATE END, case when AT_ERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_ERSED_DATE.DAY_DATE END, case when AT_TERSED_DATE.DAY_DATE <> '31/12/9000' Then AT_TERSED_DATE.DAY_DATE END, at_fact_offender_sentence.tused_date_sk, td.day_date ) DT_CURRENT_KEY_DATES, ( Select ob.offender_id_display, fme.offender_booking_sk, est.establishment_code_nk, fme.to_location_sk, fme.from_location_sk , fme.from_location_type, max(fme.MOVEMENT_SEQ ) as MOVEMENT_SEQ, max(d.day_date) as MOVEMENT_TIME, trunc(ETL.LOAD_END_DATETIME) as LOAD_DATE From BODIMIS.FACT_MOVEMENT_EXTERNAL fme, BODIMIS.DIM_OFFENDER_BOOKING ob, BODIMIS.DIM_ESTABLISHMENT est, BODIMIS.ETL_LOAD_LOG ETL, BODIMIS.DIM_DATE d Where ob.ESTABLISHMENT_SK=est.ESTABLISHMENT_SK and d.date_sk=fme.date_sk and fme.offender_booking_sk=ob.offender_booking_sk and ob.active_status IN('Active In','Active Out') And ob.MIS_CURRENT_RECORD_IND = 'Y' and ob.ACTIVE_FLAG = 'Y' and ETL.LOAD_ID=(select max(LOAD_ID) from BODIMIS.ETL_LOAD_LOG WHERE LOAD_END_DATETIME IS NOT NULL) And ob.ESTABLISHMENT_SK=fme.to_location_sk and fme.movement_seq= (select max(fme2.movement_seq ) from BODIMIS.FACT_MOVEMENT_EXTERNAL fme2 where fme.offender_booking_sk=fme2.offender_booking_sk and fme2.direction_code='IN' And fme2.TYPE='Admission' And fme2.To_location_type='Establishment' and fme2.reason_code <> 'R') GROUP BY ob.offender_id_display, fme.offender_booking_sk,est.establishment_code_nk,fme.to_location_sk,fme.from_location_sk,fme.from_location_type,ETL.LOAD_END_DATETIME ) DT_ADMISSION, BODIMIS.DIM_CELL AT_DIM_LOCATION, BODIMIS.FACT_COURT_CHARGE AT_FACT_COURT_CHARGE, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_CURRENT_SECURITY_CATEGORY, ( SELECT BODIMIS.FACT_OFFENDER_SENTENCE.OFFENDER_BOOKING_SK, BODIMIS.FACT_OFFENDER_SENTENCE.EFFECTIVE_SENTENCE_LENGTH FROM BODIMIS.FACT_OFFENDER_SENTENCE WHERE ( BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' ) ) DT_CURREFFSENLEN, -- (  -- --SELECT distinct  -- BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG --FROM   --BODIMIS.DIM_SENTENCE_STATUS dss --WHERE -- ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK=dss.sentence_status_sk) --AND dss.sentence_status='Active' -- AND ( BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK ) -- AND ( BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK=BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK ) -- AND ( BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK=BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK ) -- and BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG='Y' -- ) DT_LIFEFLAG, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_DIM_OFFENDER_ASSESSMENTS, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE ( AT_FACT_COURT_CHARGE.OFFENCE_SK=AT_DIM_OFFENCE.OFFENCE_SK(+) ) AND ( AT_COURT_CASE.COURT_CASE_SK=AT_FACT_COURT_CHARGE.COURT_CASE_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURRENT_KEY_DATES.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_CURREFFSENLEN.OFFENDER_BOOKING_SK(+) ) -- AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_LIFEFLAG.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_COURT_CASE.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_DIM_ETHNICITY_CODES.CODE(+)=AT_OFFENDER_BOOKING.ETHNICITY_CODE ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username from context_) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=DT_ADMISSION.OFFENDER_BOOKING_SK(+) ) AND ( AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_FLAG(+)='Y' ) AND ( AT_CURRENT_SECURITY_CATEGORY.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK=AT_DIM_OFFENDER_ASSESSMENTS.OFFENDER_BOOKING_SK(+) ) AND ( AT_OFFENDER_BOOKING.LIVING_UNIT_SK=AT_DIM_LOCATION.UNIT_4_SK(+) ) AND ( ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK =(SELECT establishment_code from prompt_) ) AND ( AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y' ) AND ( AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y' ) )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3375896/DP22",
      "name": "OASys",
      "description": "ONR - Ad-hoc Reports",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT OFFENDER.OFFENDER_ID_DISPLAY, ASSESSMENT.DATE_COMPLETED, COUNT(DISTINCT OFFENDER.OFFENDER_ID) AS COUNT_OF_OFFENDERS, REP_OFFENDER_HISTORY.CONTROLLING_OWNER, SUBSTR(ASSESSMENT.CALC_HIGHEST_RISK, 4) AS RISK_LEVEL_, REP_OFFENDER_HISTORY.OFFENDER_MANAGER, ASSESSMENT.CALC_PURPOSE_OF_ASSMNT_GROUPS, COALESCE(PURPOSE_OF_ASSESSMENT.DESCRIPTION, 'Not Specified') AS PURPOSE_OF_ASSESSMENT, ASSESSMENT_SECTION1.S1Q27A_NO_GENERAL_OFFENDING_12, ASSESSMENT_SECTION1.S1Q27B_NO_GENERAL_OFFENDING_24, ASSESSMENT_SUMMARY.OGP_YEAR_1, ASSESSMENT_SUMMARY.OGP_YEAR_2, ASSESSMENT_SUMMARY.OVP_YEAR_1, ASSESSMENT_SUMMARY.OVP_YEAR_2 FROM OFFENDER, ASSESSMENT, REP_OFFENDER_HISTORY, PURPOSE_OF_ASSESSMENT, ASSESSMENT_SECTION1, ASSESSMENT_SUMMARY WHERE (ASSESSMENT.ASSESSMENT_ID = ASSESSMENT_SUMMARY.ASSESSMENT_ID) AND (PURPOSE_OF_ASSESSMENT.PURPOSE_OF_ASSESSMENT_CODE (+) = ASSESSMENT.PURPOSE_OF_ASSESSMENT_CODE) AND (ASSESSMENT.ASSESSMENT_ID = ASSESSMENT_SECTION1.ASSESSMENT_ID) AND (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (ASSESSMENT.ASSESSMENT_ID IN (SELECT LAST_VALUE(ASSESSMENT.assessment_id) OVER (PARTITION BY ASSESSMENT.offender_id ORDER BY ASSESSMENT.date_completed rows BETWEEN CURRENT ROW AND UNBOUNDED following) AS last_ass_for_offender FROM ASSESSMENT, OFFENDER, REP_OFFENDER_HISTORY WHERE (OFFENDER.OFFENDER_ID = ASSESSMENT.OFFENDER_ID (+)) AND (OFFENDER.OFFENDER_ID = REP_OFFENDER_HISTORY.OFFENDER_ID (+)) AND (ASSESSMENT.single_date_completed = 'Y' AND completed_assessment <> 'Abandoned' AND NOT OFFENDER.Offender_id IS NULL) AND (COALESCE(ASSESSMENT.COMPLETED_ASSESSMENT, 'Not Specified') = 'True' AND OFFENDER.HISTORIC_OFFENDER_CALC = 'Current' AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1) AND REP_OFFENDER_HISTORY.PHYSICAL_LOCATION = (SELECT LOCATION FROM prompt_ /* = #prompt('Enter Physical Location:','A','Offender History\\Physical Location',Mono,Free,Not_Persistent,,User:0) */))) AND (REP_OFFENDER_HISTORY.LATEST_OWNERSHIP_RANK = 1)) GROUP BY OFFENDER.OFFENDER_ID_DISPLAY, ASSESSMENT.DATE_COMPLETED, REP_OFFENDER_HISTORY.CONTROLLING_OWNER, SUBSTR(ASSESSMENT.CALC_HIGHEST_RISK, 4), REP_OFFENDER_HISTORY.OFFENDER_MANAGER, ASSESSMENT.CALC_PURPOSE_OF_ASSMNT_GROUPS, COALESCE(PURPOSE_OF_ASSESSMENT.DESCRIPTION, 'Not Specified'), ASSESSMENT_SECTION1.S1Q27A_NO_GENERAL_OFFENDING_12, ASSESSMENT_SECTION1.S1Q27B_NO_GENERAL_OFFENDING_24, ASSESSMENT_SUMMARY.OGP_YEAR_1, ASSESSMENT_SUMMARY.OGP_YEAR_2, ASSESSMENT_SUMMARY.OVP_YEAR_1, ASSESSMENT_SUMMARY.OVP_YEAR_2), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, DATE_COMPLETED, COUNT_OF_OFFENDERS, CONTROLLING_OWNER, RISK_LEVEL_, OFFENDER_MANAGER, CALC_PURPOSE_OF_ASSMNT_GROUPS, PURPOSE_OF_ASSESSMENT, S1Q27A_NO_GENERAL_OFFENDING_12, S1Q27B_NO_GENERAL_OFFENDING_24, OGP_YEAR_1, OGP_YEAR_2, OVP_YEAR_1, OVP_YEAR_2, 'TBD' AS V_OGRS3_2YR_BAND FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "location",
          "filterType": "text",
          "reportFieldType": "string",
          "display": "Enter Physical Location:",
          "description": "@prompt('Enter Physical Location:','A','Offender History\\Physical Location',Mono,Free,Not_Persistent,,User:0)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP22.DO264",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "DATE_COMPLETED",
            "type": "date",
            "display": "Date Completed",
            "legacyId": "DP22.DO5e5",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "COUNT_OF_OFFENDERS",
            "type": "double",
            "display": "Count of Offenders",
            "legacyId": "DP22.DOcbd",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "CONTROLLING_OWNER",
            "type": "string",
            "display": "Controlling Owner",
            "legacyId": "DP22.DO114b",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "RISK_LEVEL_",
            "type": "string",
            "display": "Risk Level (10 6)",
            "legacyId": "DP22.DOf2f",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "OFFENDER_MANAGER",
            "type": "string",
            "display": "Offender Manager",
            "legacyId": "DP22.DO114a",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "CALC_PURPOSE_OF_ASSMNT_GROUPS",
            "type": "string",
            "display": "Purpose Of Assessment Groups",
            "legacyId": "DP22.DO1006",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "PURPOSE_OF_ASSESSMENT",
            "type": "string",
            "display": "Purpose Of Assessment",
            "legacyId": "DP22.DOa0d",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "S1Q27A_NO_GENERAL_OFFENDING_12",
            "type": "double",
            "display": "OGRS 3 Score - 1 year (27)",
            "legacyId": "DP22.DO107b",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "S1Q27B_NO_GENERAL_OFFENDING_24",
            "type": "double",
            "display": "OGRS 3 Score - 2 year (27)",
            "legacyId": "DP22.DO107c",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "OGP_YEAR_1",
            "type": "double",
            "display": "OGP 1 Year Score",
            "legacyId": "DP22.DO109e",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "OGP_YEAR_2",
            "type": "double",
            "display": "OGP 2 Year Score",
            "legacyId": "DP22.DO109f",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "OVP_YEAR_1",
            "type": "double",
            "display": "OVP 1 Year Score",
            "legacyId": "DP22.DO10a1",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "OVP_YEAR_2",
            "type": "double",
            "display": "OVP 2 Year Score",
            "legacyId": "DP22.DO10a2",
            "legacySqlClass": "column"
          },
          {
            "index": 14,
            "name": "V_OGRS3_2YR_BAND",
            "type": "string",
            "display": "V_OGRS3_2YR_BAND",
            "legacyId": "???",
            "legacySqlClass": "alias"
          }
        ]
      }
    },
    {
      "id": "3376639/DP25",
      "name": "Demog",
      "description": "MIS - Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, TRIM(CASE WHEN NOT DT_OFFENDER_CONTACT_ADDRESS.TITLE IS NULL THEN DT_OFFENDER_CONTACT_ADDRESS.TITLE || ' ' END || CASE WHEN NOT DT_OFFENDER_CONTACT_ADDRESS.FIRST_NAME IS NULL THEN DT_OFFENDER_CONTACT_ADDRESS.FIRST_NAME || ' ' END || CASE WHEN NOT DT_OFFENDER_CONTACT_ADDRESS.MIDDLE_NAME IS NULL THEN DT_OFFENDER_CONTACT_ADDRESS.MIDDLE_NAME || ' ' END || DT_OFFENDER_CONTACT_ADDRESS.LAST_NAME) AS OTHER_CONTACT_NAME, DT_OFFENDER_CONTACT_ADDRESS.RELATIONSHIP FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, (SELECT ROW_NUMBER() OVER (PARTITION BY dooc.offender_booking_sk, dooc.relationship ORDER BY dooc.active_flag DESC, dooc.address_flag DESC, dooc.mis_load_id DESC) AS row_seq_filter, dooc.*, CASE WHEN dooc.next_of_kin_flag = 'Y' THEN 'NEXTOFKIN' ELSE 'CONTACT' END AS Con_Addr_Type, CASE WHEN dooc.next_of_kin_flag = 'Y' THEN 'Next of Kin' ELSE 'Contact' END AS ConAddrTypeDesc FROM bodimis.dim_offender_other_contacts dooc) DT_OFFENDER_CONTACT_ADDRESS, BODIMIS.DIM_CELL AT_CELL WHERE (AT_CELL.ESTABLISHMENT_SK = AT_ESTABLISHMENT.ESTABLISHMENT_SK) AND (AT_CELL.UNIT_4_SK = AT_OFFENDER_BOOKING.LIVING_UNIT_SK) AND (AT_ESTABLISHMENT.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_OFFENDER_CONTACT_ADDRESS.OFFENDER_BOOKING_SK (+)) AND (DT_OFFENDER_CONTACT_ADDRESS.OFFENDER_BOOKING_SK IS NULL OR DT_OFFENDER_CONTACT_ADDRESS.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND ((AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code','A','Establishment\\Establishment Code',mono,free,Not_Persistent,User:70) */)) AND DT_OFFENDER_CONTACT_ADDRESS.RELATIONSHIP IN ('Offender Supervisor', 'Case Administrator') AND (DT_OFFENDER_CONTACT_ADDRESS.ROW_SEQ_FILTER (+) = 1) AND (DT_OFFENDER_CONTACT_ADDRESS.ACTIVE_FLAG (+) = 'Y') AND (AT_OFFENDER_BOOKING.BOOKING_SEQ = 1))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, OTHER_CONTACT_NAME, RELATIONSHIP FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code','A','Establishment\\Establishment Code',mono,free,Not_Persistent,User:70)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP25.DO76",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "OTHER_CONTACT_NAME",
            "type": "string",
            "display": "Other Contact Name",
            "legacyId": "DP25.DOa1b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "RELATIONSHIP",
            "type": "string",
            "display": "Other Contact Relationship",
            "legacyId": "DP25.DOa1c",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP26",
      "name": "Prisoner Alerts",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_ALERT.ALERT_CODE_NK, AT_ALERT.ALERT_DESCRIPTION, AT_OFFENDER_ALERT.ALERT_STATUS FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ALERT AT_ALERT, BODIMIS.FACT_OFFENDER_ALERT AT_OFFENDER_ALERT, BODIMIS.DIM_CELL AT_CELL WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_OFFENDER_ALERT.OFFENDER_BOOKING_SK (+)) AND (AT_ALERT.ALERT_SK (+) = AT_OFFENDER_ALERT.ALERT_SK) AND (AT_CELL.ESTABLISHMENT_SK = AT_ESTABLISHMENT.ESTABLISHMENT_SK) AND (AT_CELL.UNIT_4_SK = AT_OFFENDER_BOOKING.LIVING_UNIT_SK) AND (AT_ESTABLISHMENT.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND ((AT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code','A','Establishment\\Establishment Code',mono,free,Not_Persistent,User:70) */)) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y') AND (AT_OFFENDER_ALERT.ALERT_STATUS = 'ACTIVE') AND AT_ALERT.ALERT_CODE_NK IN ('PC1', 'PC2', 'PC3', 'PL1', 'PL2', 'PL3', 'P0', 'P1', 'P2', 'P3', 'PVN', 'XNR', 'XGANG', 'RDV', 'OHCO', 'CPC', 'CPRC', 'OPPO', 'SOR', 'RCS', 'SC', 'XCC', 'XSO', 'SR', 'XCH', 'OHA', 'OCYP', 'LFC21', 'LFC25', 'LPQAA', 'LCE'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, ALERT_CODE_NK, ALERT_DESCRIPTION, ALERT_STATUS FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code','A','Establishment\\Establishment Code',mono,free,Not_Persistent,User:70)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP26.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "ALERT_CODE_NK",
            "type": "string",
            "display": "Alert Code",
            "legacyId": "DP26.DO1008e",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "ALERT_DESCRIPTION",
            "type": "string",
            "display": "Alert Description",
            "legacyId": "DP26.DO10090",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "ALERT_STATUS",
            "type": "string",
            "display": "Alert Status",
            "legacyId": "DP26.DO10094",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP24",
      "name": "MIS Load",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP24.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2b",
      "name": "Rehab",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.CODE_NK END AS REHAB_PROVIDER_CODE, CASE WHEN BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK > 0 THEN BODIMIS.DIM_REHAB_PROVIDER.DESCRIPTION END AS REHAB_PROVIDER_DESCRIPTION FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_REHAB_PROVIDER, BODIMIS.FACT_OFFENDER_REHAB WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = BODIMIS.FACT_OFFENDER_REHAB.OFFENDER_BOOKING_SK (+)) AND (BODIMIS.FACT_OFFENDER_REHAB.REHAB_PROVIDER_SK = BODIMIS.DIM_REHAB_PROVIDER.REHAB_PROVIDER_SK (+)) AND ((AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code','A','Associated Establishment\\Associated Establishment Code',mono,free,Not_Persistent,User:69) */)) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y') AND (BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_ACTIVE_FLAG = 'Y' OR BODIMIS.FACT_OFFENDER_REHAB.PROVIDER_ACTIVE_FLAG IS NULL) AND (BODIMIS.FACT_OFFENDER_REHAB.DECISION_ACTIVE_FLAG = 'Y' OR BODIMIS.FACT_OFFENDER_REHAB.DECISION_ACTIVE_FLAG IS NULL))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, REHAB_PROVIDER_CODE, REHAB_PROVIDER_DESCRIPTION FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code','A','Associated Establishment\\Associated Establishment Code',mono,free,Not_Persistent,User:69)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP2b.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "REHAB_PROVIDER_CODE",
            "type": "string",
            "display": "Rehab Provider Code",
            "legacyId": "DP2b.DO10b37",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "REHAB_PROVIDER_DESCRIPTION",
            "type": "string",
            "display": "Rehab Provider Description",
            "legacyId": "DP2b.DO10b38",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2c",
      "name": "Imm and Ext",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_FACT_COURT_EVENT.OUTCOME FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.FACT_COURT_EVENT AT_FACT_COURT_EVENT, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_COURT_CASE AT_COURT_CASE WHERE (AT_COURT_CASE.COURT_CASE_SK = AT_FACT_COURT_EVENT.COURT_CASE_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_COURT_CASE.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_COURT_CASE.OFFENDER_BOOKING_SK IS NULL OR AT_COURT_CASE.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_FACT_COURT_EVENT.OUTCOME IN ('5500', '4022') AND (AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK = (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code','A','Associated Establishment\\Associated Establishment Code',mono,free,Not_Persistent,User:69) */)) AND (AT_OFFENDER_BOOKING.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y'))), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, OUTCOME FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code','A','Associated Establishment\\Associated Establishment Code',mono,free,Not_Persistent,User:69)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP2c.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "OUTCOME",
            "type": "string",
            "display": "Court Event Outcome Code",
            "legacyId": "DP2c.DO25a",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "210866.RS",
      "name": "Caseloads In Release Date Order",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:V_OTHER_CONTACT_NAME_MGE_CA",
            "display": "Case Administrator",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Other Contact Name] Where ([Other Contact Relationship]=\"Case Administrator\")"
          },
          {
            "name": "$ref:V_OTHER_CONTACT_NAME_MGE_OS",
            "display": "Offender Supervisor",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Other Contact Name] Where ([Other Contact Relationship]=\"Offender Supervisor\")"
          },
          {
            "name": "$ref:DP4_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10080",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10085",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10082",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO10A7C",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_NATIONALITY",
            "display": "Nationality",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Nationality Description]"
          },
          {
            "name": "$ref:V_IMMIGRATION_DISPLAY",
            "display": "Outcome of Immigration?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Immigration] = \"5500\"; \"Y\";\"-\")"
          },
          {
            "name": "$ref:V_EXTRADITION_DISPLAY",
            "display": "Outcome of Extradition?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Extradition] = \"4022\"; \"Y\";\"-\")"
          },
          {
            "name": "$ref:V_ETHNIC_DES",
            "display": "Ethnic Group",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Ethnic Description]"
          },
          {
            "name": "$ref:DP4_DO100DB",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100E4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_MAIN_OFFENCE",
            "display": "Main Offence",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Offence Name]Where ([Main Offence Flag]=\"Y\")"
          },
          {
            "name": "$ref:DP4_DO1EF",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO100DE",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO32D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_ADMISSION_DATE_MGE",
            "display": "Admission Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Admission Date]"
          },
          {
            "name": "$ref:DP4_DO61B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO70",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO97",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO87",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO88",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP4_DO2E6",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_DAYS_LEFT_TO_SERVE",
            "display": "Days to Serve",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=DaysBetween([Current Sentence Start Date];[CRD (Conditional Release Date)])"
          },
          {
            "name": "$ref:V_RISK_LEVEL",
            "display": "Risk",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If [v_risk_level_mge] = \"Not calculated\" Then \"Low\" Else [v_risk_level_mge]"
          },
          {
            "name": "$ref:V_MAX_CONCAT_ALERT_CODE",
            "display": "MAPPA Alerts",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[v_concat_alert] Where ([v_Alert_code]= [v_Max_Alert_Code]) In ([NOMIS Number])"
          },
          {
            "name": "$ref:V_VISOR_ALERT_YES",
            "display": "ViSOR Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Visor Alert] = \"PVN\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_GANG_MEMBER_ALERT_YES",
            "display": "Gang Member Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Gang Member Alert] = \"XGANG\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_DV_PERP_ALERT_YES",
            "display": "DV Perpetrator Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_DV Perp Alert] = \"RDV\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_NFR_ALERT_YES",
            "display": "NFR Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_NFR Alert] = \"XNR\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_HARRASSMENT_COURT_ORDER_AL36",
            "display": "Harrassment Offences / Court Order?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Harrassment/Court Order Alert 1 OHCO] = \"OHCO\";\"Y\";\n(If([v_Harrassment/Court Order Alert 2 XCH] = \"XCH\";\"Y\";\n(If([v_Harrassment/Court Order Alert 3 OHA] = \"OHA\";\"Y\";\"-\")))))"
          },
          {
            "name": "$ref:V_RISK_TO_CHILDREN_ALERTS_YES",
            "display": "Risk to Children Alerts?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Risk to Children Alert 1 CPC] = \"CPC\";\"Y\";\n(If([v_Risk to Children Alert 2 XCC] = \"XCC\";\"Y\";\n(If([v_Risk to Children Alert 3 CPRC] = \"CPRC\";\"Y\";(If([v_Risk to Children Alert 4 RCS] = \"RCS\";\"Y\";(If([v_Risk to Children Alert 5 SC] = \"SC\";\"Y\";\"-\")))))))))"
          },
          {
            "name": "$ref:V_CHILD_PROTECTION_ALERT_YES",
            "display": "Child Protection Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Child_Protection_Alert] = \"RCP\";\"Y\";\"-\")\n"
          },
          {
            "name": "$ref:V_SEX_OFFENDER_REGISTER_ALER33",
            "display": "Sex Offender Register Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Sex Offender Register Alert 1 SOR] = \"SOR\";\"Y\";\n(If([v_Sex Offender Register Alert 2 SR] = \"SR\";\"Y\";\"-\")))"
          },
          {
            "name": "$ref:V_PPO_ALERT_YES",
            "display": "PPO Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_PPO Alert] = \"OPPO\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_LOOKED_AFTER_CHILD_ALERT_YES",
            "display": "Looked After Child Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Looked After Child Alert] = \"OCYP\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_FORMER_RELEVANT_CHILD_ALER33",
            "display": "Former Relevant Child (U21) Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Former Relevant Child (U21) Alert] = \"LFC21\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_FORMER_RELEVANT_CHILD_ALER33",
            "display": "Former Relevant Child (U25) Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Former Relevant Child (U25) Alert] = \"LFC25\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_QUALIFIES_FOR_ASSISTANCE_A43",
            "display": "Qualifies For Assistance & Advice Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Qualifies For Assistance & Advice Alert] = \"LPQAA\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_CARE_EXPERIENCED_ALERT_YES",
            "display": "Care Experienced Alert?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_Care Experienced Alert] = \"LCE\";\"Y\";\"-\")"
          },
          {
            "name": "$ref:V_SEC_CAT_CURRENT",
            "display": "Security Category",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Current Security Category]"
          },
          {
            "name": "$ref:V_SEC_CAT_REVIEW_DT",
            "display": "Security Category Review Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Security Category - Current Review Date]"
          },
          {
            "name": "$ref:V_OGRS3_2YR",
            "display": "OGRS 3 2yr Score",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[OGRS 3 Score - 2 year (27)]"
          },
          {
            "name": "$ref:V_OGP_2YR",
            "display": "OGP 2yr Score",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[OGP 2 Year Score]"
          },
          {
            "name": "$ref:V_OVP_2YR",
            "display": "OVP 2yr Score",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[OVP 2 Year Score]"
          },
          {
            "name": "$ref:V_NPS_OR_HMPS_MGE",
            "display": "OASys Controlling Owner",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[v Controlling Owner NPS, CRC or HMPS]"
          },
          {
            "name": "$ref:V_OASYS_OFF_MANAGER_MGE",
            "display": "Offender Manager",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Offender Manager]"
          },
          {
            "name": "$ref:V_LATEST_ASSESSMENT_AFTER_SE34",
            "display": "Latest\nAssessment\n(Post\nSentence)",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_date_completed_mge]>=[Current Sentence Start Date];[v_date_completed_mge])"
          },
          {
            "name": "$ref:V_ASSESSMENT_TYPE_DISPLAY",
            "display": "Assessment\nType",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(Not(IsNull([v_latest_assessment_after_sentence]));[v_Purpose of Assessment Group])"
          },
          {
            "name": "$ref:V_PURPOSE_OF_ASSESSMENT",
            "display": "Purpose of\nAssessment",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Purpose Of Assessment]"
          },
          {
            "name": "$ref:V_OASYS_POST_SENTENCE",
            "display": "OASys\ncompleted\nsince \nSentence Date?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If(IsNull([v_latest_assessment_after_sentence]);\"N\";\"Y\")"
          },
          {
            "name": "$ref:V_OASYS_POST_ADMISSION",
            "display": "OASys\ncompleted\nsince\nAdmission Date?",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([v_latest_assessment_after_sentence]>=[v_Admission Date mge];\"Y\";\"N\")"
          },
          {
            "name": "$ref:V_REHAB_PROVIDER",
            "display": "Rehab Provider",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=([Rehab Provider Code] + \" \" + [Rehab Provider Description])"
          }
        ]
      }
    },
    {
      "id": "211126.RS",
      "name": "P-NOMIS Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "filter": {
        "name": "prefilter_",
        "query": "prefilter_ AS (SELECT * FROM dataset_ WHERE MAIN_LEGAL_STATUS_CODE IN ('IPP','LIFE'))"
      },
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:DP4_DO100E4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_COUNT_NOMIS_NO",
            "display": "Total",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=Count([Prisoners].[NOMS Number]; Distinct)"
          }
        ]
      }
    },
    {
      "id": "213034.RS",
      "name": "OASys Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375896/DP22",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:V_OGRS3_2YR_BAND",
            "display": "OGRS3 2yr Band",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([OGRS 3 Score - 2 year (27)] < 50;\"Low\";\n(If([OGRS 3 Score - 2 year (27)] Between(50;74);\"Medium\";\n(If([OGRS 3 Score - 2 year (27)] Between(75;89);\"High\";\n(If([OGRS 3 Score - 2 year (27)] >89;\"Very High\";\n\"Not Calculated\")))))))"
          },
          {
            "name": "$ref:COUNT_OF_OFFENDERS",
            "display": "Count of Offenders",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP22.DOcbd"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 10897.\n  ENDER_SENTENCE WHERE ( BODIMIS.FACT_OFFENDER_SENTENCE.SENTENCE_CURRENT_FLAG='Y' ) ) DT_CURREFFSENLEN\u001b[4m,\u001b[0m -- (  -- --SELECT distinct  -- BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG --FROM   --BODIMI]",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OTHER_CONTACT_NAME_MGE_CA :: ReferenceError: error is not defined",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OTHER_CONTACT_NAME_MGE_OS :: ReferenceError: error is not defined",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_MAX_CONCAT_ALERT_CODE :: Error: =[v_concat_alert] Where ([v_Alert_code]= [v_Max_Alert_Code]) In ([NOMIS Number]) ==> Error: Expected end of input but \"I\" found.\n at undefined:1:62",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_QUALIFIES_FOR_ASSISTANCE_A43 :: Error: =If([v_Qualifies For Assistance & Advice Alert] = \"LPQAA\";\"Y\";\"-\") ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OASYS_OFF_MANAGER_MGE :: ReferenceError: error is not defined",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_PURPOSE_OF_ASSESSMENT :: ReferenceError: error is not defined",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_REHAB_PROVIDER :: ReferenceError: error is not defined",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::resolveCTEs parse error for : $ref:V_OGRS3_2YR_BAND :: Error: =If([OGRS 3 Score - 2 year (27)] < 50;\"Low\";\n(If([OGRS 3 Score - 2 year (27)] Between(50;74);\"Medium\";\n(If([OGRS 3 Score - 2 year (27)] Between(75;89);\"High\";\n(If([OGRS 3 Score - 2 year (27)] >89;\"Very High\";\n\"Not Calculated\"))))))) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::injectCalculations parse error for : $ref:V_OGRS3_2YR_BAND :: Error: =If([OGRS 3 Score - 2 year (27)] < 50;\"Low\";\n(If([OGRS 3 Score - 2 year (27)] Between(50;74);\"Medium\";\n(If([OGRS 3 Score - 2 year (27)] Between(75;89);\"High\";\n(If([OGRS 3 Score - 2 year (27)] >89;\"Very High\";\n\"Not Calculated\"))))))) ==> Error: Expected expression but \"=\" found.\n at undefined:1:1",
      "entityId": "kloSppIAC9Y4VXoA4v8AFE.rcVQ",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field V_OTHER_CONTACT_NAME_MGE_CA does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OTHER_CONTACT_NAME_MGE_OS does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1007B does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10080 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10085 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10082 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO10A7C does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_NATIONALITY does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_IMMIGRATION_DISPLAY does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_EXTRADITION_DISPLAY does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ETHNIC_DES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100DB does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100E4 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MAIN_OFFENCE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO1EF does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100DE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO32D does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ADMISSION_DATE_MGE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO61B does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO70 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO97 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO87 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO88 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO2E6 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_DAYS_LEFT_TO_SERVE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_RISK_LEVEL does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_MAX_CONCAT_ALERT_CODE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_VISOR_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_GANG_MEMBER_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_DV_PERP_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_NFR_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_HARRASSMENT_COURT_ORDER_AL36 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_RISK_TO_CHILDREN_ALERTS_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_CHILD_PROTECTION_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_SEX_OFFENDER_REGISTER_ALER33 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_PPO_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_LOOKED_AFTER_CHILD_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_FORMER_RELEVANT_CHILD_ALER33 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_FORMER_RELEVANT_CHILD_ALER33 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_QUALIFIES_FOR_ASSISTANCE_A43 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_CARE_EXPERIENCED_ALERT_YES does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_SEC_CAT_CURRENT does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_SEC_CAT_REVIEW_DT does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OGRS3_2YR does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OGP_2YR does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OVP_2YR does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_NPS_OR_HMPS_MGE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OASYS_OFF_MANAGER_MGE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_LATEST_ASSESSMENT_AFTER_SE34 does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_ASSESSMENT_TYPE_DISPLAY does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_PURPOSE_OF_ASSESSMENT does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OASYS_POST_SENTENCE does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_OASYS_POST_ADMISSION does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_REHAB_PROVIDER does not have corresponding dataset schema field",
      "entityId": "210866.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP4_DO100E4 does not have corresponding dataset schema field",
      "entityId": "211126.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_COUNT_NOMIS_NO does not have corresponding dataset schema field",
      "entityId": "211126.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375368/DP4",
      "entityType": "dataset"
    }
  ]
}