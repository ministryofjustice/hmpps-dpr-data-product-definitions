{
  "id": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
  "name": "MIS NSR1062 Hold Balances for prisoners due for release",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "FIN0053 v00.00.00"
    ]
  },
  "description": "FIN0053 v00.00.00                        This report displays prisoners with Hold Balances for a specified Caseload Id and Account Date.",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3376115/DP0",
      "name": "Hold Balances A-K",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)), AT_HIST_BALANCE_DATES.DAY_DATE FROM BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) Or 'All' in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) ) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date((SELECT UNKNOWN_PARAMETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )) ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_HIST_BALANCE_DATES.DAY_DATE HAVING sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)) > 0), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "unknown_parameter",
          "filterType": "text",
          "reportFieldType": "string",
          "display": "Enter Account Date (dd/mm/yyyy):",
          "description": "@Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP1",
      "name": "MIS End Load",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP1.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2",
      "name": "Release date",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, FACT_CURR_KEY_DATES_SENT.CURR_RELEASE_DATE, CURRENT_TIMESTAMP AS TODAY, AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK FROM BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, FACT_CURR_KEY_DATES_SENT, (SELECT DISTINCT BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK = dss.sentence_status_sk) AND dss.sentence_status = 'Active' AND (BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK) AND (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK = BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK) AND (BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK) AND BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG = 'Y') DT_LIFEFLAG WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_LIFEFLAG.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /* = #Variable('BOUSER') */)) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND ((AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */) OR 'All' IN (SELECT ESTABLISHMENT_CODE FROM prompt_ /* = #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */)) AND FACT_CURR_KEY_DATES_SENT.CURR_RELEASE_DATE >= CURRENT_TIMESTAMP AND CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Sentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'Unsentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'Unsentenced' ELSE 'Sentenced' END = 'Sentenced')), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, CURR_RELEASE_DATE, TODAY, ESTABLISHMENT_CODE_NK FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP2.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "CURR_RELEASE_DATE",
            "type": "date",
            "display": "Current Release Date",
            "legacyId": "DP2.DO2e6",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "TODAY",
            "type": "date",
            "display": "Today",
            "legacyId": "DP2.DO1092a",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "ESTABLISHMENT_CODE_NK",
            "type": "string",
            "display": "Associated Establishment Code",
            "legacyId": "DP2.DO107b2",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376115/DP3",
      "name": "Transactions",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "DP0_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)), AT_HIST_BALANCE_DATES.DAY_DATE FROM BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) Or 'All' in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) ) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date((SELECT UNKNOWN_PARAMETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )) ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_HIST_BALANCE_DATES.DAY_DATE HAVING sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)) > 0), dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE, AT_DIM_TXN_POSTING_TYPE.TRANSACTION_POSTING_TYPE_CODE FROM BODIMIS.FACT_OFFENDER_TRANSACTION AT_FACT_OFFENDER_TRANSACTION, BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_TRANSACTION_TYPE AT_DIM_TRANSACTION_TYPE, BODIMIS.DIM_TXN_POSTING_TYPE AT_DIM_TXN_POSTING_TYPE, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE_SK=AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_TYPE_SK ) AND ( AT_FACT_OFFENDER_TRANSACTION.TRANSACTION_POSTING_TYPE_SK=AT_DIM_TXN_POSTING_TYPE.TRANSACTION_POSTING_TYPE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFFENDER_TRANSACTION.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY IN (SELECT * FROM DP0_ ) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date((SELECT UNKNOWN_PARAMETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )) ) AND AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK IN ( (SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),'TRN',(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_),(SELECT establishment_code from prompt_) ) AND AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE IN ( 'HOA','HOR','WHF','WHR' ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_DIM_TRANSACTION_TYPE.TRANSACTION_TYPE, AT_DIM_TXN_POSTING_TYPE.TRANSACTION_POSTING_TYPE_CODE HAVING sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)) > 0), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "unknown_parameter",
          "filterType": "text",
          "reportFieldType": "string",
          "display": "Enter Account Date (dd/mm/yyyy):",
          "description": "@Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent)",
          "mandatory": "true"
        },
        {
          "index": 1,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376115/DP4",
      "name": "Hold Balances (1)",
      "description": "MIS - Finance",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)), AT_HIST_BALANCE_DATES.DAY_DATE FROM BODIMIS.FACT_OFF_ACC_HIST_BALANCE AT_FACT_OFF_ACC_HIST_BALANCE, BODIMIS.DIM_ESTABLISHMENT AT_CASELOADS_OFF_HIST_BAL, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_ACCOUNT_CODE AT_DIM_ACCOUNT_CODE_ACCOUNTS, BODIMIS.DIM_DATE AT_HIST_BALANCE_DATES WHERE ( AT_HIST_BALANCE_DATES.DATE_SK=AT_FACT_OFF_ACC_HIST_BALANCE.BALANCE_DATE_SK ) AND ( AT_FACT_OFF_ACC_HIST_BALANCE.ACCOUNT_CODE_SK=AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK ) AND ( AT_OFFENDER_BOOKING.ALIAS_OFFENDER_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ALIAS_OFFENDER_SK and AT_OFFENDER_BOOKING.BOOKING_SEQ=1 ) AND ( AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_SK=AT_FACT_OFF_ACC_HIST_BALANCE.ESTABLISHMENT_SK ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER((SELECT username FROM context_ /*= #Variable('BOUSER') */ )) AND CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 ) ) AND ( AT_OFFENDER_BOOKING.ESTABLISHMENT_SK=AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK ) AND ( AT_ESTABLISHMENT_TAP.ACTIVE_FLAG='Y' ) AND ( ( AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) Or 'All' in (SELECT ESTABLISHMENT_CODE FROM prompt_ /*= #Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69) */ ) ) AND ( AT_HIST_BALANCE_DATES.DAY_DATE = to_date((SELECT UNKNOWN_PARAMETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )) ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.ACTIVE_STATUS, AT_OFFENDER_BOOKING.IN_OUT, AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK, AT_HIST_BALANCE_DATES.DAY_DATE HAVING sum(coalesce(case when AT_DIM_ACCOUNT_CODE_ACCOUNTS.ACCOUNT_CODE_SK is not null then AT_FACT_OFF_ACC_HIST_BALANCE.HOLD_BALANCE end, 0)) > 0), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "@Prompt('Establishment Code (All for all)','A','Associated Establishment\\Associated Establishment Code',multi,free,Not_Persistent,User:69)",
          "mandatory": "true",
          "referenceType": "establishment"
        },
        {
          "index": 1,
          "name": "unknown_parameter",
          "filterType": "text",
          "reportFieldType": "string",
          "display": "Enter Account Date (dd/mm/yyyy):",
          "description": "@Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent)",
          "mandatory": "true"
        }
      ],
      "schema": {
        "field": []
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "201709.RS",
      "name": "Hold Balance",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP0",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:V_OFFENDER_EST",
            "display": "Est. Code",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Associated Establishment Code]"
          },
          {
            "name": "$ref:DP0_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO10080",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO104D4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO104D5",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO6A",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO3D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO33",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:V_RELEASE_DATE",
            "display": "Release Date",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=[Current Release Date]"
          }
        ]
      }
    },
    {
      "id": "202188.RS",
      "name": "Report 2",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3376115/DP0",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:DP0_DO33",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO3D",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO104D5",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO104D4",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO10076",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO10080",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO1007B",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          },
          {
            "name": "$ref:DP0_DO6A",
            "display": "",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": ""
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2198.\n  ETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )\u001b[4m)\u001b[0m ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_B]",
      "entityId": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2198.\n  ETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )\u001b[4m)\u001b[0m ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_B]",
      "entityId": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 1974.\n  ETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )\u001b[4m)\u001b[0m ) AND AT_CASELOADS_OFF_HIST_BAL.ESTABLISHMENT_CODE_NK IN ( (SELECT establishment_code from prompt_)]",
      "entityId": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::convertCTEReferenceToSqlAndColumns failed to generate valid sql for undefined",
      "entityId": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Required keyword: 'format' missing for <class 'sqlglot.expressions.StrToDate'>. Line 1, Col: 2198.\n  ETER FROM prompt_ /*= #Prompt('Enter Account Date (dd/mm/yyyy):','D',,mono,free,Not_Persistent) */ )\u001b[4m)\u001b[0m ) ) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_B]",
      "entityId": "FhD2q1.CKwEAY6AAAHDbal8KACJIAFe4",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP0",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP3",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields",
      "entityId": "3376115/DP4",
      "entityType": "dataset"
    },
    {
      "type": "schema",
      "error": "Report field V_OFFENDER_EST does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO10076 does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO10080 does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO1007B does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO104D4 does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO104D5 does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO6A does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO3D does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO33 does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field V_RELEASE_DATE does not have corresponding dataset schema field",
      "entityId": "201709.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO33 does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO3D does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO104D5 does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO104D4 does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO10076 does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO10080 does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO1007B does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "schema",
      "error": "Report field DP0_DO6A does not have corresponding dataset schema field",
      "entityId": "202188.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3376115/DP0",
      "entityType": "dataset"
    }
  ]
}