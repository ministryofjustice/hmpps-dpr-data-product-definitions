{
  "id": "ok4m6EEACb_rcygAOpCD8K7BiJY",
  "name": "MIS Settled Accommodation Report",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "MOV0025 v00.00.05 LSRIT32"
    ]
  },
  "description": "Shows the prisoners who have been finally discharged and whether they have settled accommodation upon their final release from custody. There is an equivalent version of this report avaialble from Operational Reporting, MOV0022.<br/>This report is intended for saving to Excel and is not formatted for printing.<br/><br/><br/> <br/><br/>MOV0025 - v00.00.05 Last Modified: 26/07/12",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3376639/DP4",
      "name": "Settled Accommodation",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT  AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK , AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.MIDDLE_NAME_1, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE='MERGE' Then 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL Then 'Code Missing' when AT_DIM_ETHNICITY_CODES.CODE='W8' then 'White: Gypsy or Irish Traveller' when AT_DIM_ETHNICITY_CODES.CODE='O1' then 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION end, NVL(AT_OFFENDER_BOOKING.RELIGION_CODE,'Not Specified'), CASE WHEN AT_DOB.DAY_DATE <> '31/12/9000' THEN AT_DOB.DAY_DATE END, AT_DIM_DATE_EXT_MOV.DAY_DATE, SUBSTR(AT_FACT_MOV_EXT.MOVEMENT_TIME,11,6), AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.MOVEMENT_TIME, AT_OFFENDER_BOOKING.GENDER_CODE, DT_OFFENDER_ADDRESSES.ADDRESS_USAGE, DT_OFFENDER_ADDRESSES.USAGES_DTTM, DT_OFFENDER_ADDRESSES.FLAT, DT_OFFENDER_ADDRESSES.PREMISE, DT_OFFENDER_ADDRESSES.STREET, DT_OFFENDER_ADDRESSES.LOCALITY, DT_OFFENDER_ADDRESSES.CITY_DESC, DT_OFFENDER_ADDRESSES.COUNTY_DESC, DT_OFFENDER_ADDRESSES.POSTAL_CODE, DT_OFFENDER_ADDRESSES.ADDRESS_ACTIVE_FLAG, Case when DT_OFFENDER_ADDRESSES.ADDRESS_USAGE in ('RELEASE','DBH','DNF','DPH','DSH','DST','DUT','DAP','DBA','DOH') then 'Y' else 'N' end , DT_OFFENDER_ADDRESSES.ROW_SEQ_FILTER, DT_OFFENDER_ADDRESSES.ADDR_USAGE_DESCRIPTION, DT_OFFENDER_ADDRESSES.USAGE_ACTIVE_FLAG FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT, ( select ROW_NUMBER() OVER (PARTITION BY ss.OWNER_ID ORDER BY PRIMARY_FLAG desc, ss.address_active_flag desc, ss.USAGE_ACTIVE_FLAG desc, ss.usages_dttm DESC nulls last) row_seq_filter, ss.* from ( select * from ( select AT_DIM_ADDRESSES.OWNER_ID, AT_DIM_ADDRESS_USAGES.ADDRESS_ID_NK, AT_DIM_ADDRESS_USAGES.ADDRESS_USAGE, AT_DIM_ADDRESS_USAGES.ADDR_USAGE_DESCRIPTION, AT_DIM_ADDRESS_USAGES.ACTIVE_FLAG as USAGE_ACTIVE_FLAG, AT_DIM_ADDRESSES.flat, AT_DIM_ADDRESSES.premise, AT_DIM_ADDRESSES.Street, AT_DIM_ADDRESSES.locality, AT_DIM_ADDRESSES.city_code, AT_DIM_ADDRESSES.city_desc, AT_DIM_ADDRESSES.county_code, AT_DIM_ADDRESSES.county_desc, AT_DIM_ADDRESSES.postal_code, AT_DIM_ADDRESSES.COUNTRY_CODE, AT_DIM_ADDRESSES.country_desc, AT_DIM_ADDRESSES.HOME_TEL_NO, AT_DIM_ADDRESSES.HOME_EXT_NO, AT_DIM_ADDRESSES.NO_FIXED_ADDRESS_FLAG, AT_DIM_ADDRESSES.establishment_sk, AT_DIM_ADDRESSES.PRIMARY_FLAG, AT_DIM_ADDRESSES.active_flag as address_active_flag, AT_DIM_ADDRESS_USAGES.CREATE_DATETIME, AT_DIM_ADDRESS_USAGES.MODIFY_DATETIME, COALESCE(AT_DIM_ADDRESS_USAGES.modify_datetime, AT_DIM_ADDRESS_USAGES.create_datetime) as usages_dttm from BODIMIS.DIM_ADDRESS_USAGES AT_DIM_ADDRESS_USAGES inner join BODIMIS.dim_addresses AT_DIM_ADDRESSES on AT_DIM_ADDRESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) Addr_usages --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODISTAGING.REF_OFFENDERS AT_BODISTAG_REF_OFFENDERS WHERE ( AT_OFFENDER_BOOKING.BIRTH_DATE_SK=AT_DOB.DATE_SK ) AND ( AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK(+)=AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK ) AND ( AT_DIM_DATE_EXT_MOV.DATE_SK=AT_FACT_MOV_EXT.DATE_SK ) AND ( AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK(+)=AT_FACT_MOV_EXT.FROM_LOCATION_SK ) AND ( AT_DIM_ETHNICITY_CODES.CODE(+)=AT_OFFENDER_BOOKING.ETHNICITY_CODE ) AND ( AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT  CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID=CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('sso_mis_rqo65k') AND (CSL.ENDYEAR >= to_char(sysdate,'YYYY')-6 OR CSL.ENDYEAR = '2999' ) ) ) AND ( AT_OFFENDER_BOOKING.OFFENDER_ID=AT_BODISTAG_REF_OFFENDERS.OFFENDER_ID(+) ) AND ( AT_BODISTAG_REF_OFFENDERS.ROOT_OFFENDER_ID=DT_OFFENDER_ADDRESSES.OWNER_ID(+) ) AND ( ( AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK in ('All') Or 'All' in ('All') ) AND AT_FACT_MOV_EXT.REASON_CODE IN ( 'NP','RW','CR','D2','D3','DA','HE','HR','HU','SC','AR','AU','D1','D6','HD','PX','D5','D4','IF','HC','PD','CE' ) AND AT_DIM_DATE_EXT_MOV.DAY_DATE BETWEEN '01-12-2012 00:00:00' AND '31-12-2012 00:00:00' AND DT_OFFENDER_ADDRESSES.ADDRESS_ACTIVE_FLAG = 'Y' AND DT_OFFENDER_ADDRESSES.USAGE_ACTIVE_FLAG = 'Y' AND Case when DT_OFFENDER_ADDRESSES.ADDRESS_USAGE in ('RELEASE','DBH','DNF','DPH','DSH','DST','DUT','DAP','DBA','DOH') then 'Y' else 'N' end = 'Y' )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP6",
      "name": "MIS Load",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP6.DO4dd",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3376639/DP9",
      "name": "Releases",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK, AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.INITIALS, AT_OFFENDER_BOOKING.FIRST_NAME, AT_OFFENDER_BOOKING.MIDDLE_NAME_1, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'White: Gypsy or Irish Traveller' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION END AS ETHNIC_DESCRIPTION, COALESCE(AT_OFFENDER_BOOKING.RELIGION_CODE, 'Not Specified') AS RELIGION_CODE, CASE WHEN AT_DOB.DAY_DATE <> '31/12/9000' THEN AT_DOB.DAY_DATE END AS DATE_OF_BIRTH, AT_DIM_DATE_EXT_MOV.DAY_DATE, SUBSTR(AT_FACT_MOV_EXT.MOVEMENT_TIME, 11, 6) AS MOVEMENT_TIME, AT_FACT_MOV_EXT.REASON_CODE, AT_FACT_MOV_EXT.MOVEMENT_TIME, AT_OFFENDER_BOOKING.GENDER_CODE FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_EXT_MOV_FROM, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_DATE AT_DIM_DATE_EXT_MOV, BODIMIS.FACT_MOVEMENT_EXTERNAL AT_FACT_MOV_EXT WHERE (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_FACT_MOV_EXT.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_DIM_DATE_EXT_MOV.DATE_SK = AT_FACT_MOV_EXT.DATE_SK) AND (AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_SK (+) = AT_FACT_MOV_EXT.FROM_LOCATION_SK) AND (AT_DIM_ETHNICITY_CODES.CODE (+) = AT_OFFENDER_BOOKING.ETHNICITY_CODE) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = UPPER('sso_mis_rqo65k') AND (CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6 OR CSL.ENDYEAR = '2999'))) AND ((AT_ESTABLISHMENT_EXT_MOV_FROM.ESTABLISHMENT_CODE_NK IN ('All') OR 'All' IN ('All')) AND AT_FACT_MOV_EXT.REASON_CODE IN ('NP', 'RW', 'CR', 'D2', 'D3', 'DA', 'HE', 'HR', 'HU', 'SC', 'AR', 'AU', 'D1', 'D6', 'HD', 'PX', 'D5', 'D4', 'IF', 'HC', 'PD', 'CE') AND AT_DIM_DATE_EXT_MOV.DAY_DATE BETWEEN TO_DATE('01-12-2012 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND TO_DATE('31-12-2012 00:00:00', 'DD-MM-YYYY HH24:MI:SS'))), dataset_ AS (SELECT ESTABLISHMENT_CODE_NK, OFFENDER_ID_DISPLAY, SURNAME, INITIALS, FIRST_NAME, MIDDLE_NAME_1, ETHNIC_DESCRIPTION, RELIGION_CODE, DATE_OF_BIRTH, DAY_DATE, MOVEMENT_TIME, REASON_CODE, MOVEMENT_TIME, GENDER_CODE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "ESTABLISHMENT_CODE_NK",
            "type": "string",
            "display": "Movement Location From Code (External)",
            "legacyId": "DP9.DO3ff",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP9.DO76",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP9.DO7b",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "INITIALS",
            "type": "string",
            "display": "Offender Initials",
            "legacyId": "DP9.DO12d",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "FIRST_NAME",
            "type": "string",
            "display": "Offender Given Name 1",
            "legacyId": "DP9.DO80",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "MIDDLE_NAME_1",
            "type": "string",
            "display": "Offender Given Name 2",
            "legacyId": "DP9.DO81",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "ETHNIC_DESCRIPTION",
            "type": "string",
            "display": "Ethnic Description",
            "legacyId": "DP9.DO9d",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "RELIGION_CODE",
            "type": "string",
            "display": "Religion Code",
            "legacyId": "DP9.DOb2",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "DATE_OF_BIRTH",
            "type": "date",
            "display": "Date of Birth",
            "legacyId": "DP9.DO85",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "DAY_DATE",
            "type": "date",
            "display": "Movement Date",
            "legacyId": "DP9.DO781",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "MOVEMENT_TIME",
            "type": "string",
            "display": "Movement Time",
            "legacyId": "DP9.DO782",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "REASON_CODE",
            "type": "string",
            "display": "Movement Reason Code (External)",
            "legacyId": "DP9.DO3fc",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "MOVEMENT_TIME",
            "type": "date",
            "display": "Movement Date and Time (External)",
            "legacyId": "DP9.DO3eb",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "GENDER_CODE",
            "type": "string",
            "display": "Gender Code",
            "legacyId": "DP9.DOa8",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "126988.RS",
      "name": "Settled Accommodation",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "summary",
        "field": []
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expecting ). Line 1, Col: 3080.\n  ESS_USAGES.address_id_nk = AT_DIM_ADDRESSES.address_id_nk and AT_DIM_ADDRESSES.owner_class='OFF'  ) \u001b[4mAddr_usages\u001b[0m --where Addr_usages.usages_dttm is not null ) ss ) DT_OFFENDER_ADDRESSES, BODISTAGING.REF_OFFENDERS]",
      "entityId": "ok4m6EEACb_rcygAOpCD8K7BiJY",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "instance.report[0] requires property \"dataset\"",
      "entityId": "ok4m6EEACb_rcygAOpCD8K7BiJY",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Report Variant 126988.RS does not have corresponding dataset undefined",
      "entityId": "126988.RS",
      "entityType": "variant"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3376639/DP4",
      "entityType": "dataset"
    }
  ]
}