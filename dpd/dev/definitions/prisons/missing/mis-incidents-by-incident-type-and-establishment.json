{
  "id": "okR1aKsACg4FOiYALhOD8K7B_Qc",
  "name": "MIS Incidents by Incident Type and Establishment",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "INC0007 v00.00.06 LSRT013"
    ]
  },
  "description": "Outputs a list of all reportable incidents which have occurred within establishment(s) by type of incident and provides a grand total of the number of incidents.<br/>INC0007 v00.00.06 Last Modified: 10/11/09",
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375377/DP2",
      "name": "Incident Count",
      "description": "MIS Incidents",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, INITCAP(AT_INCIDENT_TYPE.INCIDENT_TYPE_DESC) AS INCIDENT_TYPE, COUNT(DISTINCT (AT_INCIDENT.INCIDENT_CASE_ID)) AS NUMBER_OF_INCIDENTS FROM BODIMIS.FACT_INCIDENT AT_INCIDENT, BODIMIS.DIM_ESTABLISHMENT AT_INCIDENT_ESTABLISHMENT, BODIMIS.DIM_INCIDENT_STATUS AT_INCIDENT_STATUS, BODIMIS.DIM_DATE AT_INCIDENT_DATE, BODIMIS.DIM_INCIDENT_TYPE AT_INCIDENT_TYPE WHERE (AT_INCIDENT.INCIDENT_STATUS_SK = AT_INCIDENT_STATUS.INCIDENT_STATUS_SK) AND (AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_SK = AT_INCIDENT.ESTABLISHMENT_SK) AND (AT_INCIDENT_DATE.DATE_SK = AT_INCIDENT.INCIDENT_DATE_SK) AND (AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK <> 'DUP') AND (AT_INCIDENT_TYPE.INCIDENT_TYPE_SK = AT_INCIDENT.INCIDENT_TYPE_SK) AND (AT_INCIDENT_STATUS.INCIDENT_STATUS_ID_NK <> 'DUP') AND (((TO_DATE(TO_CHAR(AT_INCIDENT_DATE.DAY_DATE, 'DD/MM/YYYY'), 'DD/MM/YYYY')) BETWEEN TO_DATE('01-11-2009 00:00:00', 'DD-MM-YYYY HH24:MI:SS') AND TO_DATE('30-11-2009 00:00:00', 'DD-MM-YYYY HH24:MI:SS')) AND (AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_CODE_NK IN ('G4', (SELECT establishment_code FROM prompt_), 'G5', 'G2', 'G2', 'G1') OR 'All' IN ('G4', (SELECT establishment_code FROM prompt_), 'G5', 'G2', 'G2', 'G1'))) GROUP BY AT_INCIDENT_ESTABLISHMENT.ESTABLISHMENT_DESCRIPTION, INITCAP(AT_INCIDENT_TYPE.INCIDENT_TYPE_DESC)), dataset_ AS (SELECT ESTABLISHMENT_DESCRIPTION, INCIDENT_TYPE, NUMBER_OF_INCIDENTS FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "ESTABLISHMENT_DESCRIPTION",
            "type": "string",
            "display": "Incident Establishment Name",
            "legacyId": "DP2.DO20",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "INCIDENT_TYPE",
            "type": "string",
            "display": "Incident Type",
            "legacyId": "DP2.DO9",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "NUMBER_OF_INCIDENTS",
            "type": "double",
            "display": "Number of Incidents",
            "legacyId": "DP2.DOc9",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375377/DP5",
      "name": "All Incidents",
      "description": "MIS Incidents",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT InitCap(DT_ALL_INCIDENTS.INCIDENT_TYPE_DESC), DT_ALL_INCIDENTS.ESTABLISHMENT_DESCRIPTION FROM ( -- THIS TABLE RETURNS A CARTESIAN PRODUCT THAT SHOWS ALL INCIDENTS MAPPED TO ALL ESTABLISHMENTS. -- ITS PURPOSE IS TO FACILITATE A CROSS TAB FORMAT IN INC0001 (I.E. DISPLAY A COUNT OF ZERO AGAINST AN INCIDENT THAT HAS NO OCCOURED IN A PARTICULAR ESTABLISHMENT SELECT DISTINCT a.INCIDENT_TYPE_CODE_NK, a.INCIDENT_TYPE_DESC, b.ESTABLISHMENT_CODE_NK, b.ESTABLISHMENT_DESCRIPTION, b.AREA_DESCRIPTION FROM BODIMIS.DIM_INCIDENT_TYPE a, BODIMIS.DIM_ESTABLISHMENT b WHERE b.ESTABLISHMENT_SK > 0 AND b.AREA_DESCRIPTION != ('Unknown') AND b.ACTIVE_FLAG = 'Y' AND a.INCIDENT_TYPE_SK > 0 ) DT_ALL_INCIDENTS WHERE ( DT_ALL_INCIDENTS.ESTABLISHMENT_CODE_NK IN ('G4',(SELECT establishment_code from prompt_),'G5','G2','G2','G1') OR 'All' IN ('G4',(SELECT establishment_code from prompt_),'G5','G2','G2','G1') )), dataset_ AS (SELECT FROM dataset_base_)",
      "parameters": [
        {
          "index": 0,
          "name": "establishment_code",
          "filterType": "autocomplete",
          "reportFieldType": "string",
          "display": "Establishment",
          "description": "(SELECT establishment_code from prompt_)",
          "mandatory": "true",
          "referenceType": "establishment"
        }
      ],
      "schema": {
        "field": []
      }
    },
    {
      "id": "3376639/DP6",
      "name": "MIS End Date",
      "description": "MIS Demographics",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT TRUNC(BODIMIS.ETL_LOAD_LOG.LOAD_END_DATETIME) AS LOAD_END_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT LOAD_END_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "LOAD_END_DATE",
            "type": "date",
            "display": "Load End Date",
            "legacyId": "DP6.DO4dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "134172.RS",
      "name": "Incidents by Incident Type and Establishment",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375377/DP2",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-section",
        "field": [
          {
            "name": "$ref:NUMBER_OF_INCIDENTS",
            "display": "Number of Incidents",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP2.DOc9"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "type": "enhanced",
      "error": "dataset::fixSqlFormatting sql is not valid [Expected table name but got None. Line 1, Col: 111.\n  TINCT InitCap(DT_ALL_INCIDENTS.INCIDENT_TYPE_DESC), DT_ALL_INCIDENTS.ESTABLISHMENT_DESCRIPTION FROM \u001b[4m(\u001b[0m -- THIS TABLE RETURNS A CARTESIAN PRODUCT THAT SHOWS ALL INCIDENTS MAPPED TO ALL ESTABLISHMENTS. --]",
      "entityId": "okR1aKsACg4FOiYALhOD8K7B_Qc",
      "entityType": "dpd"
    },
    {
      "type": "schema",
      "error": "Dataset does not have any schema fields (comments -- in query)",
      "entityId": "3375377/DP5",
      "entityType": "dataset"
    },
    {
      "type": "athenQuery",
      "error": "unable to generate test sql",
      "entityId": "3375377/DP5",
      "entityType": "dataset"
    }
  ]
}