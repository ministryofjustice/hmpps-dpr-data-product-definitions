{
  "id": "kleHrBQADrQ9V04A0.8AFE.rcVQ",
  "name": "MIS Adult HMP Establishments Population Breakdown",
  "description": "IOP0001 v2.0 Last Modified: 30/01/2023 This HM Inspectorate of Prison report provides the population breakdown report for establishments housing same gender adults and young adults. (Do not use this report if your establishment has a split population e.g. is both an HMP and a YOI or houses both men and women.)",
  "metadata": {
    "version": "1.0.0",
    "tags": [
      "IOP0001 v2.0"
    ]
  },
  "datasource": [
    {
      "id": "bodmis",
      "name": "BODMIS",
      "database": "DIGITAL_PRISON_REPORTING",
      "catalog": "bodmis"
    }
  ],
  "dataset": [
    {
      "id": "3375368/DP4",
      "name": "Prisoners",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.IN_OUT, FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12) AS OFFENDER_AGE, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 18 THEN 'Juvenile' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 20 THEN '18 - 20 yr olds' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 21 THEN '21 and over' END AS ADULT_AGE_BANDING, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'White: Gypsy or Irish Traveller' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION END AS ETHNIC_DESCRIPTION, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('O9', 'O2') THEN 'Other ethnic group' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('B1', 'B2', 'B9') THEN 'Black or Black British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('A1', 'A2', 'A3', 'A4', 'A9', 'O1') THEN 'Asian or Asian British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('M1', 'M2', 'M3', 'M9') THEN 'Mixed' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('W1', 'W2', 'W3', 'W8', 'W9') THEN 'White' END AS IOP_ETHNIC_GROUPING, CASE WHEN AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassified' ELSE AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL END AS CURRENT_SECURITY_CATEGORY, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Life' WHEN SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '99' THEN 'Life' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'No sentence' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 6 THEN 'Less than 6 Months' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 12 THEN '6 Months to less than 1 Year' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) <> '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 2 THEN '1 Year to less than 2 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 3 THEN '2 Years to less than 3 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 4 THEN '3 Years to less than 4 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02', '03') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 10 THEN '4 Years to less than 10 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) >= 10 THEN '10 Years or more and Less than Life' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'No sentence' ELSE 'Not Categorised' END AS CURRENT_SENTENCE_LENGTH_BAND, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 21 THEN 'Under 21' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 21 AND 29 THEN '21 years to 29 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 30 AND 39 THEN '30 years to 39 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 40 AND 49 THEN '40 years to 49 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 50 AND 59 THEN '50 years to 59 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 60 AND 69 THEN '60 years to 69 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 70 THEN '70 plus years' END AS ADULT_AGE_BAND_IN_YEARS, CASE WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE IN ('14FTR_ORA', '14FTRHDC_ORA', 'CUR_ORA', 'FTR/08', 'FTR_HDC', 'FTR_HDC_ORA', 'FTR_ORA', 'FTR_SCH15', 'FTRSCH15_ORA', 'HDR_ORA', 'LR', 'LR_ALP', 'LR_ALP_LASPO', 'LR_DLP', 'LR_DPP', 'LR_EPP', 'LR_ES', 'LR_HDC', 'LR_IPP', 'LR_LASPO_AR', 'LR_LASPO_DR', 'LR_LIFE', 'LR_MLP', 'LR_ORA', 'LR_SEC236A', 'LR_SEC91_ORA', 'LR_YOI', 'LR_YOI_ORA', 'FTRSCH18_ORA', 'FTRSCH18', 'LR_EDS18', 'LR_EDS21', 'LR_SOPC18', 'LR_SOPC21', 'LRSEC250_ORA', 'LR_ALP_CDE18', 'LR_ALP_CDE21', 'LR_EDSU18') THEN 'Recall' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND = '0' THEN 'Dead' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND = '1' THEN 'Indeterminate Sentence' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('2', '3') THEN 'Sentenced' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('4', '5', '6', '7') THEN 'Convicted Unsentenced' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('9', '10') OR AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE = 'CIV_RMD' THEN 'Civil Prisoner' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('8', '11') THEN 'Immigration Detainee' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('12', '13', '14') THEN 'Remand' WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE = 'UNKNOWN' THEN 'Unknown' ELSE 'Other' END AS LEGAL_STATUS_GROUPING, CASE WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE IN ('IPP', 'LR_IPP') THEN 'Y' ELSE 'N' END AS IS_ISPP_, CASE WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE = 'BRIT' THEN 'British' WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE IN ('UNKNOWN', 'REF', 'STATE') THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE IS NULL THEN 'Not stated' ELSE 'Foreign nationals' END AS NATIONALITY_GROUPING, CASE WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IS NULL THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'BAPT' THEN 'Baptist' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('COFE', 'COFI') THEN 'Church of England' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'RC' THEN 'Roman Catholic' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'SIKH' THEN 'Sikh' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'UNKN' THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'BUDD' THEN 'Buddhist' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'HIND' THEN 'Hindu' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'JEW' THEN 'Jewish' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('BLAC', 'SHIA', 'SUNI', 'MOS') THEN 'Muslim' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('AGNO', 'ATHE', 'NIL') THEN 'No religion' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('BAHA', 'DRU', 'HARE', 'JAIN', 'NONP', 'OTH', 'PAG', 'PARS', 'RAST', 'SATN', 'SCIE', 'SHIN', 'TAO', 'ZORO') THEN 'Other' ELSE 'Other Christian denominations' END AS IOP_RELIGION_GROUPING, DT_MAPPA.MAPPA_ALERT, CASE WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 1 THEN 'Less than 1 month' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 1 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 3 THEN '1 month to 3 months' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 3 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 6 THEN '3 months to 6 months' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 6 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 12 THEN '6 months to 1 year' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 12 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 24 THEN '1 year to 2 years' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 24 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 48 THEN '2 years to 4 years' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 48 THEN '4 years or more' END AS LENGTH_OF_STAY, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Sentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'Unsentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'Unsentenced' ELSE 'Sentenced' END AS SENTENCED_, DT_ALL_LOCATIONS.LOCATION_DESC, DT_ADMISSION.MOVEMENT_TIME, AT_ESTABLISHMENT_TAP.ESTABLISHMENT_DESCRIPTION, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, FACT_CURR_KEY_DATES_SENT.SED, COUNT(DISTINCT (AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY)) AS COUNT_OF_OFFENDERS, TRUNC(CURRENT_TIMESTAMP) AS TODAY_, AT_OFFENDER_BOOKING.FIRST_NAME FROM (SELECT establishment_sk AS LOCATION_SK, establishment_description AS LOCATION_DESC, 'Establishment' AS LOCATION_TYPE FROM bodimis.dim_establishment UNION SELECT court_sk, court_description, 'Court' FROM bodimis.dim_court UNION SELECT probation_office_sk, prob_office_description, 'Probation Office' FROM bodimis.dim_probation_office UNION SELECT outside_location_sk, outside_location_description, 'Outside Location' FROM bodimis.dim_outside_location) DT_ALL_LOCATIONS, (SELECT ob.offender_id_display, fme.offender_booking_sk, est.establishment_code_nk, fme.to_location_sk, fme.from_location_sk, fme.from_location_type, MAX(fme.MOVEMENT_SEQ) AS MOVEMENT_SEQ, MAX(d.day_date) AS MOVEMENT_TIME, TRUNC(ETL.LOAD_END_DATETIME) AS LOAD_DATE FROM BODIMIS.FACT_MOVEMENT_EXTERNAL fme, BODIMIS.DIM_OFFENDER_BOOKING ob, BODIMIS.DIM_ESTABLISHMENT est, BODIMIS.ETL_LOAD_LOG ETL, BODIMIS.DIM_DATE d WHERE ob.ESTABLISHMENT_SK = est.ESTABLISHMENT_SK AND d.date_sk = fme.date_sk AND fme.offender_booking_sk = ob.offender_booking_sk AND ob.active_status IN ('Active In', 'Active Out') AND ob.MIS_CURRENT_RECORD_IND = 'Y' AND ob.ACTIVE_FLAG = 'Y' AND ETL.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL) AND ob.ESTABLISHMENT_SK = fme.to_location_sk AND fme.movement_seq = (SELECT MAX(fme2.movement_seq) FROM BODIMIS.FACT_MOVEMENT_EXTERNAL fme2 WHERE fme.offender_booking_sk = fme2.offender_booking_sk AND fme2.direction_code = 'IN' AND fme2.TYPE = 'Admission' AND fme2.To_location_type = 'Establishment' AND fme2.reason_code <> 'R') GROUP BY ob.offender_id_display, fme.offender_booking_sk, est.establishment_code_nk, fme.to_location_sk, fme.from_location_sk, fme.from_location_type, ETL.LOAD_END_DATETIME) DT_ADMISSION, BODIMIS.DIM_CELL AT_DIM_LOCATION, BODIMIS.DIM_ESTABLISHMENT AT_ESTABLISHMENT_TAP, BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES, BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.DIM_DATE AT_DOB, BODIMIS.DIM_OFFENDER_ASSESSMENT AT_CURRENT_SECURITY_CATEGORY, (SELECT DISTINCT BODIMIS.FACT_CASE_SENTENCE_TERM.offender_booking_sk, BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG FROM BODIMIS.FACT_CASE_SENTENCE_TERM, BODIMIS.FACT_CASE_SENTENCE, BODIMIS.DIM_SENTENCE_STATUS dss WHERE (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_STATUS_SK = dss.sentence_status_sk) AND dss.sentence_status = 'Active' AND (BODIMIS.FACT_CASE_SENTENCE.OFFENDER_BOOKING_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.OFFENDER_BOOKING_SK) AND (BODIMIS.FACT_CASE_SENTENCE.SENTENCE_SEQ_NK = BODIMIS.FACT_CASE_SENTENCE_TERM.SENTENCE_SEQ_NK) AND (BODIMIS.FACT_CASE_SENTENCE.COURT_CASE_SK = BODIMIS.FACT_CASE_SENTENCE_TERM.COURT_CASE_SK) AND BODIMIS.FACT_CASE_SENTENCE_TERM.LIFE_SENTENCE_FLAG = 'Y') DT_LIFEFLAG, FACT_CURR_KEY_DATES_SENT, (SELECT DISTINCT AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK, CASE WHEN AT_ALERT.ALERT_CODE_NK IN ('P0', 'P1', 'P2', 'P3', 'P4') THEN 'Y' ELSE NULL END AS MAPPA_ALERT FROM BODIMIS.DIM_OFFENDER_BOOKING AT_OFFENDER_BOOKING, BODIMIS.FACT_OFFENDER_ALERT AT_OFFENDER_ALERT, BODIMIS.DIM_ALERT AT_ALERT WHERE AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = AT_OFFENDER_ALERT.OFFENDER_BOOKING_SK AND AT_ALERT.ALERT_SK = AT_OFFENDER_ALERT.ALERT_SK AND AT_ALERT.ALERT_ACTIVE_FLAG = 'Y' AND AT_OFFENDER_ALERT.ALERT_STATUS = 'ACTIVE' AND AT_ALERT.ALERT_CODE_NK IN ('P0', 'P1', 'P2', 'P3', 'P4')) DT_MAPPA WHERE (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_LIFEFLAG.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = FACT_CURR_KEY_DATES_SENT.OFFENDER_BOOKING_SK (+)) AND (AT_OFFENDER_BOOKING.BIRTH_DATE_SK = AT_DOB.DATE_SK) AND (AT_DIM_ETHNICITY_CODES.CODE (+) = AT_OFFENDER_BOOKING.ETHNICITY_CODE) AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK IN (SELECT CSL.OFFENDER_BOOKING_SK FROM BODIMIS.DIM_STAFF_ACCESSIBLE_CASELOAD SAC, BODIMIS.DIM_CASELOAD_SECURITY_LIST CSL WHERE SAC.CASELOAD_ID = CSL.CASELOAD_CODE AND SAC.USERNAME = (SELECT username FROM context_) AND CSL.ENDYEAR >= TO_CHAR(CURRENT_TIMESTAMP, 'YYYY') - 6)) AND (AT_OFFENDER_BOOKING.ESTABLISHMENT_SK = AT_ESTABLISHMENT_TAP.ESTABLISHMENT_SK) AND (AT_ESTABLISHMENT_TAP.ACTIVE_FLAG = 'Y') AND (AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK = DT_ADMISSION.OFFENDER_BOOKING_SK (+)) AND (DT_ADMISSION.FROM_LOCATION_SK = DT_ALL_LOCATIONS.LOCATION_SK (+) AND DT_ADMISSION.FROM_LOCATION_TYPE = DT_ALL_LOCATIONS.LOCATION_TYPE (+)) AND (AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_FLAG (+) = 'Y') AND (AT_CURRENT_SECURITY_CATEGORY.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND (AT_OFFENDER_BOOKING.LIVING_UNIT_SK = AT_DIM_LOCATION.UNIT_4_SK (+)) AND (DT_MAPPA.OFFENDER_BOOKING_SK (+) = AT_OFFENDER_BOOKING.OFFENDER_BOOKING_SK) AND ((AT_OFFENDER_BOOKING.BOOKING_STATUS = 'O') AND (AT_OFFENDER_BOOKING.MIS_CURRENT_RECORD_IND = 'Y') AND (AT_ESTABLISHMENT_TAP.ESTABLISHMENT_CODE_NK IN ('All') OR 'All' IN ('All'))) GROUP BY AT_OFFENDER_BOOKING.OFFENDER_ID_DISPLAY, AT_OFFENDER_BOOKING.SURNAME, AT_OFFENDER_BOOKING.IN_OUT, FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12), CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 18 THEN 'Juvenile' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 18 AND 20 THEN '18 - 20 yr olds' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 21 THEN '21 and over' END, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'White: Gypsy or Irish Traveller' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION END, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('O9', 'O2') THEN 'Other ethnic group' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('B1', 'B2', 'B9') THEN 'Black or Black British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('A1', 'A2', 'A3', 'A4', 'A9', 'O1') THEN 'Asian or Asian British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('M1', 'M2', 'M3', 'M9') THEN 'Mixed' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('W1', 'W2', 'W3', 'W8', 'W9') THEN 'White' END, CASE WHEN AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL IS NULL THEN 'Unclassified' ELSE AT_CURRENT_SECURITY_CATEGORY.CURRENT_SEC_CAT_LEVEL END, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Life' WHEN SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '99' THEN 'Life' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'No sentence' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 6 THEN 'Less than 6 Months' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) = '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 4, 2)) < 12 THEN '6 Months to less than 1 Year' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) <> '00' AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 2 THEN '1 Year to less than 2 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 3 THEN '2 Years to less than 3 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 4 THEN '3 Years to less than 4 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND NOT SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2) IN ('00', '01', '02', '03') AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) < 10 THEN '4 Years to less than 10 Years' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND TO_NUMBER(SUBSTR(FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH, 1, 2)) >= 10 THEN '10 Years or more and Less than Life' WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG IS NULL AND FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'No sentence' ELSE 'Not Categorised' END, CASE WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) < 21 THEN 'Under 21' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 21 AND 29 THEN '21 years to 29 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 30 AND 39 THEN '30 years to 39 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 40 AND 49 THEN '40 years to 49 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 50 AND 59 THEN '50 years to 59 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) BETWEEN 60 AND 69 THEN '60 years to 69 years' WHEN (FLOOR((MONTHS_BETWEEN((TRUNC(CURRENT_TIMESTAMP)), (CASE WHEN AT_DOB.DAY_DATE < '31/12/9000' THEN AT_DOB.DAY_DATE END))) / 12)) >= 70 THEN '70 plus years' END, CASE WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE IN ('14FTR_ORA', '14FTRHDC_ORA', 'CUR_ORA', 'FTR/08', 'FTR_HDC', 'FTR_HDC_ORA', 'FTR_ORA', 'FTR_SCH15', 'FTRSCH15_ORA', 'HDR_ORA', 'LR', 'LR_ALP', 'LR_ALP_LASPO', 'LR_DLP', 'LR_DPP', 'LR_EPP', 'LR_ES', 'LR_HDC', 'LR_IPP', 'LR_LASPO_AR', 'LR_LASPO_DR', 'LR_LIFE', 'LR_MLP', 'LR_ORA', 'LR_SEC236A', 'LR_SEC91_ORA', 'LR_YOI', 'LR_YOI_ORA', 'FTRSCH18_ORA', 'FTRSCH18', 'LR_EDS18', 'LR_EDS21', 'LR_SOPC18', 'LR_SOPC21', 'LRSEC250_ORA', 'LR_ALP_CDE18', 'LR_ALP_CDE21', 'LR_EDSU18') THEN 'Recall' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND = '0' THEN 'Dead' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND = '1' THEN 'Indeterminate Sentence' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('2', '3') THEN 'Sentenced' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('4', '5', '6', '7') THEN 'Convicted Unsentenced' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('9', '10') OR AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE = 'CIV_RMD' THEN 'Civil Prisoner' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('8', '11') THEN 'Immigration Detainee' WHEN AT_OFFENDER_BOOKING.LEGAL_STATUS_BAND IN ('12', '13', '14') THEN 'Remand' WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE = 'UNKNOWN' THEN 'Unknown' ELSE 'Other' END, CASE WHEN AT_OFFENDER_BOOKING.MAIN_LEGAL_STATUS_CODE IN ('IPP', 'LR_IPP') THEN 'Y' ELSE 'N' END, CASE WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE = 'BRIT' THEN 'British' WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE IN ('UNKNOWN', 'REF', 'STATE') THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.NATIONALITY_CODE IS NULL THEN 'Not stated' ELSE 'Foreign nationals' END, CASE WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IS NULL THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'BAPT' THEN 'Baptist' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('COFE', 'COFI') THEN 'Church of England' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'RC' THEN 'Roman Catholic' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'SIKH' THEN 'Sikh' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'UNKN' THEN 'Not stated' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'BUDD' THEN 'Buddhist' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'HIND' THEN 'Hindu' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE = 'JEW' THEN 'Jewish' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('BLAC', 'SHIA', 'SUNI', 'MOS') THEN 'Muslim' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('AGNO', 'ATHE', 'NIL') THEN 'No religion' WHEN AT_OFFENDER_BOOKING.RELIGION_CODE IN ('BAHA', 'DRU', 'HARE', 'JAIN', 'NONP', 'OTH', 'PAG', 'PARS', 'RAST', 'SATN', 'SCIE', 'SHIN', 'TAO', 'ZORO') THEN 'Other' ELSE 'Other Christian denominations' END, DT_MAPPA.MAPPA_ALERT, CASE WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 1 THEN 'Less than 1 month' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 1 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 3 THEN '1 month to 3 months' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 3 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 6 THEN '3 months to 6 months' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 6 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 12 THEN '6 months to 1 year' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 12 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 24 THEN '1 year to 2 years' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 24 AND MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) < 48 THEN '2 years to 4 years' WHEN MONTHS_BETWEEN(DT_ADMISSION.LOAD_DATE, DT_ADMISSION.MOVEMENT_TIME) >= 48 THEN '4 years or more' END, CASE WHEN DT_LIFEFLAG.LIFE_SENTENCE_FLAG = 'Y' THEN 'Sentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH = '00/00/00' THEN 'Unsentenced' WHEN FACT_CURR_KEY_DATES_SENT.EFFECTIVE_SENTENCE_LENGTH IS NULL THEN 'Unsentenced' ELSE 'Sentenced' END, DT_ALL_LOCATIONS.LOCATION_DESC, DT_ADMISSION.MOVEMENT_TIME, AT_ESTABLISHMENT_TAP.ESTABLISHMENT_DESCRIPTION, AT_DIM_LOCATION.UNIT_4_SHORT_DESCRIPTION, FACT_CURR_KEY_DATES_SENT.SED, TRUNC(CURRENT_TIMESTAMP), AT_OFFENDER_BOOKING.FIRST_NAME), dataset_ AS (SELECT OFFENDER_ID_DISPLAY, SURNAME, IN_OUT, OFFENDER_AGE, ADULT_AGE_BANDING, ETHNIC_DESCRIPTION, IOP_ETHNIC_GROUPING, CURRENT_SECURITY_CATEGORY, CURRENT_SENTENCE_LENGTH_BAND, ADULT_AGE_BAND_IN_YEARS, LEGAL_STATUS_GROUPING, IS_ISPP_, NATIONALITY_GROUPING, IOP_RELIGION_GROUPING, MAPPA_ALERT, LENGTH_OF_STAY, SENTENCED_, LOCATION_DESC, MOVEMENT_TIME, ESTABLISHMENT_DESCRIPTION, UNIT_4_SHORT_DESCRIPTION, SED, COUNT_OF_OFFENDERS, TODAY_, FIRST_NAME, CASE WHEN INSPEC_AGE_BAND = 'Juvenile' THEN 'Other' ELSE INSPEC_AGE_BAND END AS V_AGEBANDING, CASE WHEN SENTENCE_BAND = 'No sentence' THEN 'Unsentenced' ELSE SENTENCE_BAND END AS V_IOPSENTENCEBAND FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "OFFENDER_ID_DISPLAY",
            "type": "string",
            "display": "NOMS Number",
            "legacyId": "DP4.DO10076",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "SURNAME",
            "type": "string",
            "display": "Offender Surname",
            "legacyId": "DP4.DO1007b",
            "legacySqlClass": "column"
          },
          {
            "index": 2,
            "name": "IN_OUT",
            "type": "string",
            "display": "In Out",
            "legacyId": "DP4.DO104d4",
            "legacySqlClass": "column"
          },
          {
            "index": 3,
            "name": "OFFENDER_AGE",
            "type": "double",
            "display": "Offender Age",
            "legacyId": "DP4.DO10082",
            "legacySqlClass": "column"
          },
          {
            "index": 4,
            "name": "ADULT_AGE_BANDING",
            "type": "string",
            "display": "Adult Age Banding",
            "legacyId": "DP4.DO107bd",
            "legacySqlClass": "column"
          },
          {
            "index": 5,
            "name": "ETHNIC_DESCRIPTION",
            "type": "string",
            "display": "Ethnic Description",
            "legacyId": "DP4.DO1009d",
            "legacySqlClass": "column"
          },
          {
            "index": 6,
            "name": "IOP_ETHNIC_GROUPING",
            "type": "string",
            "display": "IOP Ethnic Grouping",
            "legacyId": "DP4.DO107c0",
            "legacySqlClass": "column"
          },
          {
            "index": 7,
            "name": "CURRENT_SECURITY_CATEGORY",
            "type": "string",
            "display": "Current Security Category",
            "legacyId": "DP4.DO100e1",
            "legacySqlClass": "column"
          },
          {
            "index": 8,
            "name": "CURRENT_SENTENCE_LENGTH_BAND",
            "type": "string",
            "display": "Current Sentence Length Band",
            "legacyId": "DP4.DO1ef",
            "legacySqlClass": "column"
          },
          {
            "index": 9,
            "name": "ADULT_AGE_BAND_IN_YEARS",
            "type": "string",
            "display": "Adult Age Band in Years",
            "legacyId": "DP4.DO107bc",
            "legacySqlClass": "column"
          },
          {
            "index": 10,
            "name": "LEGAL_STATUS_GROUPING",
            "type": "string",
            "display": "Legal Status Grouping",
            "legacyId": "DP4.DO107cb",
            "legacySqlClass": "column"
          },
          {
            "index": 11,
            "name": "IS_ISPP_",
            "type": "string",
            "display": "Is ISPP?",
            "legacyId": "DP4.DO10ad3",
            "legacySqlClass": "column"
          },
          {
            "index": 12,
            "name": "NATIONALITY_GROUPING",
            "type": "string",
            "display": "Nationality Grouping",
            "legacyId": "DP4.DO107be",
            "legacySqlClass": "column"
          },
          {
            "index": 13,
            "name": "IOP_RELIGION_GROUPING",
            "type": "string",
            "display": "IOP Religion Grouping",
            "legacyId": "DP4.DO107cd",
            "legacySqlClass": "column"
          },
          {
            "index": 14,
            "name": "MAPPA_ALERT",
            "type": "string",
            "display": "MAPPA Alert",
            "legacyId": "DP4.DO10ad4",
            "legacySqlClass": "column"
          },
          {
            "index": 15,
            "name": "LENGTH_OF_STAY",
            "type": "string",
            "display": "Length of Stay",
            "legacyId": "DP4.DO107cf",
            "legacySqlClass": "column"
          },
          {
            "index": 16,
            "name": "SENTENCED_",
            "type": "string",
            "display": "Sentenced?",
            "legacyId": "DP4.DO5d6",
            "legacySqlClass": "column"
          },
          {
            "index": 17,
            "name": "LOCATION_DESC",
            "type": "string",
            "display": "Previous Location on Admission",
            "legacyId": "DP4.DO10805",
            "legacySqlClass": "column"
          },
          {
            "index": 18,
            "name": "MOVEMENT_TIME",
            "type": "date",
            "display": "Admission Date",
            "legacyId": "DP4.DO107ce",
            "legacySqlClass": "column"
          },
          {
            "index": 19,
            "name": "ESTABLISHMENT_DESCRIPTION",
            "type": "string",
            "display": "Associated Establishment Name",
            "legacyId": "DP4.DO107b1",
            "legacySqlClass": "column"
          },
          {
            "index": 20,
            "name": "UNIT_4_SHORT_DESCRIPTION",
            "type": "string",
            "display": "Prisoner Location",
            "legacyId": "DP4.DO10a7c",
            "legacySqlClass": "column"
          },
          {
            "index": 21,
            "name": "SED",
            "type": "date",
            "display": "SED (Sentence End Date)",
            "legacyId": "DP4.DO46",
            "legacySqlClass": "column"
          },
          {
            "index": 22,
            "name": "COUNT_OF_OFFENDERS",
            "type": "double",
            "display": "Count of Offenders",
            "legacyId": "DP4.DO10655",
            "legacySqlClass": "column"
          },
          {
            "index": 23,
            "name": "TODAY_",
            "type": "date",
            "display": "Today (Date Only)",
            "legacyId": "DP4.DO104cd",
            "legacySqlClass": "column"
          },
          {
            "index": 24,
            "name": "FIRST_NAME",
            "type": "string",
            "display": "Offender Given Name 1",
            "legacyId": "DP4.DO10080",
            "legacySqlClass": "column"
          },
          {
            "index": 25,
            "name": "V_AGEBANDING",
            "type": "string",
            "display": "V_AGEBANDING",
            "legacyId": "???",
            "legacySqlClass": "alias"
          },
          {
            "index": 26,
            "name": "V_IOPSENTENCEBAND",
            "type": "string",
            "display": "V_IOPSENTENCEBAND",
            "legacyId": "???",
            "legacySqlClass": "alias"
          }
        ]
      }
    },
    {
      "id": "3375368/DP1d",
      "name": "Sentence Bands",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_SENTENCE_BAND.SENTENCE_BAND FROM (SELECT 'Less than 6 Months' AS Sentence_Band FROM DUAL UNION SELECT '6 Months to less than 1 Year' AS Sentence_Band FROM DUAL UNION SELECT '1 Year to less than 2 Years' AS Sentence_Band FROM DUAL UNION SELECT '2 Years to less than 3 Years' AS Sentence_Band FROM DUAL UNION SELECT '3 Years to less than 4 Years' AS Sentence_Band FROM DUAL UNION SELECT '4 Years to less than 10 Years' AS Sentence_Band FROM DUAL UNION SELECT '10 Years or more and Less than Life' AS Sentence_Band FROM DUAL UNION SELECT 'Life' AS Sentence_Band FROM DUAL UNION SELECT 'No sentence' AS Sentence_Band FROM DUAL) DT_SENTENCE_BAND), dataset_ AS (SELECT SENTENCE_BAND FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "SENTENCE_BAND",
            "type": "string",
            "display": "IOP Sentence Band",
            "legacyId": "DP1d.DO379",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP24",
      "name": "Ethnicity",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Code Missing' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'W8' THEN 'White: Gypsy or Irish Traveller' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'O1' THEN 'Asian/Asian British: Chinese' ELSE AT_DIM_ETHNICITY_CODES.DESCRIPTION END AS ETHNIC_DESCRIPTION, CASE WHEN AT_DIM_ETHNICITY_CODES.CODE = 'MERGE' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IS NULL THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('O9', 'O2') THEN 'Other ethnic group' WHEN AT_DIM_ETHNICITY_CODES.CODE = 'NS' THEN 'Not stated' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('B1', 'B2', 'B9') THEN 'Black or Black British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('A1', 'A2', 'A3', 'A4', 'A9', 'O1') THEN 'Asian or Asian British' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('M1', 'M2', 'M3', 'M9') THEN 'Mixed' WHEN AT_DIM_ETHNICITY_CODES.CODE IN ('W1', 'W2', 'W3', 'W8', 'W9') THEN 'White' END AS IOP_ETHNIC_GROUPING FROM BODIMIS.DIM_ETHNICITY_CODES AT_DIM_ETHNICITY_CODES), dataset_ AS (SELECT ETHNIC_DESCRIPTION, IOP_ETHNIC_GROUPING FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "ETHNIC_DESCRIPTION",
            "type": "string",
            "display": "Ethnic Description",
            "legacyId": "DP24.DO1009d",
            "legacySqlClass": "column"
          },
          {
            "index": 1,
            "name": "IOP_ETHNIC_GROUPING",
            "type": "string",
            "display": "IOP Ethnic Grouping",
            "legacyId": "DP24.DO107c0",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP26",
      "name": "Nationalities",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_NATIONALITY_GROUPING.NATIONALITY_GROUPING FROM (SELECT 'British' AS Nationality_Grouping FROM DUAL UNION SELECT 'Foreign nationals' AS Nationality_Grouping FROM DUAL UNION SELECT 'Not stated' AS Nationality_Grouping FROM DUAL) DT_NATIONALITY_GROUPING), dataset_ AS (SELECT NATIONALITY_GROUPING FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "NATIONALITY_GROUPING",
            "type": "string",
            "display": "IOP Nationality Grouping",
            "legacyId": "DP26.DO107c3",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP27",
      "name": "Religions",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_REL_CATEGORY.REL_CAT FROM (SELECT 'Baptist' AS REL_CAT FROM DUAL UNION SELECT 'Church of England' AS REL_CAT FROM DUAL UNION SELECT 'Roman Catholic' AS REL_CAT FROM DUAL UNION SELECT 'Other Christian denominations' AS REL_CAT FROM DUAL UNION SELECT 'Muslim' AS REL_CAT FROM DUAL UNION SELECT 'Sikh' AS REL_CAT FROM DUAL UNION SELECT 'Hindu' AS REL_CAT FROM DUAL UNION SELECT 'Buddhist' AS REL_CAT FROM DUAL UNION SELECT 'Jewish' AS REL_CAT FROM DUAL UNION SELECT 'Other' AS REL_CAT FROM DUAL UNION SELECT 'No religion' AS REL_CAT FROM DUAL UNION SELECT 'Not stated' AS REL_CAT FROM DUAL) DT_REL_CATEGORY), dataset_ AS (SELECT REL_CAT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "REL_CAT",
            "type": "string",
            "display": "IOP Religion",
            "legacyId": "DP27.DO107c8",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2a",
      "name": "Status",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_LEGAL_STATUS.STATUS_CAT FROM (SELECT 'Sentenced' AS STATUS_CAT FROM DUAL UNION SELECT 'Recall' AS STATUS_CAT FROM DUAL UNION SELECT 'Convicted unsentenced' AS STATUS_CAT FROM DUAL UNION SELECT 'Remand' AS STATUS_CAT FROM DUAL UNION SELECT 'Civil prisoners' AS STATUS_CAT FROM DUAL UNION SELECT 'Detainee' AS STATUS_CAT FROM DUAL) DT_LEGAL_STATUS), dataset_ AS (SELECT STATUS_CAT FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "STATUS_CAT",
            "type": "string",
            "display": "IOP Legal Status Grouping",
            "legacyId": "DP2a.DO107c6",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2c",
      "name": "Length of Stay",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_LOS.LENGTH_OF_STAY FROM (SELECT 'Less than 1 month' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '1 month to 3 months' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '3 months to 6 months' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '6 months to 1 year' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '1 year to 2 years' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '2 years to 4 years' AS LENGTH_OF_STAY FROM DUAL UNION SELECT '4 years or more' AS LENGTH_OF_STAY FROM DUAL) DT_LOS), dataset_ AS (SELECT LENGTH_OF_STAY FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "LENGTH_OF_STAY",
            "type": "string",
            "display": "IOP Length of Stay Grouping",
            "legacyId": "DP2c.DO107c7",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2d",
      "name": "Age Banding",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_AYP_AGE_BANDING.AGE_BANDING FROM (SELECT 'Under 21' AS AGE_BANDING FROM DUAL UNION SELECT '21 years to 29 years' AS AGE_BANDING FROM DUAL UNION SELECT '30 years to 39 years' AS AGE_GROUPING FROM DUAL UNION SELECT '40 years to 49 years' AS AGE_GROUPING FROM DUAL UNION SELECT '50 years to 59 years' AS AGE_GROUPING FROM DUAL UNION SELECT '60 years to 69 years' AS AGE_GROUPING FROM DUAL UNION SELECT '70 plus years' AS AGE_GROUPING FROM DUAL) DT_AYP_AGE_BANDING), dataset_ AS (SELECT AGE_BANDING FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "AGE_BANDING",
            "type": "string",
            "display": "IOP Age Grouping in Years",
            "legacyId": "DP2d.DO107c4",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP2f",
      "name": "Age Grouping",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_INSPEC_AYP_AGE_BANDS.INSPEC_AGE_BAND FROM (SELECT '18 - 20 yr olds' AS INSPEC_AGE_BAND FROM DUAL UNION SELECT '21 and over' AS INSPEC_AGE_BAND FROM DUAL UNION SELECT 'Juvenile' AS INSPEC_AGE_BAND FROM DUAL) DT_INSPEC_AYP_AGE_BANDS), dataset_ AS (SELECT INSPEC_AGE_BAND FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "INSPEC_AGE_BAND",
            "type": "string",
            "display": "IOP Age Grouping",
            "legacyId": "DP2f.DO107ca",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP36",
      "name": "Sentence Grp",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT DT_IS_SENTENCED.SENTENCE_GROUPING FROM (SELECT 'Sentenced' AS SENTENCE_GROUPING FROM DUAL UNION SELECT 'Unsentenced' AS SENTENCE_GROUPING FROM DUAL) DT_IS_SENTENCED), dataset_ AS (SELECT SENTENCE_GROUPING FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "SENTENCE_GROUPING",
            "type": "string",
            "display": "IOP Is Sentenced?",
            "legacyId": "DP36.DO5d8",
            "legacySqlClass": "column"
          }
        ]
      }
    },
    {
      "id": "3375368/DP37",
      "name": "MiS Load",
      "description": "MIS - Sentence",
      "datasource": "bodmis",
      "query": "dataset_base_ AS (SELECT DISTINCT BODIMIS.ETL_LOAD_LOG.BUSINESS_DATE FROM BODIMIS.ETL_LOAD_LOG WHERE (BODIMIS.ETL_LOAD_LOG.LOAD_ID = (SELECT MAX(LOAD_ID) FROM BODIMIS.ETL_LOAD_LOG WHERE NOT LOAD_END_DATETIME IS NULL))), dataset_ AS (SELECT BUSINESS_DATE FROM dataset_base_)",
      "parameters": [],
      "schema": {
        "field": [
          {
            "index": 0,
            "name": "BUSINESS_DATE",
            "type": "date",
            "display": "Latest Business Date Available",
            "legacyId": "DP37.DO104dd",
            "legacySqlClass": "column"
          }
        ]
      }
    }
  ],
  "policy": [
    {
      "id": "access",
      "type": "access",
      "rule": [
        {
          "effect": "permit",
          "condition": [
            {
              "match": [
                "${role}",
                "ROLE_PRISONS_REPORTING_USER"
              ]
            }
          ]
        }
      ]
    }
  ],
  "report": [
    {
      "id": "164584.RS",
      "name": "Summary",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list-tab",
        "field": [
          {
            "name": "$ref:V_AGEBANDING",
            "display": "=[Count of Offenders] Where([Is ISPP?]=\"Y\")",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([IOP Age Grouping]=\"Juvenile\";\"Other\";[IOP Age Grouping])"
          },
          {
            "name": "$ref:COUNT_OF_OFFENDERS",
            "display": "Count of Offenders",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP4.DO10655"
          },
          {
            "name": "$ref:V_IOPSENTENCEBAND",
            "display": "Life",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacySql": "=If([IOP Sentence Band]=\"No sentence\";\"Unsentenced\";[IOP Sentence Band])"
          }
        ]
      }
    },
    {
      "id": "163587.RS",
      "name": "Core Detail",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:UNIT_4_SHORT_DESCRIPTION",
            "display": "Prisoner Location",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10a7c"
          },
          {
            "name": "$ref:OFFENDER_ID_DISPLAY",
            "display": "NOMS Number",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10076"
          },
          {
            "name": "$ref:SURNAME",
            "display": "Offender Surname",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO1007b"
          },
          {
            "name": "$ref:FIRST_NAME",
            "display": "Offender Given Name 1",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10080"
          },
          {
            "name": "$ref:NATIONALITY_GROUPING",
            "display": "Nationality Grouping",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP4.DO107be"
          }
        ]
      }
    },
    {
      "id": "165269.RS",
      "name": "Core Detail with Establishment Name",
      "classification": "OFFICIAL",
      "version": "1.0.0",
      "render": "HTML",
      "dataset": "3375368/DP4",
      "feature": [
        {
          "type": "print"
        }
      ],
      "specification": {
        "template": "list",
        "field": [
          {
            "name": "$ref:UNIT_4_SHORT_DESCRIPTION",
            "display": "Prisoner Location",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10a7c"
          },
          {
            "name": "$ref:OFFENDER_ID_DISPLAY",
            "display": "NOMS Number",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10076"
          },
          {
            "name": "$ref:SURNAME",
            "display": "Offender Surname",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO1007b"
          },
          {
            "name": "$ref:FIRST_NAME",
            "display": "Offender Given Name 1",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO10080"
          },
          {
            "name": "$ref:NATIONALITY_GROUPING",
            "display": "Nationality Grouping",
            "formula": "",
            "visible": "true",
            "sortable": false,
            "defaultsort": false,
            "legacyId": "DP4.DO107be"
          },
          {
            "name": "$ref:ESTABLISHMENT_DESCRIPTION",
            "display": "Associated Establishment Name",
            "formula": "",
            "visible": "true",
            "sortable": true,
            "defaultsort": false,
            "legacyId": "DP4.DO107b1"
          }
        ]
      }
    }
  ],
  "errors": []
}